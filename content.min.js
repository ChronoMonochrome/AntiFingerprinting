// CyDec Platform Anti-Fp
// Copyright 2020 Heilig Defense
// https://www.heidef.com
// 1.2020.293.1530
function bs() {
    var L = void 0,
        O = 2,
        U = 0,
        F = null;
    try {
        if (((L = getck("yGcQbNznjf")), "" != L && void 0 != L)) {
            var Y = L.split("|");
            if (4 == Y.length && ((U = Y[1]), "" != Y[3])) {
                var oa = atob(Y[3]);
                F = JSON.parse(oa);
                null != F && (O = parseInt(Y[0], 10));
            }
        }
    } catch (Ba) {}
    if (null == F || void 0 == F || 2 == O || 0 == F.PrimaryFlags || void 0 == F.SubFlags) return null;
    if (1 == U)
        (F.PrimaryFlags = BigInt(4) | BigInt(16) | BigInt(1024)),
            (F.SubFlags[BigInt(4)] = BigInt(1)),
            (F.SubFlags[BigInt(16)] = BigInt(2)),
            (F.SubFlags[BigInt(1024)] = BigInt(1) | BigInt(4) | BigInt(16) | BigInt(64) | BigInt(256) | BigInt(1024) | BigInt(4096) | BigInt(16384));
    else for (O = L = 1; 16 >= O; O++) (F.SubFlags[L] = void 0 != F.SubFlags[L] ? BigInt(F.SubFlags[L]) : void 0 != F.SubFlags[L] ? BigInt(F.SubFlags[L]) : BigInt(0)), (L *= 2);
    F.PrimaryFlags = BigInt(String(F.PrimaryFlags));
    oa = JSON.stringify(F, (Ba, V) => ("bigint" === typeof V || "int" == typeof V ? V.toString() : V));
    return btoa(oa);
}
function cs(L) {
    function O(a) {
        const b = Function.prototype.toString,
            c = new Proxy(Function.prototype.toString, {
                apply: function (g, d, e) {
                    if (d === Function.prototype.toString) return "function toString() { [native code] }";
                    if (-1 != d.name.indexOf("get ")) return "function " + d.name.substr(4).trim() + "() { [native code] }";
                    if (J.includes(d.name) || ba.includes(d.name)) return "function " + d.name + "() { [native code] }";
                    if ("" === d.name || "get" === d.name)
                        if (((g = g.call(d)), void 0 != g)) {
                            for (var f = 0; f < J.length; f++) if (-1 < g.indexOf(J[f])) return "function " + J[f] + "() { [native code] }";
                            for (f = 0; f < ba.length; f++) if (-1 < g.indexOf(ba[f])) return "function " + ba[f] + "() { [native code] }";
                        }
                    g = "";
                    try {
                        g = b.apply(d, e);
                    } catch (m) {}
                    return g;
                },
            });
        null == a ? (Function.prototype.toString = c) : void 0 != a.Function && void 0 != a.Function.prototype && (a.Function.prototype.toString = c);
    }
    function U(a, b) {
        var c = null;
        if (1 != b) {
            b = "Microsoft David - English (United States);Microsoft Mark - English (United States);Microsoft Zira - English (United States);Microsoft Aria Online (Natural) - English (United States);Microsoft Guy Online (Natural) - English (United States);Microsoft Xiaoxiao Online (Natural) - Chinese (Mainland);Microsoft Yunyang Online (Natural) - Chinese (Mainland);Microsoft HanHan Online - Chinese (Taiwan);Microsoft Tracy Online - Chinese (Hong Kong);Microsoft Nanami Online (Natural) - Japanese (Japan);Microsoft Libby Online (Natural) - English (United Kingdom);Microsoft Francisca Online (Natural) - Portuguese (Brazil);Microsoft Dalia Online (Natural) - Spanish (Mexico);Microsoft Priya Online - English (India);Microsoft Heather Online - English (Canada);Microsoft Sylvie Online (Natural) - French (Canada);Microsoft Denise Online (Natural) - French (France);Microsoft Katja Online (Natural) - German (Germany);Microsoft Ekaterina Online - Russian (Russia);Microsoft Hayley Online - English (Australia);Microsoft Elsa Online (Natural) - Italian (Italy);Microsoft SunHi Online (Natural) - Korean (Korea);Microsoft Hanna Online - Dutch (Netherlands);Microsoft Elvira Online (Natural) - Spanish (Spain);Microsoft Emel Online (Natural) - Turkish (Turkey);Microsoft Paulina Online - Polish (Poland);Microsoft David Desktop - English (United States);Microsoft Zira Desktop - English (United States);Google Deutsch;Google US English;Google UK English Female;Google UK English Male;Google espa\u00f1ol;Google espa\u00f1ol de Estados Unidos;Google fran\u00e7ais;Google \u0939\u093f\u0928\u094d\u0926\u0940;Google Bahasa Indonesia;Google italiano;Google \u65e5\u672c\u8a9e;Google \ud55c\uad6d\uc758;Google Nederlands;Google polski;Google portugu\u00eas do Brasil;Google \u0440\u0443\u0441\u0441\u043a\u0438\u0439;Google \u666e\u901a\u8bdd\uff08\u4e2d\u56fd\u5927\u9646\uff09;Google \u7ca4\u8a9e\uff08\u9999\u6e2f\uff09;Google \u570b\u8a9e\uff08\u81fa\u7063\uff09".split(
                ";"
            );
            c = [];
            for (var g = r(10, 20), d = 0; d < g; d++) {
                var e = { default: 0 };
                e.lang = ha[Math.floor(Math.random() * ha.length)];
                e.localService = r(0, 1);
                var f = b[Math.floor(Math.random() * b.length)];
                r(0, 2) % 2 ? 0 < f.indexOf("Online") && (f = f.replace("Online", "Desktop")) : 0 < f.indexOf("Desktop") && (f = f.replace("Desktop", "Online"));
                r(0, 2) % 2 && 0 == f.indexOf("Google") && (f = f + " (" + f.substr(7) + ")");
                e.name = f;
                e.voiceURI = f;
                c.push(e);
            }
        }
        a.getVoices = function () {
            v(BigInt(32), "Speech::getVoices");
            return c;
        };
        void 0 != a.getVoices && (Object.defineProperty(a.getVoices, "name", { value: "getVoices" }), (a.getVoices.toString = Function.prototype.toString));
    }
    function F(a, b) {
        var c = 0,
            g = 0,
            d = 0,
            e = 0;
        0 == b && ((c = 0 == r(0, 1)), (g = parseFloat(r(1, 100)) / 100), (d = r(0, 2e4)), (e = r(0, 2e4)));
        var f = function () {
            this.charging = c;
            this.chargingTime = d;
            this.dischargingTime = e;
            this.level = g;
            this.onlevelchange = this.ondischargingtimechange = this.onchargingtimechange = this.onchargingchange = null;
        };
        Object.defineProperty(Navigator.prototype, "getBattery", {
            enumerable: !0,
            configurable: !0,
            get: function () {
                return function () {
                    eval("/*getBattery*/ 0");
                    return new Promise(function (m) {
                        m(new f());
                    });
                };
            },
        });
        void 0 != Navigator.prototype.getBattery && (Object.defineProperty(Navigator.prototype.getBattery, "name", { value: "getBattery" }), (Navigator.prototype.getBattery.toString = Function.prototype.toString));
    }
    function Y(a, b) {
        if (b)
            Object.defineProperty(a, "connection", {
                enumerable: !0,
                configurable: !0,
                get: function () {
                    v(BigInt(16), "NetworkInfo::connection");
                    return null;
                },
            });
        else {
            b = "bluetooth cellular ethernet none wifi wimax other unknown".split(" ");
            var c = ["slow-2g", "2g", "3g", "4g"],
                g = b[Math.floor(Math.random() * b.length)],
                d = c[Math.floor(Math.random() * c.length)],
                e = r(1e6, 1e7);
            e += e % 25;
            var f = r(0, 1e3);
            f += f % 25;
            var m = 0 == r(0, 1),
                p = function () {
                    this.downlink = e;
                    this.downlinkMax = e + e;
                    this.type = g;
                    this.effectiveType = d;
                    this.rtt = f;
                    this.saveData = m;
                };
            Object.defineProperty(a, "connection", {
                enumerable: !0,
                configurable: !0,
                get: function () {
                    v(BigInt(16), "NetworkInfo::connection");
                    return new p();
                },
            });
        }
    }
    function oa(a, b) {
        if (1 == b)
            Object.defineProperties(a, {
                getVRDisplays: {
                    get: function () {
                        eval("/*getVRDisplays*/ 0");
                        0 == ta && v(BigInt(16), "VR::getVRDisplays");
                        return null;
                    },
                    configurable: !0,
                    enumerable: !0,
                },
                activeVRDisplays: { value: [], configurable: !0, enumerable: !0 },
            });
        else {
            var c = [];
            b = r(1, 4);
            for (var g = 0; g < b; g++) c.push($a());
            var d = function () {
                return c;
            };
            Object.defineProperties(a, {
                getVRDisplays: {
                    get: function () {
                        0 == ta && v(BigInt(16), "VR::getVRDisplays");
                        return function () {
                            eval("/*getVRDisplays*/ 0");
                            return new Promise(function (e) {
                                e(new d());
                            });
                        };
                    },
                    configurable: !0,
                    enumerable: !0,
                },
                activeVRDisplays: { value: c, configurable: !0, enumerable: !0, writable: !1 },
            });
        }
        ta = 1;
        void 0 != Navigator.prototype.getVRDisplays && (Object.defineProperty(Navigator.prototype.getVRDisplays, "name", { value: "getVRDisplays" }), (Navigator.prototype.getVRDisplays.toString = Function.prototype.toString));
        ta = 0;
    }
    function Ba(a, b) {
        1 == b
            ? Object.defineProperties(a, {
                  getGamepads: {
                      get: function () {
                          0 == ua && v(BigInt(16), "GamePads::getGamepads");
                          return null;
                      },
                      configurable: !0,
                      enumerable: !0,
                  },
              })
            : Object.defineProperties(a, {
                  getGamepads: {
                      get: function () {
                          0 == ua && v(BigInt(16), "GamePads::getGamepads");
                          var c = [];
                          c.push(ab());
                          return function () {
                              eval("/*getGamepads*/ 0");
                              return c;
                          };
                      },
                      configurable: !0,
                      enumerable: !0,
                  },
              });
        ua = 1;
        void 0 != Navigator.prototype.getGamepads && (Object.defineProperty(Navigator.prototype.getGamepads, "name", { value: "getGamepads" }), (Navigator.prototype.getGamepads.toString = Function.prototype.toString));
        ua = 0;
    }
    function V(a, b, c) {
        null != a &&
            (Object.defineProperties(a, {
                RTCPeerConnection: {
                    enumerable: !0,
                    configurable: !0,
                    get: function () {
                        v(BigInt(8192), "WebRTC::RTCPeerConnection");
                        return null;
                    },
                },
                webkitRTCPeerConnection: {
                    enumerable: !0,
                    configurable: !0,
                    get: function () {
                        v(BigInt(8192), "WebRTC::webkitRTCPeerConnection");
                        return null;
                    },
                },
                mozRTCPeerConnection: {
                    enumerable: !0,
                    configurable: !0,
                    get: function () {
                        v(BigInt(8192), "WebRTC::mozRTCPeerConnection");
                        return null;
                    },
                },
            }),
            Object.defineProperty(a, "RTCDataChannel", {
                enumerable: !0,
                configurable: !0,
                get: function () {
                    v(BigInt(8192), "WebRTC::RTCDataChannel");
                    return null;
                },
            }),
            Object.defineProperty(a, "RTCRtpReceiver", {
                enumerable: !0,
                configurable: !0,
                get: function () {
                    v(BigInt(8192), "WebRTC::RTCRtpReceiver");
                    return null;
                },
            }));
    }
    function va(a, b, c, g) {
        function d(p, u, w) {
            Object.defineProperty(p.prototype, w, {
                value: function (q) {
                    v(BigInt(32), "Audio::" + w);
                    u.apply(this, arguments);
                    for (var n = -5 + 10 * g, k = 0; k < q.length; k += 1) 0 == b && 0 == c && (n = -5 + 10 * Math.random()), (q[k] += n);
                },
                configurable: !0,
            });
            "getFloatFrequencyData" == w
                ? (Object.defineProperty(p.prototype.getFloatFrequencyData, "name", { value: "getFloatFrequencyData" }), (p.prototype.getFloatFrequencyData.toString = Function.prototype.toString))
                : (Object.defineProperty(p.prototype.getFloatTimeDomainData, "name", { value: "getFloatTimeDomainData" }), (p.prototype.getFloatTimeDomainData.toString = Function.prototype.toString));
        }
        function e(p, u, w) {
            Object.defineProperty(p.prototype, w, {
                value: function (q) {
                    v(BigInt(32), "Audio::" + w);
                    u.apply(this, arguments);
                    for (var n = -5 + 10 * g, k = 0, h = 0; h < q.length; h += 1) 0 == b && (0 == c && (n = -5 + 10 * Math.random()), (k = (q[h] + n) % 255)), (q[h] = k);
                },
                configurable: !0,
            });
            "getByteFrequencyData" == w
                ? (Object.defineProperty(p.prototype.getByteFrequencyData, "name", { value: "getByteFrequencyData" }), (p.prototype.getByteFrequencyData.toString = Function.prototype.toString))
                : (Object.defineProperty(p.prototype.getByteTimeDomainData, "name", { value: "getByteTimeDomainData" }), (p.prototype.getByteTimeDomainData.toString = Function.prototype.toString));
        }
        function f(p, u, w) {
            Object.defineProperty(p.prototype, w, {
                value: function (q) {
                    v(BigInt(32), "Audio::" + w);
                    if (1 == b) return null;
                    if (void 0 != Z && 0 == arguments[0]) return Z;
                    var n = u.apply(this, arguments);
                    if (void 0 == n) return null;
                    if (c) for (var k = 0; k < n.length; k += 1) n[k] += g;
                    else for (k = 0; k < n.length; k += 1) n[k] += r(1, 3);
                    if (void 0 == Z || 1 == ia) (ia = 1), (ia = arguments[0]), (Z = n);
                    return n;
                },
                configurable: !0,
            });
            Object.defineProperty(p.prototype.getChannelData, "name", { value: "getChannelData" });
            p.prototype.getChannelData.toString = Function.prototype.toString;
        }
        function m(p, u, w) {
            Object.defineProperty(p.prototype, w, {
                value: function (q, n) {
                    v(BigInt(32), "Audio::" + w);
                    if (1 != b) {
                        if (void 0 != Z && 0 == arguments[1]) return Z;
                        u.apply(this, arguments);
                        var k = arguments[0];
                        if (c) for (var h = 0; h < k.length; h += 1) k[h] += g;
                        else for (h = 0; h < k.length; h += 1) k[h] += r(1, 3);
                        if (void 0 == Z || 1 == ia) (ia = 2), (ia = arguments[1]), (Z = k);
                    }
                },
                configurable: !0,
            });
            Object.defineProperty(p.prototype.copyFromChannel, "name", { value: "copyFromChannel" });
            p.prototype.copyFromChannel.toString = Function.prototype.toString;
        }
        null != a &&
            (null != a.AnalyserNode &&
                void 0 != a.AnalyserNode &&
                (d(a.AnalyserNode, a.AnalyserNode.prototype.getFloatFrequencyData, "getFloatFrequencyData"),
                d(a.AnalyserNode, a.AnalyserNode.prototype.getFloatTimeDomainData, "getFloatTimeDomainData"),
                e(a.AnalyserNode, a.AnalyserNode.prototype.getByteFrequencyData, "getByteFrequencyData"),
                e(a.AnalyserNode, a.AnalyserNode.prototype.getByteTimeDomainData, "getByteTimeDomainData")),
            null != a.AudioBuffer && void 0 != a.AudioBuffer && (f(a.AudioBuffer, a.AudioBuffer.prototype.getChannelData, "getChannelData"), m(a.AudioBuffer, a.AudioBuffer.prototype.copyFromChannel, "copyFromChannel")));
    }
    function pa(a, b, c, g, d, e) {
        function f(n, k, h) {
            for (var t = n.getImageData(0, 0, k, h), y, G = 0; G < h; G++)
                for (var B = 0; B < k; B++) (y = 4 * G * k + 4 * B), c ? ((t.data[y + 0] += g), (t.data[y + 1] += d), (t.data[y + 2] += e)) : ((t.data[y + 0] += r(1, 3)), (t.data[y + 1] += r(1, 3)), (t.data[y + 2] += r(1, 3)));
            n.putImageData(t, 0, 0);
        }
        function m(n) {
            if (70 < n.length) {
                n = [...n];
                for (var k, h = 70; h < n.length; h++) (k = n[h]), "A" < k && "Z" > k && ((k = k.charCodeAt(0)), 1 == r(1, 3) ? (n[h] = String.fromCharCode(k - 1)) : (n[h] = String.fromCharCode(k + 1)));
                n = n.join("");
            }
            return n;
        }
        function p(n, k, h) {
            Object.defineProperty(n.prototype, h, {
                value: function () {
                    v(BigInt(32), "SVG::" + h);
                    if (b) return 0;
                    var t = k.apply(this, arguments);
                    return (t = c ? t + (g + d + e) / 1e3 : 1 == r(0, 1) ? t + Q(1e-6, 0.01) : t - Q(1e-6, 0.01));
                },
            });
            "getComputedTextLength" == h && (Object.defineProperty(n.prototype.getComputedTextLength, "name", { value: "getComputedTextLength" }), (n.prototype.getComputedTextLength.toString = Function.prototype.toString));
        }
        function u(n, k, h) {
            Object.defineProperty(n.prototype, h, {
                value: function () {
                    v(BigInt(32), "Canvas::" + h);
                    if (b) return null;
                    var t = this.getContext("2d");
                    if (null == t) return (t = k.apply(this, arguments)), m(t);
                    f(t, this.width, this.height);
                    return k.apply(this, arguments);
                },
            });
            Object.defineProperty(n.prototype.toDataURL, "name", { value: "toDataURL" });
            n.prototype.toDataURL.toString = Function.prototype.toString;
        }
        function w(n, k, h) {
            Object.defineProperty(n.prototype, h, {
                value: function (t) {
                    v(BigInt(32), "Canvas::" + h);
                    if (b) return null;
                    var y = this.getContext("2d");
                    if (null == y) return (y = k.apply(this, arguments)), m(y);
                    f(y, this.width, this.height);
                    return k.apply(this, arguments);
                },
            });
            Object.defineProperty(n.prototype.toBlob, "name", { value: "toBlob" });
            n.prototype.toBlob.toString = Function.prototype.toString;
        }
        function q(n) {
            const k = n.prototype.quadraticCurveTo;
            Object.defineProperty(n.prototype, "quadraticCurveTo", {
                value: function () {
                    v(BigInt(32), "Canvas::quadraticCurveTo");
                    4 == arguments.length &&
                        (b
                            ? ((arguments[0] = 0), (arguments[1] = 0), (arguments[2] = 0), (arguments[3] = 0))
                            : c
                            ? ((arguments[0] += g), (arguments[1] += d), (arguments[2] += e), (arguments[3] += g))
                            : ((arguments[0] += r(1, 6)), (arguments[1] += r(1, 6)), (arguments[2] += r(1, 6)), (arguments[3] += r(1, 6))));
                    return k.apply(this, arguments);
                },
            });
            Object.defineProperty(n.prototype.quadraticCurveTo, "name", { value: "quadraticCurveTo" });
            n.prototype.quadraticCurveTo.toString = Function.prototype.toString;
            const h = n.prototype.getImageData;
            Object.defineProperty(n.prototype, "getImageData", {
                value: function (t, y, G, B) {
                    v(BigInt(32), "Canvas::getImageData");
                    var z = h.apply(this, arguments);
                    if (b) return z.data.fill(0), z;
                    for (var x = z.height, E = z.width, K, M = 0; M < x; M++)
                        for (var I = 0; I < E; I++) (K = 4 * M * E + 4 * I), c ? ((z.data[K + 0] += g), (z.data[K + 1] += d), (z.data[K + 2] += e)) : ((z.data[K + 0] += r(1, 3)), (z.data[K + 1] += r(1, 3)), (z.data[K + 2] += r(1, 3)));
                    return z;
                },
            });
            Object.defineProperty(n.prototype.getImageData, "name", { value: "getImageData" });
            n.prototype.getImageData.toString = Function.prototype.toString;
        }
        null == a
            ? (u(HTMLCanvasElement, HTMLCanvasElement.prototype.toDataURL, "toDataURL"),
              w(HTMLCanvasElement, HTMLCanvasElement.prototype.toBlob, "toBlob"),
              q(CanvasRenderingContext2D),
              p(SVGTextContentElement, SVGTextContentElement.prototype.getComputedTextLength, "getComputedTextLength"))
            : (null != a.HTMLCanvasElement && void 0 != a.HTMLCanvasElement && (u(a.HTMLCanvasElement, a.HTMLCanvasElement.prototype.toDataURL, "toDataURL"), w(a.HTMLCanvasElement, a.HTMLCanvasElement.prototype.toBlob, "toBlob")),
              null != a.CanvasRenderingContext2D && void 0 != a.CanvasRenderingContext2D && q(a.CanvasRenderingContext2D),
              null != a.SVGTextContentElement && void 0 != a.SVGTextContentElement && p(a.SVGTextContentElement, a.SVGTextContentElement.prototype.getComputedTextLength, "getComputedTextLength"));
    }
    function wa(a, b, c, g, d, e, f, m, p, u, w) {
        if (null != a.Node && void 0 != a.Node && null != a.Element && void 0 != a.Element) {
            var q = (n, k) =>
                function () {
                    var h = void 0;
                    if (void 0 != arguments) {
                        if (1 == arguments.length)
                            if (((h = arguments[0]), "LINK" == h.nodeName)) {
                                if (0 <= h.href.indexOf("chrome://") || 0 <= h.href.indexOf("resource://")) h.href = "";
                            } else if ("IMG" == h.nodeName) {
                                if (0 <= h.src.indexOf("chrome://") || 0 <= h.src.indexOf("resource://")) h.src = "";
                            } else {
                                if (void 0 != h.outerHTML) {
                                    var t = h.outerHTML.toLowerCase();
                                    if ("SCRIPT" != h.nodeName && "IFRAME" != h.nodeName) {
                                        var y = -1,
                                            G = t.indexOf("font-size:");
                                        if (0 < G) {
                                            var B = t.indexOf(";", G + 1),
                                                z = t.indexOf('"', G + 1);
                                            -1 == B && 0 < z && (B = z);
                                            0 < B && ((y = t.substr(G + 10, B - (G + 10))), (y = y.replace("px", "").trim()));
                                        }
                                        t = y;
                                        if (b.SubFlags[BigInt(8)] & BigInt(2)) 100 < t && ((h.style.fontSize = "0px"), v(BigInt(8), "fonts"));
                                        else if (b.SubFlags[BigInt(8)] & BigInt(1) && 100 < t) {
                                            a: {
                                                t = h.innerHTML;
                                                G = t.length;
                                                for (B = 0; B < G; B++)
                                                    if (((y = t.charCodeAt(B)), !((47 < y && 58 > y) || (64 < y && 91 > y) || (96 < y && 123 > y)))) {
                                                        t = !1;
                                                        break a;
                                                    }
                                                t = !0;
                                            }
                                            t || ((t = h.innerHTML.length), 0 < t && (h.innerHTML = "A".repeat(t)));
                                            void 0 != h.style && ((h.style.fontFamily = "monospace"), (h.style.fontSize = "1px"), (h.style.cssText = "font-family: monospace;font-size: 1px;"));
                                            v(BigInt(8), "fonts");
                                        }
                                    }
                                }
                            }
                        else if (2 == arguments.length) {
                            try {
                                (h = arguments[0]), "IFRAME" != h.nodeName && (h = void 0);
                            } catch (x) {
                                h = void 0;
                            }
                            if (void 0 == h)
                                try {
                                    (h = arguments[1]), "IFRAME" != h.nodeName && (h = void 0);
                                } catch (x) {
                                    h = void 0;
                                }
                        }
                        if (void 0 != h && "IFRAME" == h.nodeName) return;
                    }
                    t = void 0;
                    try {
                        if (((t = k.apply(this, arguments)), void 0 != h && "IFRAME" == h.nodeName))
                            try {
                                ja(h.contentWindow, b, c, g, d, e, f, m, p, u, w),
                                    wa(h.contentWindow, b, c, g, d, e, f, m, p, u, w),
                                    ja(h.contentDocument, b, c, g, d, e, f, m, p, u, w),
                                    wa(h.contentDocument, b, c, g, d, e, f, m, p, u, w),
                                    O(h.contentWindow),
                                    O(h.contentDocument);
                            } catch (x) {}
                    } catch (x) {}
                    return t;
                };
            try {
                const { appendChild: n } = a.Node.prototype;
                a.Node.prototype.appendChild = a.Element.prototype.appendChild = q("appendChild", n);
                Object.defineProperty(a.Element.prototype.appendChild, "name", { value: "appendChild" });
                a.Element.prototype.appendChild.toString = Function.prototype.toString;
                const { insertBefore: k } = a.Node.prototype;
                a.Node.prototype.insertBefore = a.Element.prototype.insertBefore = q("insertBefore", k);
                Object.defineProperty(a.Element.prototype.insertBefore, "name", { value: "insertBefore" });
                a.Element.prototype.insertBefore.toString = Function.prototype.toString;
                const { append: h } = a.Element.prototype;
                a.Node.prototype.append = a.Element.prototype.append = q("append", h);
                Object.defineProperty(a.Element.prototype.append, "name", { value: "append" });
                a.Element.prototype.append.toString = Function.prototype.toString;
                const { prepend: t } = a.Element.prototype;
                a.Node.prototype.prepend = a.Element.prototype.prepend = q("prepend", t);
                Object.defineProperty(a.Element.prototype.prepend, "name", { value: "prepend" });
                a.Element.prototype.prepend.toString = Function.prototype.toString;
                const { insertAdjacentElement: y } = a.Element.prototype;
                a.Node.prototype.insertAdjacentElement = a.Element.prototype.insertAdjacentElement = q("insertAdjacentElement", y);
                Object.defineProperty(a.Element.prototype.insertAdjacentElement, "name", { value: "insertAdjacentElement" });
                a.Element.prototype.insertAdjacentElement.toString = Function.prototype.toString;
                const { replaceWith: G } = a.Element.prototype;
                a.Node.prototype.replaceWith = a.Element.prototype.replaceWith = q("replaceWith", G);
                Object.defineProperty(a.Element.prototype.replaceWith, "name", { value: "replaceWith" });
                a.Element.prototype.replaceWith.toString = Function.prototype.toString;
                const { replaceChild: B } = a.Element.prototype;
                a.Node.prototype.replaceChild = a.Element.prototype.replaceChild = q("replaceChild", B);
                Object.defineProperty(a.Element.prototype.replaceChild, "name", { value: "replaceChild" });
                a.Element.prototype.replaceChild.toString = Function.prototype.toString;
                Object.defineProperty(a.Element.prototype.ffnh, "name", { value: "ffnh" });
                a.Element.prototype.ffnh.toString = Function.prototype.toString;
            } catch (n) {}
        }
    }
    function Ja(a, b) {
        function c(g) {
            const d = g.prototype.measureText;
            Object.defineProperty(g.prototype, "measureText", {
                value: function (e) {
                    v(BigInt(8), "measureText");
                    var f = d.apply(this, arguments),
                        m = {};
                    m.actualBoundingBoxAscent = f.actualBoundingBoxAscent;
                    m.actualBoundingBoxDescent = f.actualBoundingBoxDescent;
                    m.actualBoundingBoxLeft = f.actualBoundingBoxLeft;
                    m.actualBoundingBoxRight = f.actualBoundingBoxRight;
                    b & BigInt(1) ? (m.width = 100) : b & BigInt(2) && (m.width = 0);
                    return m;
                },
            });
            Object.defineProperty(g.prototype.measureText, "name", { value: "measureText" });
            g.prototype.measureText.length = 1;
            g.prototype.measureText.toString = Function.prototype.toString;
        }
        null != a && null != a.CanvasRenderingContext2D && void 0 != a.CanvasRenderingContext2D && c(a.CanvasRenderingContext2D);
    }
    function Ka(a, b, c, g, d, e, f, m, p, u, w, q) {
        null != a &&
            void 0 != a &&
            ((a.innerWidth = parseInt(q, 10)),
            (a.innerHeight = parseInt(f, 10)),
            (a.outerWidth = parseInt(q, 10)),
            (a.outerHeight = parseInt(f, 10)),
            (a.screen = {
                availHeight: parseInt(b, 10),
                availLeft: parseInt(c, 10),
                availTop: parseInt(g, 10),
                availWidth: parseInt(d, 10),
                colorDepth: parseInt(e, 10),
                height: parseInt(f, 10),
                orientation: { angle: m, type: p, onchange: u },
                pixelDepth: parseInt(w, 10),
                width: parseInt(q, 10),
            }),
            (a.screen.__lookupGetter__ = La),
            void 0 != a.HTMLElement &&
                (Object.defineProperty(a.HTMLElement.prototype, "clientHeight", {
                    get: function () {
                        v(BigInt(16), "Screen::Size");
                        return H.h;
                    },
                    configurable: !0,
                }),
                Object.defineProperty(a.HTMLElement.prototype, "clientWidth", {
                    get: function () {
                        v(BigInt(16), "Screen::Size");
                        return H.w;
                    },
                    configurable: !0,
                }),
                Object.defineProperty(a.HTMLElement.prototype, "offsetHeight", {
                    get: function () {
                        v(BigInt(16), "Screen::Size");
                        return H.h;
                    },
                    configurable: !0,
                }),
                Object.defineProperty(a.HTMLElement.prototype, "offsetWidth", {
                    get: function () {
                        v(BigInt(16), "Screen::Size");
                        return H.w;
                    },
                    configurable: !0,
                }),
                Object.defineProperty(a.HTMLElement.prototype, "scrollHeight", {
                    get: function () {
                        v(BigInt(16), "Screen::Size");
                        return H.h;
                    },
                    configurable: !0,
                }),
                Object.defineProperty(a.HTMLElement.prototype, "scrollWidth", {
                    get: function () {
                        v(BigInt(16), "Screen::Size");
                        return H.w;
                    },
                    configurable: !0,
                })));
    }
    function xa(a, b, c) {
        function g(d, e, f) {
            Object.defineProperty(d.prototype, f, {
                value: function () {
                    v(BigInt(8192), "clientRects::" + f);
                    if (-1 == b) return null;
                    for (var m = [], p, u = e.apply(this, arguments), w = 0; w < u.length; w++) {
                        var q = u[w];
                        p = {};
                        b
                            ? ((p.top = q.top + Math.random()), (p.right = q.right + Math.random()), (p.bottom = q.bottom + Math.random()), (p.left = q.left + Math.random()))
                            : ((p.top = q.top + c), (p.right = q.right + c), (p.bottom = q.bottom + c), (p.left = q.left + c));
                        p.width = q.right - q.left;
                        p.height = q.bottom - q.top;
                        m.push(p);
                    }
                    return m;
                },
            });
            Object.defineProperty(d.prototype.getClientRects, "name", { value: "getClientRects" });
            d.prototype.getClientRects.toString = Function.prototype.toString;
        }
        null != a && null != a.Element && void 0 != a.Element && g(a.Element, a.Element.prototype.getClientRects, "getClientRects");
    }
    function qa(a, b, c, g, d, e, f, m, p, u) {
        null == a
            ? b
                ? Ma(window)
                : (ya(WebGLRenderingContext, c, g, d, e, f, m, p, u), ya(WebGL2RenderingContext, c, g, d, e, f, m, p, u))
            : b
            ? Ma(a)
            : (null != a.WebGLRenderingContext && ya(a.WebGLRenderingContext, c, g, d, e, f, m, p, u), null != a.WebGL2RenderingContext && ya(a.WebGL2RenderingContext, c, g, d, e, f, m, p, u));
    }
    function ya(a, b, c, g, d, e, f, m, p) {
        const u = a.prototype.readPixels;
        Object.defineProperty(a.prototype, "readPixels", {
            value: function () {
                v(BigInt(32), "WebGL::readPixels");
                u.apply(this, arguments);
                if (7 == arguments.length)
                    for (var n = arguments[6], k = 0; k < n.length; k++)
                        if (1 == e) n[k] = 0 == k % 2 ? n[k] + f : 0 == k % 3 ? n[k] + m : n[k] + p;
                        else {
                            var h = r(1, 3);
                            1 == h && 255 > n[k] ? (n[k] += 1) : 2 == h && 0 < n[k] && --n[k];
                        }
            },
        });
        Object.defineProperty(a.prototype.readPixels, "name", { value: "readPixels" });
        a.prototype.readPixels.toString = Function.prototype.toString;
        const w = a.prototype.getParameter;
        Object.defineProperty(a.prototype, "getParameter", {
            value: function (n) {
                v(BigInt(32), "WebGL::getParameter");
                var k = void 0;
                if (null != arguments && void 0 != arguments && 1 <= arguments.length && void 0 != arguments[0]) {
                    if (arguments[0] == this.VENDOR) return "" != c ? c : R(10, 24);
                    if (0 < Ca && arguments[0] == Ca) return "" != d ? d : "" != c ? c : R(10, 24);
                    if (arguments[0] == this.RENDERER) return "" != b ? b : R(10, 24);
                    if (0 < Da && arguments[0] == Da) return "" != g ? g : "" != b ? b : R(10, 24);
                    k = w.apply(this, arguments);
                    "number" == typeof k && (k = 1 == e ? k + ((f + m + p) % 16) : k + r(1, 16));
                }
                return k;
            },
        });
        Object.defineProperty(a.prototype.getParameter, "name", { value: "getParameter" });
        a.prototype.getParameter.toString = Function.prototype.toString;
        const q = a.prototype.getExtension;
        Object.defineProperty(a.prototype, "getExtension", {
            value: function (n) {
                v(BigInt(32), "WebGL::getExtension");
                var k = q.apply(this, arguments);
                null != arguments && void 0 != arguments && 1 <= arguments.length && "webgl_debug_renderer_info" == arguments[0].toLowerCase() && ((Ca = k.UNMASKED_VENDOR_WEBGL), (Da = k.UNMASKED_RENDERER_WEBGL));
                return k;
            },
        });
        Object.defineProperty(a.prototype.getExtension, "name", { value: "getExtension" });
        a.prototype.getExtension.toString = Function.prototype.toString;
    }
    function Ma(a) {
        null == a ||
            null == a.HTMLCanvasElement ||
            void 0 == a.HTMLCanvasElement ||
            a.hdcd_canvas_getctx ||
            ((a.hdcd_canvas_getctx = a.HTMLCanvasElement.prototype.getContext),
            (a.HTMLCanvasElement.prototype.getContext = function (b) {
                v(BigInt(32), "WebGL::getContext");
                return b && 0 <= b.toLowerCase().indexOf("webgl") ? null : a.hdcd_canvas_getctx.call(this, b);
            }),
            Object.defineProperty(a.HTMLCanvasElement.prototype.getContext, "name", { value: "getContext" }),
            (a.HTMLCanvasElement.prototype.getContext.toString = Function.prototype.toString));
    }
    function bb(a, b, c, g, d, e, f) {
        var m = { SetTz: 0, Tzo: null, Tzf: null, Tzn: null, Tzl: null, Intl: null, Dtz: null },
            p = "Australian Central Daylight Savings Time;Australian Central Standard Time;Acre Time;ASEAN Common Time;Australian Central Western Standard Time;Atlantic Daylight Time;Australian Eastern Daylight Savings Time;Australian Eastern Standard Time;Afghanistan Time;Alaska Daylight Time;Alaska Standard Time;Alma-Ata Time;Amazon Summer Time;Amazon Time;Armenia Time;Anadyr Time;Aqtobe Time;Argentina Time;Arabia Standard Time;Atlantic Standard Time;Australian Western Standard Time;Azores Summer Time;Azores Standard Time;Azerbaijan Time;Brunei Time;British Indian Ocean Time;Baker Island Time;Bolivia Time;Bras\u00edlia Summer Time;Bras\u00edlia Time;Bangladesh Standard Time;Bougainville Standard Time;British Summer Time;Bhutan Time;Central Africa Time;Cocos Islands Time;Central Daylight Time;Cuba Daylight Time;Central European Summer Time;Central European Time;Chatham Daylight Time;Chatham Standard Time;Choibalsan Standard Time;Choibalsan Summer Time;Chamorro Standard Time;Chuuk Time;Clipperton Island Standard Time;Central Indonesia Time;Cook Island Time;Chile Summer Time;Chile Standard Time;Colombia Summer Time;Colombia Time;Central Standard Time;China Standard Time;Cuba Standard Time;China Time;Cape Verde Time;Central Western Standard Time;Christmas Island Time;Davis Time;Dumont d'Urville Time;Central European Time;Easter Island Summer Time;Easter Island Standard Time;East Africa Time;Eastern Caribbean Time;Ecuador Time;Eastern Daylight Time;Eastern European Summer Time;Eastern European Time;Eastern Greenland Summer Time;Eastern Greenland Time;Eastern Indonesian Time;Eastern Standard Time;Further-eastern European Time;Fiji Time;Falkland Islands Summer Time;Falkland Islands Time;Fernando de Noronha Time;Gal\u00e1pagos Time;Gambier Islands Time;Georgia Standard Time;French Guiana Time;Gilbert Island Time;Gambier Island Time;Greenwich Mean Time;South Georgia and the South Sandwich Islands Time;Gulf Standard Time;Guyana Time;Hawaii\u2013Aleutian Daylight Time;Heure Avanc\u00e9e d'Europe;Hawaii\u2013Aleutian Standard Time;Hong Kong Time;Heard and McDonald Islands Time;Hovd Summer Time;Hovd Time;Indochina Time;International Day Line West;Israel Daylight Time;Indian Ocean Time;Iran Daylight Time;Irkutsk Time;Iran Standard Time;Indian Standard Time;Irish Standard Time;Israel Standard Time;Japan Standard Time;Kaliningrad Time;Kyrgyzstan Time;Kosrae Time;Krasnoyarsk Time;Korea Standard Time;Lord Howe Standard Time;Lord Howe Summer Time;Line Islands Time;Magadan Time;Marquesas Islands Time;Mawson Station Time;Mountain Daylight Time;Middle European Time;Middle European Summer Time;Marshall Islands Time;Macquarie Island Station Time;Marquesas Islands Time;Myanmar Standard Time;Moscow Time;Malaysia Standard Time;Mountain Standard Time;Mauritius Time;Maldives Time;Malaysia Time;New Caledonia Time;Newfoundland Daylight Time;Norfolk Island Time;Novosibirsk Time;Nepal Time;Newfoundland Standard Time;Newfoundland Time;Niue Time;New Zealand Daylight Time;New Zealand Standard Time;Omsk Time;Oral Time;Pacific Daylight Time;Peru Time;Kamchatka Time;Papua New Guinea Time;Phoenix Island Time;Philippine Time;Pakistan Standard Time;Saint Pierre and Miquelon Daylight Time;Saint Pierre and Miquelon Standard Time;Pohnpei Standard Time;Pacific Standard Time;Philippine Standard Time;Paraguay Summer Time;Paraguay Time;R\u00e9union Time;Rothera Research Station Time;Sakhalin Island Time;Samara Time;South African Standard Time;Solomon Islands Time;Seychelles Time;Samoa Daylight Time;Singapore Time;Sri Lanka Standard Time;Srednekolymsk Time;Suriname Time;Samoa Standard Time;Singapore Standard Time;Showa Station Time;Tahiti Time;Thailand Standard Time;French Southern and Antarctic Time;Tajikistan Time;Tokelau Time;Timor Leste Time;Turkmenistan Time;Turkey Time;Tonga Time;Tuvalu Time;Ulaanbaatar Summer Time;Ulaanbaatar Standard Time;Coordinated Universal Time;Uruguay Summer Time;Uruguay Standard Time;Uzbekistan Time;Venezuelan Standard Time;Vladivostok Time;Volgograd Time;Vostok Station Time;Vanuatu Time;Wake Island Time;West Africa Summer Time;West Africa Time;Western European Summer Time;Western European Time;Western Indonesian Time;Western Standard Time;Yakutsk Time;Yekaterinburg Time".split(
                ";"
            ),
            u = "-720 -660 -600 -570 -540 -480 -420 -360 -300 -270 -240 -210 -180 -150 -120 -60 0 60 120 180 210 240 270 300 330 345 360 390 420 480 540 570 600 630 660 690 720 765 780 840".split(" "),
            w = "America/Puerto_Rico America/New_York America/Chicago America/Denver America/Phoenix America/Los_Angeles America/Anchorage Pacific/Honolulu America/Adak America/Anchorage America/Anguilla America/Antigua America/Araguaina America/Argentina/Buenos_Aires America/Argentina/Catamarca America/Argentina/ComodRivadavia America/Argentina/Cordoba America/Argentina/Jujuy America/Argentina/La_Rioja America/Argentina/Mendoza America/Argentina/Rio_Gallegos America/Argentina/Salta America/Argentina/San_Juan America/Argentina/San_Luis America/Argentina/Tucuman America/Argentina/Ushuaia America/Aruba America/Asuncion America/Atikokan America/Atka America/Bahia America/Barbados America/Belem America/Belize America/Blanc-Sablon America/Boa_Vista America/Bogota America/Boise America/Buenos_Aires America/Cambridge_Bay America/Campo_Grande America/Cancun America/Caracas America/Catamarca America/Cayenne America/Cayman America/Chicago America/Chihuahua America/Coral_Harbour America/Cordoba America/Costa_Rica America/Cuiaba America/Curacao America/Danmarkshavn America/Dawson America/Dawson_Creek America/Denver America/Detroit America/Dominica America/Edmonton America/Eirunepe America/El_Salvador America/Ensenada America/Fortaleza America/Fort_Wayne America/Glace_Bay America/Godthab America/Goose_Bay America/Grand_Turk America/Grenada America/Guadeloupe America/Guatemala America/Guayaquil America/Guyana America/Halifax America/Havana America/Hermosillo America/Indiana/Indianapolis America/Indiana/Knox America/Indiana/Marengo America/Indiana/Petersburg America/Indiana/Tell_City America/Indiana/Vevay America/Indiana/Vincennes America/Indiana/Winamac America/Indianapolis America/Inuvik America/Iqaluit America/Jamaica America/Jujuy America/Juneau America/Kentucky/Louisville America/Kentucky/Monticello America/Knox_IN America/La_Paz America/Lima America/Los_Angeles America/Louisville America/Maceio America/Managua America/Manaus America/Marigot America/Martinique America/Matamoros America/Mazatlan America/Mendoza America/Menominee America/Merida America/Mexico_City America/Miquelon America/Moncton America/Monterrey America/Montevideo America/Montreal America/Montserrat America/Nassau America/New_York America/Nipigon America/Nome America/Noronha America/North_Dakota/Center America/North_Dakota/New_Salem America/Ojinaga America/Panama America/Pangnirtung America/Paramaribo America/Phoenix America/Port-au-Prince America/Porto_Acre America/Port_of_Spain America/Porto_Velho America/Puerto_Rico America/Rainy_River America/Rankin_Inlet America/Recife America/Regina America/Resolute America/Rio_Branco America/Rosario America/Santa_Isabel America/Santarem America/Santiago America/Santo_Domingo America/Sao_Paulo America/Scoresbysund America/Shiprock America/St_Barthelemy America/St_Johns America/St_Kitts America/St_Lucia America/St_Thomas America/St_Vincent America/Swift_Current America/Tegucigalpa America/Thule America/Thunder_Bay America/Tijuana America/Toronto America/Tortola America/Vancouver America/Virgin America/Whitehorse America/Winnipeg America/Yakutat America/Yellowknife Europe/Amsterdam Europe/Andorra Europe/Athens Europe/Belfast Europe/Belgrade Europe/Berlin Europe/Bratislava Europe/Brussels Europe/Bucharest Europe/Budapest Europe/Chisinau Europe/Copenhagen Europe/Dublin Europe/Gibraltar Europe/Guernsey Europe/Helsinki Europe/Isle_of_Man Europe/Istanbul Europe/Jersey Europe/Kaliningrad Europe/Kiev Europe/Lisbon Europe/Ljubljana Europe/London Europe/Luxembourg Europe/Madrid Europe/Malta Europe/Mariehamn Europe/Minsk Europe/Monaco Europe/Moscow Europe/Nicosia Europe/Oslo Europe/Paris Europe/Podgorica Europe/Prague Europe/Riga Europe/Rome Europe/Samara Europe/San_Marino Europe/Sarajevo Europe/Simferopol Europe/Skopje Europe/Sofia Europe/Stockholm Europe/Tallinn Europe/Tirane Europe/Tiraspol Europe/Uzhgorod Europe/Vaduz Europe/Vatican Europe/Vienna Europe/Vilnius Europe/Volgograd Europe/Warsaw Europe/Zagreb Europe/Zaporozhye Europe/Zurich Asia/Aden Asia/Almaty Asia/Amman Asia/Anadyr Asia/Aqtau Asia/Aqtobe Asia/Ashgabat Asia/Ashkhabad Asia/Baghdad Asia/Bahrain Asia/Baku Asia/Bangkok Asia/Beirut Asia/Bishkek Asia/Brunei Asia/Calcutta Asia/Choibalsan Asia/Chongqing Asia/Chungking Asia/Colombo Asia/Dacca Asia/Damascus Asia/Dhaka Asia/Dili Asia/Dubai Asia/Dushanbe Asia/Gaza Asia/Harbin Asia/Ho_Chi_Minh Asia/Hong_Kong Asia/Hovd Asia/Irkutsk Asia/Istanbul Asia/Jakarta Asia/Jayapura Asia/Jerusalem Asia/Kabul Asia/Kamchatka Asia/Karachi Asia/Kashgar Asia/Kathmandu Asia/Katmandu Asia/Kolkata Asia/Krasnoyarsk Asia/Kuala_Lumpur Asia/Kuching Asia/Kuwait Asia/Macao Asia/Macau Asia/Magadan Asia/Makassar Asia/Manila Asia/Muscat Asia/Nicosia Asia/Novokuznetsk Asia/Novosibirsk Asia/Omsk Asia/Oral Asia/Phnom_Penh Asia/Pontianak Asia/Pyongyang Asia/Qatar Asia/Qyzylorda Asia/Rangoon Asia/Riyadh Asia/Saigon Asia/Sakhalin Asia/Samarkand Asia/Seoul Asia/Shanghai Asia/Singapore Asia/Taipei Asia/Tashkent Asia/Tbilisi Asia/Tehran Asia/Tel_Aviv Asia/Thimbu Asia/Thimphu Asia/Tokyo Asia/Ujung_Pandang Asia/Ulaanbaatar Asia/Ulan_Bator Asia/Urumqi Asia/Vientiane Asia/Vladivostok Asia/Yakutsk Asia/Yekaterinburg Asia/Yerevan Africa/Abidjan Africa/Accra Africa/Addis_Ababa Africa/Algiers Africa/Asmara Africa/Asmera Africa/Bamako Africa/Bangui Africa/Banjul Africa/Bissau Africa/Blantyre Africa/Brazzaville Africa/Bujumbura Africa/Cairo Africa/Casablanca Africa/Ceuta Africa/Conakry Africa/Dakar Africa/Dar_es_Salaam Africa/Djibouti Africa/Douala Africa/El_Aaiun Africa/Freetown Africa/Gaborone Africa/Harare Africa/Johannesburg Africa/Kampala Africa/Khartoum Africa/Kigali Africa/Kinshasa Africa/Lagos Africa/Libreville Africa/Lome Africa/Luanda Africa/Lubumbashi Africa/Lusaka Africa/Malabo Africa/Maputo Africa/Maseru Africa/Mbabane Africa/Mogadishu Africa/Monrovia Africa/Nairobi Africa/Ndjamena Africa/Niamey Africa/Nouakchott Africa/Ouagadougou Africa/Porto-Novo Africa/Sao_Tome Africa/Timbuktu Africa/Tripoli Africa/Tunis Africa/Windhoek Australia/ACT Australia/Adelaide Australia/Brisbane Australia/Broken_Hill Australia/Canberra Australia/Currie Australia/Darwin Australia/Eucla Australia/Hobart Australia/LHI Australia/Lindeman Australia/Lord_Howe Australia/Melbourne Australia/North Australia/NSW Australia/Perth Australia/Queensland Australia/South Australia/Sydney Australia/Tasmania Australia/Victoria Australia/West Australia/Yancowinna Indian/Antananarivo Indian/Chagos Indian/Christmas Indian/Cocos Indian/Comoro Indian/Kerguelen Indian/Mahe Indian/Maldives Indian/Mauritius Indian/Mayotte Indian/Reunion Atlantic/Azores Atlantic/Bermuda Atlantic/Canary Atlantic/Cape_Verde Atlantic/Faeroe Atlantic/Faroe Atlantic/Jan_Mayen Atlantic/Madeira Atlantic/Reykjavik Atlantic/South_Georgia Atlantic/Stanley Atlantic/St_Helena Pacific/Apia Pacific/Auckland Pacific/Chatham Pacific/Easter Pacific/Efate Pacific/Enderbury Pacific/Fakaofo Pacific/Fiji Pacific/Funafuti Pacific/Galapagos Pacific/Gambier Pacific/Guadalcanal Pacific/Guam Pacific/Honolulu Pacific/Johnston Pacific/Kiritimati Pacific/Kosrae Pacific/Kwajalein Pacific/Majuro Pacific/Marquesas Pacific/Midway Pacific/Nauru Pacific/Niue Pacific/Norfolk Pacific/Noumea Pacific/Pago_Pago Pacific/Palau Pacific/Pitcairn Pacific/Ponape Pacific/Port_Moresby Pacific/Rarotonga Pacific/Saipan Pacific/Samoa Pacific/Tahiti Pacific/Tarawa Pacific/Tongatapu Pacific/Truk Pacific/Wake Pacific/Wallis Pacific/Yap Antarctica/Casey Antarctica/Davis Antarctica/DumontDUrville Antarctica/Macquarie Antarctica/Mawson Antarctica/McMurdo Antarctica/Palmer Antarctica/Rothera Antarctica/South_Pole Antarctica/Syowa Antarctica/Vostok Arctic/Longyearbyen".split(
                " "
            );
        a & BigInt(1)
            ? ((m.Tzo = "0"), (m.Tzf = ""), (m.Tzl = ""), (m.SetTz = 1), (m.Intl = ""))
            : a & BigInt(4)
            ? ((m.Tzo = u[Math.floor(Math.random() * u.length)]), (m.Tzn = p[Math.floor(Math.random() * p.length)]), (m.Tzl = w[Math.floor(Math.random() * w.length)]), (m.SetTz = 2))
            : a & BigInt(2) && ((m.Tzo = d), (m.Tzn = e), (m.Tzl = f), (m.SetTz = 2));
        null != m.Tzo &&
            ((d = m.Tzo),
            "string" != typeof d && (d = d.toString()),
            1 == d.length
                ? (m.Dtz = "+0000")
                : ((f = parseInt(d.replace("-", ""), 10)),
                  (d = f / 60),
                  (f %= 60),
                  (m.Dtz = 1 == g ? "-" : "+"),
                  (m.Dtz = 9 >= d ? m.Dtz + "0" + d.toString() : m.Dtz + d.toString()),
                  (m.Dtz = 9 >= f ? m.Dtz + "0" + f.toString() : m.Dtz + f.toString())));
        d = m.Tzn;
        null == d && (d = e);
        a & BigInt(32) ? (m.Intl = JSON.stringify(Ea(b, c, g, d))) : a & BigInt(64) ? ((b = R(6, 12)), (c = R(6, 12)), (g = R(6, 12)), (m.Intl = JSON.stringify(Ea(b, c, g, d)))) : a & BigInt(16) && (m.Intl = "");
        return m;
    }
    function Na(a, b, c) {
        if (0 < b.SetTz)
            try {
                Fa(a, b), Fa(a.contentWindow, b), Fa(a.contentDocument, b);
            } catch (g) {}
        if (null != b.Intl)
            try {
                Ga(a, b.Intl, c, b.Tzl), Ga(a.contentWindow, b.Intl, c, b.Tzn), Ga(a.contentDocument, b.Intl, c, b.Tzn);
            } catch (g) {}
    }
    function Fa(a, b) {
        if (null != a) {
            try {
                if (void 0 == a.Date) return;
            } catch (k) {
                return;
            }
            if (1 == b.SetTz)
                Object.defineProperties(a.Date.prototype, {
                    getTimezoneOffset: {
                        value: function () {
                            v(BigInt(512), "Date::getTimezoneOffset");
                            return 0;
                        },
                        configurable: !0,
                    },
                    getDate: {
                        value: function () {
                            return 0;
                        },
                        configurable: !0,
                    },
                    getDay: {
                        value: function () {
                            return 0;
                        },
                        configurable: !0,
                    },
                    getHours: {
                        value: function () {
                            return 0;
                        },
                        configurable: !0,
                    },
                    getMinutes: {
                        value: function () {
                            return 0;
                        },
                        configurable: !0,
                    },
                    getTime: {
                        value: function () {
                            return 0;
                        },
                        configurable: !0,
                    },
                    toString: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    toTimeString: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    toISOString: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    toUTCString: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    toGMTString: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    toJSON: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    toLocaleString: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    toLocaleDateString: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    toLocaleTimeString: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                }),
                    Object.defineProperty(a.Date.prototype.toLocaleDateString, "name", { value: "toLocaleDateString" }),
                    (a.Date.prototype.toLocaleDateString.toString = Function.prototype.toString),
                    Object.defineProperty(a.Date.prototype.toISOString, "name", { value: "toISOString" }),
                    (a.Date.prototype.toISOString.toString = Function.prototype.toString),
                    Object.defineProperty(a.Date.prototype.toUTCString, "name", { value: "toUTCString" }),
                    (a.Date.prototype.toUTCString.toString = Function.prototype.toString),
                    Object.defineProperty(a.Date.prototype.toGMTString, "name", { value: "toGMTString" }),
                    (a.Date.prototype.toGMTString.toString = Function.prototype.toString);
            else {
                var c = new Date(),
                    g = parseInt(b.Tzo, 10),
                    d = c.getTimezoneOffset();
                c = new Date(c.getTime() + 6e4 * (g + c.getTimezoneOffset()));
                var e = c.toString(),
                    f = e.indexOf(" GMT");
                e = e.substr(0, f + 4) + b.Dtz + " (" + b.Tzl + ")";
                var m = void 0 != window.hdcd_date_ls ? window.hdcd_date_ls.call(c) : c.toLocaleString(),
                    p = c.getHours(),
                    u = c.getMinutes(),
                    w = c.getDay(),
                    q = c.getMonth();
                window.hdcd_date_ts ||
                    ((window.hdcd_date_ts = a.Date.prototype.toString),
                    (window.hdcd_date_js = a.Date.prototype.toJSON),
                    (window.hdcd_date_gt = a.Date.prototype.getTime),
                    (window.hdcd_date_ms = a.Date.prototype.toTimeString),
                    (window.hdcd_date_ls = a.Date.prototype.toLocaleString),
                    (window.hdcd_date_ds = a.Date.prototype.toLocaleDateString),
                    (window.hdcd_date_zo = a.Date.prototype.getTimezoneOffset),
                    (window.hdcd_date_pr = a.Date.prototype.parse),
                    (window.hdcd_date_tz = d));
                var n = { weekday: "short", year: "numeric", month: "short", day: "2-digit", hour: "2-digit", minute: "2-digit", second: "2-digit", hour12: !1, timeZone: b.Tzl };
                a.Date.parse = function (k) {
                    k = window.hdcd_date_gt.call(new Date(k));
                    return (k += 6e4 * (parseInt(b.Tzo, 10) - window.hdcd_date_tz));
                };
                Object.defineProperties(a.Date.prototype, {
                    getTime: {
                        value: function () {
                            var k = window.hdcd_date_gt.call(this);
                            return (k += 6e4 * (g - window.hdcd_date_tz));
                        },
                        configurable: !0,
                    },
                    getTimezoneOffset: {
                        value: function () {
                            v(BigInt(512), "Date::getTimezoneOffset");
                            return 0;
                        },
                        configurable: !0,
                    },
                    getHours: {
                        value: function () {
                            return p;
                        },
                        configurable: !0,
                    },
                    getMinutes: {
                        value: function () {
                            return u;
                        },
                        configurable: !0,
                    },
                    getDate: {
                        value: function () {
                            return w;
                        },
                        configurable: !0,
                    },
                    getDay: {
                        value: function () {
                            return w;
                        },
                        configurable: !0,
                    },
                    getMonth: {
                        value: function () {
                            return q;
                        },
                        configurable: !0,
                    },
                    toString: {
                        value: function () {
                            return window.hdcd_date_ls.apply(this, ["en-US", n]).replace(/,/g, "") + " GMT" + b.Dtz;
                        },
                        configurable: !0,
                    },
                    toTimeString: {
                        value: function () {
                            var k = window.hdcd_date_ls.apply(this, ["en-US", n]).replace(/,/g, "") + " GMT" + b.Dtz,
                                h = k.indexOf(":");
                            0 < h && (k = k.substr(h - 2));
                            return k;
                        },
                        configurable: !0,
                    },
                    toJSON: {
                        value: function () {
                            var k = new Date(window.hdcd_date_gt.call(this) + 6e4 * (g - window.hdcd_date_tz));
                            return window.hdcd_date_js.call(k);
                        },
                        configurable: !0,
                    },
                    toLocaleString: {
                        value: function () {
                            var k = "AM",
                                h = p;
                            12 <= h && ((h -= 12), (k = "PM"));
                            var t = u.toString();
                            1 == t.length && (t = "0" + t);
                            var y = m,
                                G = y.indexOf(", ");
                            return (y = y.substr(0, G + 2) + h.toString() + ":" + t + ":" + r(0, 59).toString() + " " + k);
                        },
                        configurable: !0,
                    },
                    toLocaleTimeString: {
                        value: function () {
                            var k = "AM",
                                h = p;
                            12 <= h && ((h -= 12), (k = "PM"));
                            var t = u.toString();
                            1 == t.length && (t = "0" + t);
                            return h.toString() + ":" + t + ":" + r(0, 59).toString() + " " + k;
                        },
                        configurable: !0,
                    },
                    toLocaleDateString: {
                        value: function () {
                            var k = new Date(window.hdcd_date_gt.call(this) + 6e4 * (g - window.hdcd_date_tz));
                            return window.hdcd_date_ds.call(k);
                        },
                    },
                });
            }
            Object.defineProperty(a.Date.prototype.getTimezoneOffset, "name", { value: "getTimezoneOffset" });
            a.Date.prototype.getTimezoneOffset.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.getTime, "name", { value: "getTime" });
            a.Date.prototype.getTime.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.getDate, "name", { value: "getDate" });
            a.Date.prototype.getDate.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.getMonth, "name", { value: "getMonth" });
            a.Date.prototype.getMonth.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.getDay, "name", { value: "getDay" });
            a.Date.prototype.getDay.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.getHours, "name", { value: "getHours" });
            a.Date.prototype.getHours.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.getMinutes, "name", { value: "getMinutes" });
            a.Date.prototype.getMinutes.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.toString, "name", { value: "toString" });
            a.Date.prototype.toString.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.toJSON, "name", { value: "toJSON" });
            a.Date.prototype.toJSON.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.toTimeString, "name", { value: "toTimeString" });
            a.Date.prototype.toTimeString.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.toLocaleString, "name", { value: "toLocaleString" });
            a.Date.prototype.toLocaleString.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.toLocaleTimeString, "name", { value: "toLocaleTimeString" });
            a.Date.prototype.toLocaleTimeString.toString = Function.prototype.toString;
            Object.defineProperty(a.Date.prototype.toLocaleDateString, "name", { value: "toLocaleDateString" });
            a.Date.prototype.toLocaleDateString.toString = Function.prototype.toString;
        }
    }
    function Ga(a, b, c, g) {
        if (null != a) {
            try {
                if (void 0 == a.Intl) return;
            } catch (k) {
                return;
            }
            var d = "";
            null != c && "" != c.lnga && (d = c.lnga.replace(/'/g, "").replace(" ", "").split(",")[0]);
            var e = Ea(d, "", "", ""),
                f = cb(d),
                m = db(d),
                p = eb(d),
                u = fb(d, ""),
                w = gb(d, ""),
                q = hb(d);
            "" != b && ((e = JSON.parse(b)), "" != d && (e.locale = d), (u.numberingSystem = e.numberingSystem), (w.numberingSystem = e.numberingSystem));
            void 0 != a.Intl.Collator &&
                (Object.defineProperties(a.Intl.Collator.prototype, {
                    resolvedOptions: {
                        value: function () {
                            v(BigInt(512), "Date::resolvedOptions");
                            return f;
                        },
                        configurable: !0,
                    },
                }),
                Object.defineProperty(a.Intl.Collator.prototype.resolvedOptions, "name", { value: "resolvedOptions" }),
                (a.Intl.Collator.prototype.resolvedOptions.toString = Function.prototype.toString));
            void 0 == a.Intl.DisplayNames &&
                Object.defineProperties(Intl, {
                    DisplayNames: {
                        value: function () {
                            var k = {
                                name: "DisplayNames",
                                resolvedOptions: function () {
                                    v(BigInt(512), "Date::resolvedOptions");
                                    return m;
                                },
                            };
                            k.toString = Function.prototype.toString;
                            return k;
                        },
                        configurable: !0,
                    },
                });
            void 0 != a.Intl.ListFormat &&
                (Object.defineProperties(a.Intl.ListFormat.prototype, {
                    resolvedOptions: {
                        value: function () {
                            v(BigInt(512), "Date::resolvedOptions");
                            return p;
                        },
                        configurable: !0,
                    },
                }),
                Object.defineProperty(a.Intl.ListFormat.prototype.resolvedOptions, "name", { value: "resolvedOptions" }),
                (a.Intl.ListFormat.prototype.resolvedOptions.toString = Function.prototype.toString));
            void 0 != a.Intl.NumberFormat &&
                (Object.defineProperties(a.Intl.NumberFormat.prototype, {
                    resolvedOptions: {
                        value: function () {
                            v(BigInt(512), "Date::resolvedOptions");
                            return w;
                        },
                        configurable: !0,
                    },
                }),
                Object.defineProperty(a.Intl.NumberFormat.prototype.resolvedOptions, "name", { value: "resolvedOptions" }),
                (a.Intl.NumberFormat.prototype.resolvedOptions.toString = Function.prototype.toString));
            void 0 != a.Intl.PluralRules &&
                (Object.defineProperties(a.Intl.PluralRules.prototype, {
                    resolvedOptions: {
                        value: function () {
                            v(BigInt(512), "Date::resolvedOptions");
                            return q;
                        },
                        configurable: !0,
                    },
                }),
                Object.defineProperty(a.Intl.PluralRules.prototype.resolvedOptions, "name", { value: "resolvedOptions" }),
                (a.Intl.PluralRules.prototype.resolvedOptions.toString = Function.prototype.toString));
            void 0 != a.Intl.RelativeTimeFormat &&
                (Object.defineProperties(a.Intl.RelativeTimeFormat.prototype, {
                    resolvedOptions: {
                        value: function () {
                            v(BigInt(512), "Date::resolvedOptions");
                            return u;
                        },
                        configurable: !0,
                    },
                }),
                Object.defineProperty(a.Intl.RelativeTimeFormat.prototype.resolvedOptions, "name", { value: "resolvedOptions" }),
                (a.Intl.RelativeTimeFormat.prototype.resolvedOptions.toString = Function.prototype.toString));
            if (void 0 != a.Intl.DateTimeFormat) {
                var n = a.Intl.DateTimeFormat.prototype.formatToParts;
                Object.defineProperties(a.Intl.DateTimeFormat.prototype, {
                    resolvedOptions: {
                        value: function () {
                            v(BigInt(512), "Date::resolvedOptions");
                            return e;
                        },
                        configurable: !0,
                    },
                    format: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    formatRange: {
                        value: function () {
                            return "";
                        },
                        configurable: !0,
                    },
                    formatToParts: {
                        value: function () {
                            v(BigInt(512), "Date::format");
                            var k = n.apply(this, arguments);
                            void 0 !== k && 17 <= k.length && (k[16] = { type: "timeZoneName", value: g });
                            return "UTC";
                        },
                        configurable: !0,
                    },
                });
                Object.defineProperty(a.Intl.DateTimeFormat.prototype.resolvedOptions, "name", { value: "resolvedOptions" });
                a.Intl.DateTimeFormat.prototype.resolvedOptions.toString = Function.prototype.toString;
                Object.defineProperty(a.Intl.DateTimeFormat.prototype.format, "name", { value: "format" });
                a.Intl.DateTimeFormat.prototype.format.toString = Function.prototype.toString;
                Object.defineProperty(a.Intl.DateTimeFormat.prototype.formatToParts, "name", { value: "formatToParts" });
                a.Intl.DateTimeFormat.prototype.formatToParts.toString = Function.prototype.toString;
                Object.defineProperty(a.Intl.DateTimeFormat.prototype.formatRange, "name", { value: "formatRange" });
                a.Intl.DateTimeFormat.prototype.formatRange.toString = Function.prototype.toString;
            }
        }
    }
    function Oa(a, b, c) {
        null != a &&
            null != a.document &&
            (b & BigInt(1) ? (c = "") : b & BigInt(4) && (c = "https://www." + R(16, 32).toLowerCase() + ".com"), Object.defineProperties(a.document, { referrer: { value: c, configurable: !0, enumerable: !0, writable: !1 } }));
    }
    function za(a, b) {
        var c = null;
        if (null == a)
            try {
                c = MediaDevices.prototype;
            } catch (e) {
                return;
            }
        else {
            if (null == a.MediaDevices || void 0 == a.MediaDevices) return;
            c = a.MediaDevices.prototype;
        }
        if (null != c && void 0 != c)
            if (1 == b)
                Object.defineProperties(c, {
                    enumerateDevices: {
                        get: function () {
                            0 == ra && v(BigInt(32), "Media::enumerateDevices");
                            return null;
                        },
                        configurable: !0,
                        enumerable: !0,
                    },
                }),
                    Object.defineProperties(c, {
                        getUserMedia: {
                            get: function () {
                                0 == ra && v(BigInt(32), "Media::getUserMedia");
                                return null;
                            },
                            configurable: !0,
                            enumerable: !0,
                        },
                    }),
                    Object.defineProperties(c, {
                        getDisplayMedia: {
                            get: function () {
                                0 == ra && v(BigInt(32), "Media::getDisplayMedia");
                                return null;
                            },
                            configurable: !0,
                            enumerable: !0,
                        },
                    }),
                    (ra = 1),
                    void 0 != c.getUserMedia && (Object.defineProperty(c.getUserMedia, "name", { value: "getUserMedia" }), (c.getUserMedia.toString = Function.prototype.toString)),
                    void 0 != c.getDisplayMedia && (Object.defineProperty(c.getDisplayMedia, "name", { value: "getDisplayMedia" }), (c.getDisplayMedia.toString = Function.prototype.toString)),
                    (ra = 0);
            else if (2 == b) {
                var g = [];
                a = r(1, 4);
                for (b = 0; b < a; b++) g.push(ib());
                var d = function () {
                    return g;
                };
                Object.defineProperties(c, {
                    enumerateDevices: {
                        get: function () {
                            v(BigInt(32), "Media::enumerateDevices");
                            return function () {
                                eval("/*enumerateDevices*/ 0");
                                return new Promise(function (e) {
                                    e(new d());
                                });
                            };
                        },
                        configurable: !0,
                        enumerable: !0,
                    },
                });
            }
    }
    function Pa(a, b, c, g) {
        var d = null;
        if (null == a)
            try {
                d = Geolocation.prototype;
            } catch (e) {
                return;
            }
        else {
            if (null == a.Geolocation || void 0 == a.Geolocation) return;
            d = a.Geolocation.prototype;
        }
        if (null != d && void 0 != d)
            return (
                1 == b
                    ? (Object.defineProperties(d, {
                          getCurrentPosition: {
                              get: function () {
                                  0 == W && v(BigInt(8192), "getCurrentPosition");
                                  return null;
                              },
                          },
                      }),
                      (W = 1),
                      void 0 != d.getCurrentPosition && (Object.defineProperty(d.getCurrentPosition, "name", { value: "getCurrentPosition" }), (d.getCurrentPosition.toString = Function.prototype.toString)),
                      (W = 0))
                    : 2 == b
                    ? (Object.defineProperties(d, {
                          getCurrentPosition: {
                              value: function () {
                                  0 == W && v(BigInt(8192), "getCurrentPosition");
                                  var e = Qa();
                                  arguments[0](e);
                              },
                          },
                      }),
                      (W = 1),
                      void 0 != d.getCurrentPosition && (Object.defineProperty(d.getCurrentPosition, "name", { value: "getCurrentPosition" }), (d.getCurrentPosition.toString = Function.prototype.toString)),
                      (W = 0))
                    : 3 == b &&
                      (Object.defineProperties(d, {
                          getCurrentPosition: {
                              value: function () {
                                  0 == W && v(BigInt(8192), "getCurrentPosition");
                                  var e = Qa();
                                  e.coords.latitude = parseFloat(c);
                                  e.coords.longitude = parseFloat(g);
                                  arguments[0](e);
                              },
                          },
                      }),
                      (W = 1),
                      void 0 != d.getCurrentPosition && (Object.defineProperty(d.getCurrentPosition, "name", { value: "getCurrentPosition" }), (d.getCurrentPosition.toString = Function.prototype.toString)),
                      (W = 0)),
                b
            );
    }
    function jb(a) {
        function b(d, e) {
            var f = g[d].func(e);
            for (d = 0; d < c.length; d++)
                if (e == c[d]) {
                    v(BigInt(8192), "Math");
                    0 == isNaN(f) && Infinity != f && 0 == Number.isInteger(f) && (f = 0 == r(1, 10) % 2 ? f + Q(1e-9, 1e-7) : f - Q(1e-9, 1e-7));
                    break;
                }
            return f;
        }
        const c = [1, Math.E, Math.PI, Math.SQRT2, Math.SQRT1_2, Math.LN2, Math.LN10, Math.LOG2E, Math.LOG10E],
            g = {
                acos: { func: Math.acos },
                acosh: { func: Math.acosh },
                asinh: { func: Math.asinh },
                atan: { func: Math.atan },
                atanh: { func: Math.atanh },
                atan2: { func: Math.atan2 },
                cbrt: { func: Math.cbrt },
                cos: { func: Math.cos },
                cosh: { func: Math.cosh },
                expm1: { func: Math.expm1 },
                exp: { func: Math.exp },
                log: { func: Math.log },
                log1p: { func: Math.log1p },
                log10: { func: Math.log10 },
                sin: { func: Math.sin },
                sinh: { func: Math.sinh },
                sqrt: { func: Math.sqrt },
                tan: { func: Math.tan },
                tanh: { func: Math.tanh },
            };
        Object.defineProperties(Math, {
            acos: {
                value: function (d) {
                    return b("acos", d);
                },
            },
            acosh: {
                value: function (d) {
                    return b("acosh", d);
                },
            },
            asinh: {
                value: function (d) {
                    return b("asinh", d);
                },
            },
            atan: {
                value: function (d) {
                    return b("atan", d);
                },
            },
            atanh: {
                value: function (d) {
                    return b("atanh", d);
                },
            },
            atan2: {
                value: function (d) {
                    return b("atan2", d);
                },
            },
            cbrt: {
                value: function (d) {
                    return b("cbrt", d);
                },
            },
            cos: {
                value: function (d) {
                    return b("cos", d);
                },
            },
            cosh: {
                value: function (d) {
                    return b("cosh", d);
                },
            },
            expm1: {
                value: function (d) {
                    return b("expm1", d);
                },
            },
            exp: {
                value: function (d) {
                    return b("exp", d);
                },
            },
            log: {
                value: function (d) {
                    return b("log", d);
                },
            },
            log1p: {
                value: function (d) {
                    return b("log1p", d);
                },
            },
            log10: {
                value: function (d) {
                    return b("log10", d);
                },
            },
            sin: {
                value: function (d) {
                    return b("sin", d);
                },
            },
            sinh: {
                value: function (d) {
                    return b("sinh", d);
                },
            },
            sqrt: {
                value: function (d) {
                    return b("sqrt", d);
                },
            },
            tan: {
                value: function (d) {
                    return b("tan", d);
                },
            },
            tanh: {
                value: function (d) {
                    return b("tanh", d);
                },
            },
        });
        Object.defineProperty(Math.acos, "name", { value: "acos" });
        Math.acos.toString = Function.prototype.toString;
        Object.defineProperty(Math.acosh, "name", { value: "acosh" });
        Math.acosh.toString = Function.prototype.toString;
        Object.defineProperty(Math.asinh, "name", { value: "asinh" });
        Math.asinh.toString = Function.prototype.toString;
        Object.defineProperty(Math.atan, "name", { value: "atan" });
        Math.atan.toString = Function.prototype.toString;
        Object.defineProperty(Math.atanh, "name", { value: "atanh" });
        Math.atanh.toString = Function.prototype.toString;
        Object.defineProperty(Math.atan2, "name", { value: "atan2" });
        Math.atan2.toString = Function.prototype.toString;
        Object.defineProperty(Math.cbrt, "name", { value: "cbrt" });
        Math.cbrt.toString = Function.prototype.toString;
        Object.defineProperty(Math.cos, "name", { value: "cos" });
        Math.cos.toString = Function.prototype.toString;
        Object.defineProperty(Math.cosh, "name", { value: "cosh" });
        Math.cosh.toString = Function.prototype.toString;
        Object.defineProperty(Math.expm1, "name", { value: "expm1" });
        Math.expm1.toString = Function.prototype.toString;
        Object.defineProperty(Math.exp, "name", { value: "exp" });
        Math.exp.toString = Function.prototype.toString;
        Object.defineProperty(Math.log, "name", { value: "log" });
        Math.log.toString = Function.prototype.toString;
        Object.defineProperty(Math.log1p, "name", { value: "log1p" });
        Math.log1p.toString = Function.prototype.toString;
        Object.defineProperty(Math.log10, "name", { value: "log10" });
        Math.log10.toString = Function.prototype.toString;
        Object.defineProperty(Math.sin, "name", { value: "sin" });
        Math.sin.toString = Function.prototype.toString;
        Object.defineProperty(Math.sinh, "name", { value: "sinh" });
        Math.sinh.toString = Function.prototype.toString;
        Object.defineProperty(Math.sqrt, "name", { value: "sqrt" });
        Math.sqrt.toString = Function.prototype.toString;
        Object.defineProperty(Math.tan, "name", { value: "tan" });
        Math.tan.toString = Function.prototype.toString;
        Object.defineProperty(Math.tanh, "name", { value: "tanh" });
        Math.tanh.toString = Function.prototype.toString;
    }
    function Aa(a, b) {
        if (null != a) {
            if (b.pflags & BigInt(4)) {
                var c = b.uas;
                "" == b.nvan && b.nvsf & BigInt(1) && (b.nvan = c);
                try {
                    Object.defineProperties(a, {
                        userAgent: {
                            configurable: !0,
                            get: function () {
                                eval("/*userAgent*/ 0");
                                v(BigInt(4), "userAgent");
                                return c;
                            },
                        },
                    });
                } catch (e) {}
            }
            if (b.pflags & BigInt(1024)) {
                if (b.nvsf & BigInt(1) || b.nvsf & BigInt(2))
                    try {
                        Object.defineProperties(a, {
                            appName: {
                                get: function () {
                                    eval("/*appName*/ 0");
                                    v(BigInt(1024), "appName");
                                    return b.nvan;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                if (b.nvsf & BigInt(4) || b.nvsf & BigInt(8))
                    try {
                        Object.defineProperties(a, {
                            appVersion: {
                                get: function () {
                                    eval("/*appVersion*/ 0");
                                    v(BigInt(1024), "appVersion");
                                    return b.nvav;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                if (b.nvsf & BigInt(16) || b.nvsf & BigInt(32))
                    try {
                        Object.defineProperties(a, {
                            appCodeName: {
                                get: function () {
                                    eval("/*appCodeName*/ 0");
                                    return b.nvac;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                if (b.nvsf & BigInt(64) || b.nvsf & BigInt(128))
                    try {
                        Object.defineProperties(a, {
                            buildID: {
                                get: function () {
                                    eval("/*buildID*/ 0");
                                    return b.nvbi;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                if (b.nvsf & BigInt(256) || b.nvsf & BigInt(512))
                    try {
                        Object.defineProperties(a, {
                            product: {
                                get: function () {
                                    eval("/*product*/ 0");
                                    return b.nvpd;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                if (b.nvsf & BigInt(1024) || b.nvsf & BigInt(2048))
                    try {
                        Object.defineProperties(a, {
                            productSub: {
                                get: function () {
                                    eval("/*productSub*/ 0");
                                    return b.nvps;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                if (b.nvsf & BigInt(4096) || b.nvsf & BigInt(8192))
                    try {
                        Object.defineProperties(a, {
                            vendor: {
                                get: function () {
                                    eval("/*vendor*/ 0");
                                    return b.nvvn;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                if (b.nvsf & BigInt(16384) || b.nvsf & BigInt(32768))
                    try {
                        Object.defineProperties(a, {
                            vendorSub: {
                                get: function () {
                                    eval("/*vendorSub*/ 0");
                                    return b.nvvs;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
            }
            if (b.pflags & BigInt(8192) && b.beaconblock)
                try {
                    Object.defineProperties(a, {
                        sendBeacon: {
                            get: function () {
                                v(BigInt(8192), "sendBeacon");
                                return null;
                            },
                            configurable: !0,
                            enumerable: !0,
                        },
                    });
                } catch (e) {}
            if (b.pflags & BigInt(16)) {
                if (0 < b.vract)
                    try {
                        oa(a, b.vract);
                    } catch (e) {}
                if (0 < b.gpact)
                    try {
                        Ba(a, b.gpact);
                    } catch (e) {}
            }
            //if (b.pflags & BigInt(64)) {
                var g = [];
                "" != b.lnga && (g = b.lnga.replace(/'/g, "").replace(" ", "").split(","));
                try {
                    Object.defineProperties(a, {
                        language: {
                            get: function () {
                                eval("/*language*/ 0");
                                v(BigInt(64), "language");
                                return "en-US";
                            },
                            configurable: !0,
                            enumerable: !0,
                        },
                        languages: {
                            get: function () {
                                eval("/*languages*/ 0");
                                v(BigInt(64), "languages");
                                return "en-US,";
                            },
                            configurable: !0,
                            enumerable: !0,
                        },
                    });
                } catch (e) {}
            //}
            if (b.pflags & BigInt(128)) {
                var d = { length: 0 };
                "" != b.pas && (d = JSON.parse(b.pas));
                try {
                    Object.defineProperties(a, {
                        plugins: {
                            get: function () {
                                v(BigInt(128), "plugins");
                                return null;
                            },
                            configurable: !0,
                            enumerable: !0,
                        },
                    });
                } catch (e) {}
            }
            if (b.pflags & BigInt(16)) {
                if (b.setos)
                    try {
                        Object.defineProperties(a, {
                            oscpu: {
                                get: function () {
                                    eval("/*oscpu*/ 0");
                                    return b.os;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        }),
                            Object.defineProperties(a, {
                                platform: {
                                    get: function () {
                                        eval("/*platform*/ 0");
                                        return b.platform;
                                    },
                                    configurable: !0,
                                    enumerable: !0,
                                },
                            });
                    } catch (e) {}
                if (b.setmem)
                    try {
                        Object.defineProperties(a, {
                            deviceMemory: {
                                get: function () {
                                    eval("/*deviceMemory*/ 0");
                                    return 0;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        }),
                            (Navigator.prototype.deviceMemory.toString = Function.prototype.toString);
                    } catch (e) {}
                if (b.setcpu)
                    try {
                        Object.defineProperties(a, {
                            hardwareConcurrency: {
                                get: function () {
                                    eval("/*hardwareConcurrency*/ 0");
                                    return 2;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                if (b.settp)
                    try {
                        Object.defineProperties(a, {
                            maxTouchPoints: {
                                get: function () {
                                    eval("/*maxTouchPoints*/ 0");
                                    return 0;
                                },
                                configurable: !0,
                                enumerable: !0,
                            },
                        });
                    } catch (e) {}
                try {
                    b.syssf & BigInt(65536) ? F(a, 1) : b.syssf & BigInt(262144) && F(a, 0);
                } catch (e) {}
                try {
                    b.syssf & BigInt(524288) ? Y(a, 1) : b.syssf & BigInt(2097152) && Y(a, 0);
                } catch (e) {}
            }
        }
    }
    function kb(a, b, c, g, d, e, f, m, p, u) {
        var w = new MutationObserver((q) => {
            if (!q.every((n) => [...n.addedNodes].every((k) => "SCRIPT" !== k.tagName)))
                for (const n of document.querySelectorAll("[id]"))
                    Object.defineProperty(window, n.id, {
                        get() {
                            if ("iframe" == n.tagName.toLowerCase()) {
                                if (null != n.contentWindow) {
                                    try {
                                        ja(n.contentWindow, a, b, c, g, d, e, f, m, p, u);
                                    } catch (k) {}
                                    try {
                                        O(n.contentWindow);
                                    } catch (k) {}
                                }
                                if (null != n.contentDocument) {
                                    try {
                                        ja(n.contentDocument, a, b, c, g, d, e, f, m, p, u);
                                    } catch (k) {}
                                    try {
                                        O(n.contentDocument);
                                    } catch (k) {}
                                }
                            }
                            return n;
                        },
                        configurable: !0,
                    });
        });
        try {
            null != document.body && w.observe(document.body, { childList: !0, subtree: !0 });
        } catch (q) {}
    }
    function lb(a, b, c, g, d, e, f, m, p, u) {
        function w(h) {
            if (void 0 !== h && void 0 !== h.tagName && "iframe" === h.tagName.toLowerCase()) {
                if (null != h.contentWindow) {
                    try {
                        ja(h.contentWindow, a, b, c, g, d, e, f, m, p, u), O(h.contentWindow);
                    } catch (t) {}
                    try {
                        wa(h, a, b, c, g, d, e, f, m, p, u);
                    } catch (t) {}
                    try {
                        null != h.contentWindow.Document && void 0 != h.contentWindow.Document && k(h.contentWindow.Document);
                    } catch (t) {}
                }
                if (null != h.contentDocument)
                    try {
                        ja(h.contentDocument, a, b, c, g, d, e, f, m, p, u), O(h.contentDocument);
                    } catch (t) {}
            }
        }
        function q(h, t, y) {
            Object.defineProperty(h.prototype, y, {
                value: function (G) {
                    var B = t.apply(this, arguments);
                    if (null != B) {
                        var z = Object.prototype.toString.call(B);
                        if (0 < B.length && ("[object HTMLCollection]" === z || "[object NodeList]" === z)) for (z = 0; z < B.length; z++) w(B[z]);
                        else w(B);
                    }
                    return B;
                },
            });
        }
        function n(h, t, y) {
            Object.defineProperty(h.prototype, y, {
                value: function (G, B) {
                    var z = t.apply(this, arguments);
                    if (null != z) {
                        var x = Object.prototype.toString.call(z);
                        if (0 < z.length && ("[object HTMLCollection]" === x || "[object NodeList]" === x)) for (x = 0; x < z.length; x++) w(z[x]);
                        else w(z);
                    }
                    return z;
                },
            });
        }
        function k(h) {
            q(h, h.prototype.createElement, "createElement");
            Object.defineProperty(h.prototype.createElement, "name", { value: "createElement" });
            h.prototype.createElement.toString = Function.prototype.toString;
            n(h, h.prototype.createElementNS, "createElementNS");
            Object.defineProperty(h.prototype.createElementNS, "name", { value: "createElementNS" });
            h.prototype.createElementNS.toString = Function.prototype.toString;
            q(h, h.prototype.getElementById, "getElementById");
            Object.defineProperty(h.prototype.getElementById, "name", { value: "getElementById" });
            h.prototype.getElementById.toString = Function.prototype.toString;
            q(h, h.prototype.getElementsByName, "getElementsByName");
            Object.defineProperty(h.prototype.getElementsByName, "name", { value: "getElementsByName" });
            h.prototype.getElementsByName.toString = Function.prototype.toString;
            q(h, h.prototype.getElementsByClassName, "getElementsByClassName");
            Object.defineProperty(h.prototype.getElementsByClassName, "name", { value: "getElementsByClassName" });
            h.prototype.getElementsByClassName.toString = Function.prototype.toString;
            q(h, h.prototype.getElementsByTagName, "getElementsByTagName");
            Object.defineProperty(h.prototype.getElementsByTagName, "name", { value: "getElementsByTagName" });
            h.prototype.getElementsByTagName.toString = Function.prototype.toString;
            q(h, h.prototype.getElementsByTagNameNS, "getElementsByTagNameNS");
            Object.defineProperty(h.prototype.getElementsByTagNameNS, "name", { value: "getElementsByTagNameNS" });
            h.prototype.getElementsByTagNameNS.toString = Function.prototype.toString;
        }
        k(Document);
    }
    function ja(a, b, c, g, d, e, f, m, p, u, w) {
        try {
            Ja(a, b.SubFlags[BigInt(8)]);
        } catch (q) {}
        if (b.PrimaryFlags & BigInt(32))
            try {
                b.SubFlags[BigInt(32)] & BigInt(64) ? za(a, 1) : b.SubFlags[BigInt(32)] & BigInt(4096) && za(a, 2);
            } catch (q) {}
        if (null != e)
            try {
                va(a, e.Block, e.Spoof, e.AudioSet);
            } catch (q) {}
        if (null != m)
            try {
                xa(a, m.Rnd, m.Set);
            } catch (q) {}
        if (null != p)
            try {
                qa(a, p.Block, p.Ren, p.Ven, p.UnRen, p.UnVen, p.SetRgb, p.R, p.G, p.B);
            } catch (q) {}
        if (null != f)
            try {
                pa(a, f.Block, f.SetRgb, f.R, f.G, f.B);
            } catch (q) {}
        if (null != g)
            try {
                Ka(a, g.ah, g.al, g.at, g.aw, g.cd, g.h, g.soa, g.sot, null, g.pd, g.w),
                    (a.matchMedia = (function () {
                        return function (q) {
                            var n = { matches: !1 };
                            n.media = q;
                            n.onchange = null;
                            return n;
                        };
                    })(a.matchMedia)),
                    Object.defineProperty(a.matchMedia, "name", { value: "matchMedia" }),
                    (a.matchMedia.toString = Function.prototype.toString);
            } catch (q) {}
        if (null != w)
            try {
                V(a, w.Type, w.Ip);
            } catch (q) {}
        if (null != d)
            try {
                Na(a, d, c);
            } catch (q) {}
        if (b.PrimaryFlags & BigInt(256) && b.SubFlags[BigInt(256)] > BigInt(0))
            try {
                Oa(a, b.SubFlags[BigInt(256)], b.Referer);
            } catch (q) {}
        if (null != c)
            try {
                Aa(a.navigator, c), void 0 != a.Navigator && Aa(a.Navigator.prototype, c);
            } catch (q) {}
        if (null != u)
            try {
                Pa(a, u.Op, u.Lat, u.Lng);
            } catch (q) {}
    }
    function ib() {
        var a = ["videoinput", "audioinput", "audiooutput"],
            b = "External USB Webcam;Internal Webcam;External USB Microphone;Microphone;Speakers;External Speakers;Bluetooth Speakers;Bluetooth Microphone;Webcam".split(";"),
            c = {};
        c.deviceId = R(32, 48);
        c.groupId = R(32, 48);
        c.kind = a[Math.floor(Math.random() * a.length)];
        c.label = b[Math.floor(Math.random() * b.length)];
        return c;
    }
    function Qa() {
        var a = {};
        a.accuracy = Q(1, 100);
        a.altitude = Q(1, 100);
        a.altitudeAccuracy = Q(1, 100);
        a.heading = Q(1, 100);
        a.latitude = Q(0, 90) * (r(0, 1) % 2 ? 1 : -1);
        a.longitude = Q(0, 180) * (r(0, 1) % 2 ? 1 : -1);
        a.speed = Q(1, 100);
        var b = {};
        b.coords = a;
        b.timestamp = new Date().getTime();
        return b;
    }
    function $a() {
        var a = {},
            b = ["Oculus VR HMD (HMD)", "Oculus VR HMD (Sensor)", "Oculus Rift", "Samsung Gear VR"],
            c = {};
        c.canPresent = r(0, 1) % 2;
        c.hasExternalDisplay = r(0, 1) % 2;
        c.hasOrientation = r(0, 1) % 2;
        c.hasPosition = r(0, 1) % 2;
        c.maxLayers = r(1, 25);
        a.capabilities = c;
        a.depthFar = r(1e3, 1e4);
        a.depthNear = r(1e3, 1e4);
        a.displayId = r(1, 25);
        a.displayName = b[Math.floor(Math.random() * b.length)];
        a.isConnected = r(0, 1) % 2;
        a.isPresenting = r(0, 1) % 2;
        b = { sittingToStandingTransform: [] };
        for (c = 0; 16 > c; c++) b.sittingToStandingTransform[c] = (r(10, 100) / 100) * (r(0, 1) % 2 ? 1 : -1);
        b.sizeX = r(1, 100);
        b.sizeY = r(1, 100);
        a.stageParameters = b;
        return a;
    }
    function ab() {
        var a,
            b = { axes: [] };
        var c = r(0, 10);
        for (a = 0; a < c; a++) b.axes.push((r(10, 100) / 100) * (r(0, 1) % 2 ? 1 : -1));
        b.buttons = [];
        c = r(0, 10);
        for (a = 0; a < c; a++) {
            var g = {};
            g.value = (r(10, 100) / 100) * (r(0, 1) % 2 ? 1 : -1);
            g.pressed = r(0, 1) % 2;
            b.buttons.push(g);
        }
        b.connected = r(0, 1) % 2;
        b.displayId = r(1, 25);
        c = r(4096, 65535).toString(2);
        b.id = c.substr(0, 3) + "-" + c.substr(3, 1) + "-USB Gamepad";
        b.index = r(1, 25);
        b.mapping = "standard";
        b.timestamp = r(4096, 65535);
        return b;
    }
    function mb(a, b) {
        var c = window.screen.width,
            g = window.screen.height,
            d = window.screen.availHeight,
            e = window.screen.availWidth,
            f = window.screen.colorDepth,
            m = window.screen.pixelDepth,
            p = window.screen.availTop,
            u = window.screen.availLeft,
            w = window.screen.orientation.angle,
            q = window.screen.orientation.type,
            n = window.screen.orientation.onchange;
        a & BigInt(16384)
            ? ((f = r(1, 16)),
              (c = 0 == f % 2 ? c + f : c - f),
              (f = r(1, 16)),
              (g = 0 == f % 2 ? g + f : g - f),
              (f = r(1, 16)),
              (d = 0 == f % 2 ? d + f : d - f),
              (f = r(1, 16)),
              (e = 0 == f % 2 ? e + f : e - f),
              (m = [1, 4, 8, 15, 16, 24, 32, 48]),
              (f = m[r(0, m.length - 1)]),
              (m = m[r(0, m.length - 1)]))
            : a & BigInt(4194304)
            ? ((a = b.split("x")), (c += a[0]), (e += a[0]), (g += a[1]), (d += a[1]))
            : (a & BigInt(8192) || a & BigInt(32768)) && "" != b && void 0 != b && ((a = b.split("x")), (c = a[0]), (e = a[0]), (g = a[1]), (d = a[1]), (f = a[2]), (m = a[2]));
        a = {};
        a.w = parseInt(c, 10);
        a.h = parseInt(g, 10);
        a.ah = parseInt(d, 10);
        a.aw = parseInt(e, 10);
        a.cd = parseInt(f, 10);
        a.pd = parseInt(m, 10);
        a.at = parseInt(p, 10);
        a.al = parseInt(u, 10);
        a.soa = w;
        a.sot = q;
        a.soo = n;
        return a;
    }
    function Ea(a, b, c, g) {
        var d = {};
        d.locale = a;
        d.calendar = b;
        d.numberingSystem = c;
        d.timeZone = "UTC";
        d.year = "numeric";
        d.month = "numeric";
        d.day = "numeric";
        return d;
    }
    function fb(a, b) {
        var c = {};
        c.locale = a;
        c.style = "short";
        c.numeric = "always";
        c.numberingSystem = b;
        return c;
    }
    function hb(a) {
        var b = {};
        b.locale = a;
        b.maximumFractionDigits = 3;
        b.minimumFractionDigits = 0;
        b.minimumIntegerDigits = 1;
        b.pluralCategories = ["one", "other"];
        b.type = "cardinal";
        return b;
    }
    function gb(a, b) {
        var c = {};
        c.locale = a;
        c.numberingSystem = b;
        c.notation = "standard";
        c.signDisplay = "auto";
        c.style = "decimal";
        c.minimumIntegerDigits = 1;
        c.minimumFractionDigits = 0;
        c.maximumFractionDigits = 3;
        c.useGrouping = !0;
        return c;
    }
    function cb(a) {
        var b = {};
        b.locale = a;
        b.usage = "sort";
        b.sensitivity = "base";
        b.ignorePunctuation = !1;
        b.collation = "default";
        b.numeric = !1;
        return b;
    }
    function eb(a) {
        var b = {};
        b.locale = a;
        b.style = "short";
        b.type = "unit";
        return b;
    }
    function db(a) {
        var b = {};
        b.locale = a;
        b.style = "short";
        b.type = "unit";
        b.fallback = "code";
        return b;
    }
    function Ha(a) {
        for (
            var b = "time year people way day man thing woman life child world school state family student group country problem hand part place case week company system program question work government number night point home water room mother area money story fact month lot right study book eye job word business issue side kind head house service friend father power hour game line end member law car city community name president team minute idea kid body information back parent face others level office door health person art war history party result change morning reason research girl guy moment air teacher force education".split(
                    " "
                ),
                c = "";
            0 < a;

        )
            (c = c + b[Math.floor(Math.random() * b.length)] + " "), a--;
        return (c = c.trim());
    }
    function R(a, b) {
        a = r(a, b);
        b = "";
        for (var c, g = 0; g < a; g++) (c = r(48, 122)), 58 <= c && 65 > c ? (c = 57) : 91 <= c && 97 > c && (c = 90), (b += String.fromCharCode(c));
        return b;
    }
    function r(a, b) {
        return Math.round(a + Math.random() * (b - a));
    }
    function Q(a, b) {
        return a + Math.random() * (b - a);
    }
    function v(a, b) {
        void 0 == Ra.get(b) &&
            (Ra.set(b, !0), console.log("[!] Possible fingerprinting detected.  The function '" + b + "' was called."), window.dispatchEvent(new CustomEvent("getAlertData", { detail: { category: a.toString(), function: b } })));
    }
    function Sa(a) {
        try {
            chrome.runtime.sendMessage("becfjfjckdhngmmpkhakoknnkgpgfelk", a, function (b) {
                chrome.runtime.lastError &&
                    setTimeout(function (c) {
                        Sa(c);
                    }, 1e3);
            });
        } catch (b) {}
    }
    var Ca = 0,
        Da = 0,
        Ra = new Map(),
        ia = 0,
        Z = void 0,
        W = 0,
        ua = 0,
        ta = 0,
        ra = 0,
        nb = eval,
        ha = "af sq ar-ae ar-bh ar-dz ar-eg ar-iq ar-jo ar-kw ar-lb ar-ly ar-ma ar-om ar-qa ar-sa ar-sy ar-tn ar-ye eu be bg ca hr zh-cn zh-hk zh-sg zh-tw cs da nl nl-be en en-au en-bz en-ca en-gb en-ie en-jm en-nz en-tt en-us en-za et fa fi fo fr fr-be fr-ca fr-ch fr-lu gd de de-at de-ch de-li de-lu el ga he hi hu id is it it-ch ja ko ko ku lt lv mk ml ms mt nb nn no pa pl pt pt-br rm ro ro-md ru ru-md sb sk sl sr es es-ar es-bo es-cl es-co es-cr es-do es-ec es-gt es-hn es-mx es-ni es-pa es-pe es-pr es-py es-sv es-uy es-ve sv sv-fi th tn tr ts uk ur ve vi cy xh ji zu".split(
            " "
        ),
        J = "toString getBattery getVoices connection getFloatFrequencyData getFloatTimeDomainData getByteFrequencyData getByteTimeDomainData getChannelData copyFromChannel measureText toDataURL getContext toBlob getImageData quadraticCurveTo getComputedTextLength getClientRects readPixels getParameter getExtension getTimezoneOffset getTime getDate getDay getHours getMinutes getMonth toJSON toString toTimeString toLocaleString toLocaleTimeString toLocaleDateString getVRDisplays sendBeacon getGamepads getDisplayMedia getUserMedia enumerateDevices createElement createElementNS getElementById getElementsByName getElementsByClassName getElementsByTagName getElementsByTagNameNS appendChild insertBefore append prepend insertAdjacentElement replaceWith replaceChild acos acosh asinh atan atanh atan2 cbrt cos cosh expm1 exp log log1p log10 sin sinh sqrt tan tanh resolvedOptions format formatRange formatRangeToParts select formatToParts userAgent appName appVersion languages language appCodeName buildID productSub product vendorSub vendor oscpu platform deviceMemory hardwareConcurrency maxTouchPoints".split(
            " "
        ),
        Ta = "acos acosh asinh atan atanh atan2 cbrt cos cosh expm1 exp log log1p log10 sin sinh sqrt tan tanh".split(" "),
        ob = "appVersion appName userAgent appCodeName buildID product productSub vendor vendorSub languages language oscpu platform hardwareConcurrency deviceMemory maxTouchPoints plugins".split(" "),
        ba = "width height availWidth availHeight availLeft availTop colorDepth pixelDepth".split(" "),
        ca = 1,
        S = 1,
        pb = atob(L),
        l = JSON.parse(pb);
    if (null != l) {
        l.PrimaryFlags = BigInt(String(l.PrimaryFlags));
        for (S = ca = 1; 16 >= S; S++) (l.SubFlags[ca] = void 0 != l.SubFlags[ca] ? BigInt(l.SubFlags[ca]) : void 0 != l.SubFlags[ca] ? BigInt(l.SubFlags[ca]) : BigInt(0)), (ca *= 2);
        l.PrimaryFlags & BigInt(8192) && l.SubFlags[BigInt(8192)] & BigInt(128) && (SharedWorker = Worker = null);
        if (l.PrimaryFlags & BigInt(16384)) {
            var Ua = function (g, d) {
                    g = ["length", "name"];
                    if (void 0 != d[0]) {
                        try {
                            var e = void 0;
                            try {
                                (e = d[0].name), void 0 == e && (e = d[0].value.name);
                            } catch (m) {}
                            if (void 0 != e && "string" == typeof e && J.includes(e)) return g;
                            if ((void 0 == e || "" == e) && "function" == typeof d[0]) {
                                var f = d[0].toString();
                                if (0 < f.indexOf("getBattery") || 0 < f.indexOf("getGamepads") || 0 < f.indexOf("getVRDisplays")) return g;
                            }
                            g = qb(d[0]);
                        } catch (m) {}
                        return g;
                    }
                },
                Va = function (g, d, e) {
                    if (2 <= e.length && "function" == typeof e[0] && "string" == typeof e[1])
                        if (ob.includes(e[1])) {
                            if (e[0] !== Navigator.prototype) return;
                        } else if (ba.includes(e[1]) && "[object Screen]" != e[0].toString()) return;
                    void 0 != d && (J.includes(g) && (Object.defineProperty(d, "name", { value: g }), void 0 != d.get && Object.defineProperty(d.get, "name", { value: g })), null == d.value && "function" == typeof e[0] && (d.value = e[0]));
                    return d;
                },
                Wa = function (g, d) {
                    var e = ["length", "name"],
                        f = d[0];
                    if (void 0 != d[0] && "number" != typeof d[0]) {
                        try {
                            if ("function" == typeof d[0]) {
                                f = d[0].name;
                                if (void 0 == f || "" == f) {
                                    var m = d[0].toString();
                                    if (0 < m.indexOf("getBattery") || 0 < m.indexOf("getGamepads") || 0 < m.indexOf("getVRDisplays")) return e;
                                }
                                if (sa[f]) return sa[f][0];
                                1 == g && (e = []);
                                return e;
                            }
                            "string" != typeof d[0] && ((f = d[0].name), void 0 != f ? "string" != typeof f && (f = f.value) : void 0 != d[0].value && (f = d[0].value.name));
                        } catch (p) {
                            f = void 0;
                        }
                        try {
                            void 0 != f && "string" != typeof f && 0 == f.value.indexOf("get ") && (f = f.value.substr(4, f.value.length - 4));
                            if (sa[f]) return sa[f][0];
                            0 == J.includes(f) && (e = a.apply(this, d));
                        } catch (p) {}
                        return e;
                    }
                };
            const a = Object.keys,
                b = Object.entries,
                c = Object.values;
            for (
                var ka = Object.getOwnPropertyDescriptor,
                    qb = Object.getOwnPropertyNames,
                    sa = {},
                    Xa = [
                        Node,
                        Element,
                        HTMLElement,
                        HTMLCanvasElement,
                        Navigator,
                        navigator,
                        Screen,
                        screen,
                        Date,
                        Intl.Collator,
                        Intl.DateTimeFormat,
                        Intl.DisplayNames,
                        Intl.ListFormat,
                        Intl.NumberFormat,
                        Intl.PluralRules,
                        Intl.RelativeTimeFormat,
                        Function,
                        AnalyserNode,
                        AudioBuffer,
                        SVGTextContentElement,
                        CanvasRenderingContext2D,
                        WebGLRenderingContext,
                        WebGL2RenderingContext,
                        null,
                        null,
                        Document,
                        String,
                    ],
                    Ia = 0;
                Ia < Xa.length;
                Ia++
            ) {
                var P = Xa[Ia];
                if ("object" == typeof P)
                    for (S = 0; S < J.length; S++) {
                        var N = J[S];
                        try {
                            P[N] &&
                                (Object.getOwnPropertyDescriptor(P[N], "arguments"),
                                Object.getOwnPropertyDescriptor(P[N], "caller"),
                                Object.getOwnPropertyDescriptor(P[N], "prototype"),
                                Object.getOwnPropertyDescriptor(P[N], "toString"),
                                Object.getOwnPropertyDescriptor(P, N));
                        } catch (g) {}
                    }
                else
                    for (S = 0; S < J.length; S++) {
                        N = J[S];
                        try {
                            P.prototype[N] &&
                                (Object.getOwnPropertyDescriptor(P.prototype[N], "arguments"),
                                Object.getOwnPropertyDescriptor(P.prototype[N], "caller"),
                                Object.getOwnPropertyDescriptor(P.prototype[N], "prototype"),
                                Object.getOwnPropertyDescriptor(P.prototype[N], "toString"),
                                Object.getOwnPropertyDescriptor(P.prototype, N),
                                (sa[N] = [Object.keys(Object.getOwnPropertyDescriptor(P.prototype[N])), Object.keys(Object.getOwnPropertyDescriptors(P.prototype[N]))]));
                        } catch (g) {}
                    }
            }
            (function (g) {
                null == g &&
                    ((Object.entries = function () {
                        var d = [];
                        0 == J.includes(arguments[0].name) && (d = b.apply(this, arguments));
                        return d;
                    }),
                    (Object.keys = function (d) {
                        return Wa(1, arguments);
                    }),
                    (Object.values = function () {
                        var d = [];
                        0 == J.includes(arguments[0].name) && (d = c.apply(this, arguments));
                        return d;
                    }));
            })(null);
            var rb = new Proxy(Reflect.ownKeys, {
                apply: function (g, d, e) {
                    return Wa(2, e);
                },
            });
            Reflect.ownKeys = rb;
            var sb = new Proxy(Reflect.getOwnPropertyDescriptor, {
                apply: function (g, d, e) {
                    var f = void 0;
                    g = void 0;
                    var m = 0;
                    try {
                        g = 1 == e.length && "string" == typeof e[0] ? e[0] : e[1];
                        if (ba.includes(g))
                            return (
                                1 == e.length ? ((f = ka(d, e[0])), (f.name = g)) : (f = ka(e[0], e[1])),
                                void 0 == f.get &&
                                    (f.get = function () {
                                        return f.value;
                                    }),
                                Object.defineProperty(f.get, "name", { value: g }),
                                (f.toString = Function.prototype.toString),
                                f
                            );
                        if ("arguments" == g || "caller" == g || "prototype" == g || "toString" == g) (g = void 0), (m = 1);
                    } catch (p) {}
                    try {
                        (g = e[0].name), void 0 == g && 2 <= e.length && "string" == typeof e[1] && (g = e[1]);
                    } catch (p) {
                        g = void 0;
                    }
                    if (!Ta.includes(g) || !m) if (!J.includes(g) || !m) return (f = ka(e[0], e[1])), 0 == J.includes(g) ? f : (f = Va(g, f, e));
                },
            });
            Reflect.getOwnPropertyDescriptor = sb;
            var La = new Proxy(Object.getOwnPropertyDescriptor, {
                apply: function (g, d, e) {
                    var f = void 0;
                    g = void 0;
                    var m = 0;
                    try {
                        g = 1 == e.length && "string" == typeof e[0] ? e[0] : e[1];
                        if (ba.includes(g))
                            return (
                                1 == e.length ? ((f = ka(d, e[0])), (f.name = g)) : (f = ka(e[0], e[1])),
                                void 0 == f.get &&
                                    (f.get = function () {
                                        return f.value;
                                    }),
                                Object.defineProperty(f.get, "name", { value: g }),
                                (f.toString = Function.prototype.toString),
                                f
                            );
                        if ("arguments" == g || "caller" == g || "prototype" == g || "toString" == g) (g = void 0), (m = 1);
                    } catch (p) {}
                    try {
                        void 0 == g && (g = e[0].name), void 0 == g && 2 <= e.length && "string" == typeof e[1] && (g = e[1]);
                    } catch (p) {
                        g = void 0;
                    }
                    if (!Ta.includes(g) || !m) if (!J.includes(g) || !m) return (f = ka(e[0], e[1])), 0 == J.includes(g) ? f : (f = Va(g, f, e));
                },
            });
            Object.getOwnPropertyDescriptor = La;
            Reflect.getOwnPropertyNames = function (g) {
                return Ua(2, arguments);
            };
            Object.getOwnPropertyNames = function (g) {
                return Ua(1, arguments);
            };
        }
        O(null);
        if (-1 == l.UA.toLowerCase().indexOf("firefox/")) {
            try {
                InstallTrigger = void 0;
            } catch (a) {}
            l.SubFlags[BigInt(8192)] = l.SubFlags[BigInt(8192)] | BigInt(8192);
        } else l.SubFlags[BigInt(8192)] = l.SubFlags[BigInt(8192)] | BigInt(16384);
        l.PrimaryFlags & BigInt(8192) &&
            (eval = function (a) {
                try {
                    nb(a);
                } catch (c) {
                    if (l.SubFlags[BigInt(8192)] & BigInt(16384))
                        if (0 <= c.message.indexOf("Invalid or unexpected token")) c.message = '"" literal not terminated before end of script';
                        else if (0 <= c.message.indexOf("Missing initializer in const declaration")) c.message = "missing = in const declaration";
                        else if (0 <= c.message.indexOf("Cannot read property '")) {
                            a = c.message.indexOf("'");
                            var b = c.message.indexOf("'", a + 1);
                            a = c.message.substr(a + 1, b - (a + 1));
                            c.message = "can't access property \"" + a + '" of null';
                        } else
                            0 <= c.message.indexOf("toString() radix argument must be between 2 and 36")
                                ? (c.message = "radix must be an integer at least 2 and no greater than 36")
                                : 0 <= c.message.indexOf("undefined is not iterable (cannot read property Symbol(Symbol.iterator))")
                                ? (c.message = "can't access property Symbol.iterator of undefined")
                                : 0 <= c.message.indexOf("Invalid array length")
                                ? (c.message = "invalid array length")
                                : 0 <= c.message.indexOf("has already been declared")
                                ? ((a = c.message.indexOf("'")), (b = c.message.indexOf("'", a + 1)), (a = c.message.substr(a + 1, b - (a + 1))), (c.message = "redeclaration of const " + a))
                                : 0 <= c.message.indexOf("Numeric separators are not allowed at the end of numeric literals") && (c.message = "underscore can appear only between digits, not after the last digit in a number");
                    else l.SubFlags[BigInt(8192)] & BigInt(4096) && (c.message = R(8, 16));
                    throw c;
                }
            });
        var H = null,
            aa = null,
            la = null,
            T = null,
            A = null,
            da = null,
            ea = null,
            ma = (function (a) {
                var b = a.PrimaryFlags,
                    c = a.SubFlags,
                    g = a.UA,
                    d = a.Lang,
                    e = a.LangArr,
                    f = a.Os,
                    m = a.Platform,
                    p = a.TouchPoints;
                if ("" != a.PR) {
                    var u = a.PR.split(",");
                    p = u[Math.floor(Math.random() * u.length)];
                }
                var w = a.Threads;
                "" != a.TR && ((u = a.TR.split(",")), (w = u[Math.floor(Math.random() * u.length)]));
                u = a.Memory;
                "" != a.MR && ((u = a.MR.split(",")), (u = u[Math.floor(Math.random() * u.length)]));
                var q = null,
                    n = 0,
                    k = 0,
                    h = 0,
                    t = 0,
                    y = !1,
                    G = !1,
                    B = !1,
                    z = !1,
                    x = !1,
                    E = {},
                    K = "";
                void 0 == c[BigInt(4)] && (c[BigInt(4)] = BigInt(0));
                void 0 == c[BigInt(1024)] && (c[BigInt(1024)] = BigInt(0));
                void 0 == c[BigInt(32)] && (c[BigInt(32)] = BigInt(0));
                void 0 == c[BigInt(8192)] && (c[BigInt(8192)] = BigInt(0));
                void 0 == c[BigInt(16)] && (c[BigInt(16)] = BigInt(0));
                void 0 == c[BigInt(64)] && (c[BigInt(64)] = BigInt(0));
                b & BigInt(32) && (c[BigInt(32)] & BigInt(64) ? (n = 1) : c[BigInt(32)] & BigInt(4096) && (n = 2));
                b & BigInt(8192) && c[BigInt(8192)] & BigInt(8) && (k = 1);
                b & BigInt(16) && (c[BigInt(16)] & BigInt(8388608) ? (h = 1) : c[BigInt(16)] & BigInt(16777216) && (h = 2), c[BigInt(16)] & BigInt(67108864) ? (t = 1) : c[BigInt(16)] & BigInt(134217728) && (t = 2));
                if (b & BigInt(64) && void 0 != c[BigInt(64)])
                    if (c[BigInt(64)] & BigInt(4)) {
                        var M = ha[Math.floor(Math.random() * ha.length)];
                        d = M;
                        e = "'" + M + "'";
                        var I = r(1, 4);
                        do (M = ha[Math.floor(Math.random() * ha.length)]), (e = e + ", '" + M + "'");
                        while (0 < --I);
                    } else c[BigInt(64)] & BigInt(1) && (e = d = "");
                if (b & BigInt(128))
                    /*if (((E.length = 0), void 0 == c[BigInt(128)] && (c[BigInt(128)] = 0), c[BigInt(128)] & BigInt(1))) (E = Object.setPrototypeOf(E, PluginArray.prototype)), (K = JSON.stringify(E));
                    else {
                        var X = 0;
                        M = navigator.plugins.length;
                        for (I = 0; I < M; I++) {
                            var D = { length: 0 };
                            D.filename = navigator.plugins[I].filename;
                            D.name = navigator.plugins[I].name;
                            D.description = navigator.plugins[I].description;
                            "" == D.description && (D.description = D.name);
                            D = Object.setPrototypeOf(D, Plugin.prototype);
                            E[X] = D;
                            X++;
                        }
                        if (c[BigInt(128)] & BigInt(2)) {
                            for (
                                I = r(3, 10);
                                (D = {}),
                                    (D.description = Ha(r(2, 6))),
                                    (D.filename = Ha(r(2, 6))),
                                    (D.length = 0),
                                    (D.name = Ha(r(2, 6))),
                                    (D = Object.setPrototypeOf(D, Plugin.prototype)),
                                    (E[X] = D),
                                    X++,
                                    M++,
                                    (E.length = M),
                                    I--,
                                    0 != I;

                            );
                            x = !0;
                        }
                        if (c[BigInt(128)] & BigInt(8) && "" != q && void 0 != q)
                            for (q = q.split(";"), I = 0; I < q.length; I++)
                                (D = { length: 0 }), (D.description = q[I]), (D.filename = q[I]), (D.name = q[I]), (D = Object.setPrototypeOf(D, Plugin.prototype)), (E[X] = D), X++, M++, (E.length = M), (x = !0);
                        if (c[BigInt(128)] & BigInt(4)) {
                            x = E;
                            for (E = x.length; 0 !== E; ) (X = Math.floor(Math.random() * E)), --E, (M = x[E]), (x[E] = x[X]), (x[X] = M);
                            E = x;
                            x = !0;
                        }
                        x && ((E = Object.setPrototypeOf(E, PluginArray.prototype)), (K = JSON.stringify(E)));
                    }*/
                if (b & BigInt(16)) {
                    void 0 == c[BigInt(16)] && (c[BigInt(16)] = 0);
                    if (c[BigInt(16)] & BigInt(1) || c[BigInt(16)] & BigInt(2) || c[BigInt(16)] & BigInt(4))
                        (y = !0),
                            c[BigInt(16)] & BigInt(1)
                                ? (f = "")
                                : c[BigInt(16)] & BigInt(4) && ((f = "Windows;Windows NT;Linux;FreeBSD;Macintosh;Mac OS X;Debian;X11;Ubuntu;Gentoo;Fedora;SUSE;iOS;Android".split(";")), (f = f[Math.floor(Math.random() * f.length)])),
                            c[BigInt(16)] & BigInt(1)
                                ? (m = "")
                                : c[BigInt(16)] & BigInt(4) && ((m = "HP-UX;Linux i686;Linux armv7l;Mac68K;MacPPC;MacIntel;SunOS;Win16;Win32;WinCE".split(";")), (m = m[Math.floor(Math.random() * m.length)]));
                    if (c[BigInt(16)] & BigInt(8) || c[BigInt(16)] & BigInt(16) || c[BigInt(16)] & BigInt(32)) (z = !0), c[BigInt(16)] & BigInt(32) ? (w = r(1, 32)) : c[BigInt(16)] & BigInt(8) && (w = 0);
                    if (c[BigInt(16)] & BigInt(64) || c[BigInt(16)] & BigInt(128) || c[BigInt(16)] & BigInt(256)) (B = !0), c[BigInt(16)] & BigInt(256) ? (u = r(1, 128)) : c[BigInt(16)] & BigInt(64) && (u = 0);
                    if (c[BigInt(16)] & BigInt(512) || c[BigInt(16)] & BigInt(1024) || c[BigInt(16)] & BigInt(2048)) (G = !0), c[BigInt(16)] & BigInt(2048) ? (p = r(1, 16)) : c[BigInt(16)] & BigInt(512) && (p = 0);
                }
                x = {};
                x.pflags = b;
                x.uasf = c[BigInt(4)];
                try {
                    x.ua = window.navigator.userAgent;
                } catch (xb) {}
                x.uas = g;
                x.nvsf = c[BigInt(1024)];
                x.nvan = a.AppName;
                x.nvav = a.AppVersion;
                x.nvac = a.AppCodeName;
                x.nvbi = a.BuildID;
                x.nvpd = a.Product;
                x.nvps = a.ProductSub;
                x.nvvn = a.Vendor;
                x.nvvs = a.VendorSub;
                x.lang = d;
                x.lnga = e;
                x.pas = K;
                x.setos = y;
                x.os = f;
                x.platform = m;
                x.setmem = B;
                x.mem = u;
                x.setcpu = z;
                x.threads = w;
                x.settp = G;
                x.touch = p;
                x.syssf = c[BigInt(16)];
                x.mediablock = n;
                x.beaconblock = k;
                x.vract = h;
                x.gpact = t;
                return x;
            })(l),
            fa = null;
        if (
            l.PrimaryFlags & BigInt(16) &&
            (l.SubFlags[BigInt(16)] & BigInt(4096) || l.SubFlags[BigInt(16)] & BigInt(4194304) || l.SubFlags[BigInt(16)] & BigInt(8192) || l.SubFlags[BigInt(16)] & BigInt(16384) || l.SubFlags[BigInt(16)] & BigInt(32768))
        ) {
            null == H && (H = mb(l.SubFlags[BigInt(16)], l.Screen));
            try {
                Ka(window, H.ah, H.al, H.at, H.aw, H.cd, H.h, H.soa, H.sot, null, H.pd, H.w),
                    (window.matchMedia = (function () {
                        return function (a) {
                            var b = { matches: !1 };
                            b.media = a;
                            b.onchange = null;
                            return b;
                        };
                    })(window.matchMedia)),
                    Object.defineProperty(window.matchMedia, "name", { value: "matchMedia" }),
                    (window.matchMedia.toString = Function.prototype.toString);
            } catch (a) {}
        }
        if (l.PrimaryFlags & BigInt(8192)) {
            aa = { Type: 0, Ip: "" };
            try {
                l.SubFlags[BigInt(8192)] & BigInt(1)
                    ? (V(window, 1, ""), (aa.Type = 1))
                    : l.SubFlags[BigInt(8192)] & BigInt(2)
                    ? (V(window, 2, ""), (aa.Type = 2))
                    : l.SubFlags[BigInt(8192)] & BigInt(4) && (V(window, 3, l.WebRtcIp), (aa.Type = 3), (aa.Ip = l.WebRtcIp));
            } catch (a) {}
        }
        if (l.PrimaryFlags & BigInt(512) && l.SubFlags[BigInt(512)] > BigInt(0)) {
            null == la && (la = bb(l.SubFlags[BigInt(512)], l.DateLocale, l.DateCalendar, l.DateNumbering, l.Timezone, l.TimeZoneName, l.TimeZoneLoc));
            try {
                Na(window, la, ma);
            } catch (a) {}
        }
        if (l.PrimaryFlags & BigInt(32)) {
            try {
                if (l.SubFlags[BigInt(32)] & BigInt(2)) (T = { Block: 1, SetRgb: 0, R: 0, G: 0, B: 0 }), pa(null, 1, 0, 0, 0, 0);
                else if (l.SubFlags[BigInt(32)] & BigInt(4)) (T = { Block: 0, SetRgb: 0, R: 0, G: 0, B: 0 }), pa(null, 0, 0, 0, 0, 0);
                else if (l.SubFlags[BigInt(32)] & BigInt(256)) {
                    var Ya = 1,
                        C = l.CanvasSet.split(",");
                    3 == C.length && ((C[0] %= 255), (C[1] %= 255), (C[2] %= 255), null == T && ((T = { Block: 0, SetRgb: 1 }), (T.R = C[0]), (T.G = C[1]), (T.B = C[2])), pa(null, 0, 1, C[0], C[1], C[2]), (Ya = 0));
                    1 == Ya && ((T = { Block: 0, SetRgb: 0, R: 0, G: 0, B: 0 }), pa(null, 0, 0, 0, 0, 0));
                }
            } catch (a) {}
            try {
                if (l.SubFlags[BigInt(32)] & BigInt(8)) (A = { Block: 1, Ren: "", Ven: "", UnRen: "", UnVen: "", SetRgb: 0, R: 0, G: 0, B: 0 }), qa(null, 1, "", "", "", "", 0, 0, 0, 0);
                else if (l.SubFlags[BigInt(32)] & BigInt(16))
                    (A = { Block: 0 }),
                        (A.Ren = l.WebGLRenderer),
                        (A.Ven = l.WebGLVendor),
                        (A.UnRen = l.WebGLUnRenderer),
                        (A.UnVen = l.WebGLUnVendor),
                        (A.SetRgb = 0),
                        (A.R = 0),
                        (A.G = 0),
                        (A.B = 0),
                        qa(null, 0, l.WebGLRenderer, l.WebGLVendor, l.WebGLUnRenderer, l.WebGLUnVendor, 0, 0, 0, 0);
                else if (l.SubFlags[BigInt(32)] & BigInt(512)) {
                    var Za = 1;
                    C = l.WebGLSet.split(",");
                    3 == C.length &&
                        ((C[0] %= 255),
                        (C[1] %= 255),
                        (C[2] %= 255),
                        null == A && ((A = { Block: 0 }), (A.Ren = l.WebGLRenderer), (A.Ven = l.WebGLVendor), (A.UnRen = l.WebGLUnRenderer), (A.UnVen = l.WebGLUnVendor), (A.SetRgb = 1), (A.R = C[0]), (A.G = C[1]), (A.B = C[2])),
                        qa(null, 0, l.WebGLRenderer, l.WebGLVendor, l.WebGLUnRenderer, l.WebGLUnVendor, 1, C[0], C[1], C[2]),
                        (Za = 0));
                    1 == Za &&
                        ((A = { Block: 0 }),
                        (A.Ren = l.WebGLRenderer),
                        (A.Ven = l.WebGLVendor),
                        (A.UnRen = l.WebGLUnRenderer),
                        (A.UnVen = l.WebGLUnVendor),
                        (A.SetRgb = 0),
                        (A.R = 0),
                        (A.G = 0),
                        (A.B = 0),
                        qa(null, 0, l.WebGLRenderer, l.WebGLVendor, l.WebGLUnRenderer, l.WebGLUnVendor, 0, 0, 0, 0));
                }
            } catch (a) {}
            try {
                l.SubFlags[BigInt(32)] & BigInt(1)
                    ? ((da = { Block: 0, Spoof: 0, Set: 0 }), va(window, 0, 0, 0))
                    : l.SubFlags[BigInt(32)] & BigInt(128)
                    ? ((da = { Block: 0, Spoof: 1 }), (da.Set = l.AudioSet), va(window, 0, 1, l.AudioSet))
                    : l.SubFlags[BigInt(32)] & BigInt(32) && ((da = { Block: 1, Spoof: 0, Set: 0 }), va(window, 1, 0, 0));
            } catch (a) {}
            try {
                l.SubFlags[BigInt(32)] & BigInt(1024)
                    ? ((ea = { Rnd: 1, Set: 0 }), xa(window, 1, 0))
                    : l.SubFlags[BigInt(32)] & BigInt(2048)
                    ? ((ea = { Rnd: 0 }), (ea.Set = l.RectSet), xa(window, 0, l.RectSet))
                    : l.SubFlags[BigInt(32)] & BigInt(8192) && ((ea = { Rnd: -1, Set: 0 }), xa(window, -1, 0));
            } catch (a) {}
        }
        if (l.PrimaryFlags & BigInt(256) && l.SubFlags[BigInt(256)] > BigInt(0))
            try {
                Oa(window, l.SubFlags[BigInt(256)], l.Referer);
            } catch (a) {}
        try {
            Ja(window, l.SubFlags[BigInt(8)]);
        } catch (a) {}
        if (l.PrimaryFlags & BigInt(8192)) {
            var na = 0;
            l.SubFlags[BigInt(8192)] & BigInt(16) ? (na = 1) : l.SubFlags[BigInt(8192)] & BigInt(32) ? (na = 2) : l.SubFlags[BigInt(8192)] & BigInt(64) && (na = 3);
            if (0 < na) {
                fa = {};
                fa.Op = na;
                fa.Lat = l.GeoLat;
                fa.Lng = l.GeoLng;
                try {
                    Pa(window, na, l.GeoLat, l.GeoLng);
                } catch (a) {}
            }
            var tb = (l.SubFlags[BigInt(8192)] & BigInt(512)) == BigInt(512),
                ub = (l.SubFlags[BigInt(8192)] & BigInt(1024)) == BigInt(1024),
                vb = (l.SubFlags[BigInt(8192)] & BigInt(2048)) == BigInt(2048),
                wb = (l.SubFlags[BigInt(8192)] & BigInt(256)) == BigInt(256);
            if (tb || ub || vb || wb)
                try {
                    jb(l);
                } catch (a) {}
        }
        if (l.PrimaryFlags & BigInt(32))
            try {
                l.SubFlags[BigInt(32)] & BigInt(64) ? za(null, 1) : l.SubFlags[BigInt(32)] & BigInt(4096) && za(null, 2);
            } catch (a) {}
        if (l.PrimaryFlags & BigInt(32))
            try {
                l.SubFlags[BigInt(32)] & BigInt(16384) ? U(window.speechSynthesis, 1) : l.SubFlags[BigInt(32)] & BigInt(32768) && U(window.speechSynthesis, 0);
            } catch (a) {}
        if (l.PrimaryFlags > BigInt(0))
            try {
                Aa(Navigator.prototype, ma), Aa(window.navigator, ma);
            } catch (a) {}
        try {
            wa(window, l, ma, H, la, da, T, ea, A, fa, aa);
        } catch (a) {}
        try {
            kb(l, ma, H, la, da, T, ea, A, fa, aa);
        } catch (a) {}
        try {
            lb(l, ma, H, la, da, T, ea, A, fa, aa);
        } catch (a) {}
        window.addEventListener(
            "getAlertData",
            function (a) {
                Sa({ type: "alert", funcname: a.detail.function, category: a.detail.category });
            },
            !1
        );
    }
}
function getck(L) {
    return document.cookie.split(";").reduce(function (O, U) {
        U = U.split("=");
        return U[0].trim() === L ? U[1] : O;
    }, void 0);
}
var np = bs();
if (null != np) {
    try {
        cs(np);
    } catch (L) {}
    var selem = document.createElement("script");
    selem.textContent = cs.toString() + " cs('" + np + "');";
    (document.head || document.documentElement).appendChild(selem);
    selem.remove();
}