// CyDec Platform Anti-Fp
// Copyright 2020 Heilig Defense
// https://www.heidef.com
// 1.2020.293.1530
var Zxto = 0;
var Zxez = 0;
var Zxpe = 0;
var Zxmb = 0;
var Zxlv = "";
var Zxvz = "";
var Zxzj = "";
var Zxiq = "";
var Zxgz = [];
var Zxsx = {};
var Zxsr = [];
var Zxqm = [];
var Zxgf = [];
var Zxzq = [];
var Zxlg = [];
var Zxbt = new Map();
var Zxqa = {};
var Zxzy = {};
var Zxac = 0;
var Zxbg = "0";
var Zxdb = undefined;
var Zxxo = 0;
var Zxen = "";
var Zxhw = "";
var Zxwq = {};
var Zxxt = 0;
var Zxkt = null;
var Zxim = "";
var Zxeo = 0;
var Zxvw = 0;
var extraInfoSpecReq = ["blocking", "requestHeaders"];
if (chrome.webRequest.OnBeforeSendHeadersOptions.hasOwnProperty("EXTRA_HEADERS")) extraInfoSpecReq.push("extraHeaders");
var extraInfoSpecRes = ["blocking", "responseHeaders"];
if (chrome.webRequest.OnBeforeSendHeadersOptions.hasOwnProperty("EXTRA_HEADERS")) extraInfoSpecRes.push("extraHeaders");
chrome.storage.local.get(null, function (items) {
    var keys = Object.keys(items);
    for (var x = 0; x < keys.length; x++) Zxsx[keys[x]] = items[keys[x]];
    Zxrw();
});
chrome.webRequest.onHeadersReceived.addListener(
    function (details) {
        var url = new URL(details.url);
        var pro = url.protocol.toLowerCase();
        var dm = url.hostname.toLowerCase();
        var dmc = Zxpm(dm);
        if (dmc > 1) dmc = Zxa(1, dmc);
        var bidx = Math.floor(Math.random() * Zxgz.length);
        var np = Zxs(details.tabId, dm, bidx, dmc);
        var en = 2;
        if (np.PrimaryFlags > BigInt(0)) {
            en = Zxsx["global"];
            if (en == undefined) en = 1;
            else if (typeof en != "int") en = parseInt(en);
        }
        var sec = "";
        if (pro.indexOf("https:") == 0) sec = "; SameSite=none; Secure";
        if (en == 1) {
            var js = JSON.stringify(np, (key, value) => (typeof value === "bigint" || typeof value == "int" ? value.toString() : value));
            var b64 = btoa(js);
            var bl = Zxmb | Zxxo;
            details.responseHeaders.push({ name: "Set-Cookie", value: "yGcQbNznjf=" + en + "|" + Zxpe + "|" + bl + "|" + b64 + "; Max-Age=10" + sec });
        } else details.responseHeaders.push({ name: "Set-Cookie", value: "yGcQbNznjf=0|0|0|; Max-Age=0" + sec });
        return { responseHeaders: details.responseHeaders };
    },
    { urls: ["<all_urls>"] },
    extraInfoSpecRes
);
chrome.runtime.onMessage.addListener(function (request, sender, callback) {
    if (request.type == "query")
        if (request.name == "service") {
            var o = new Object();
            o.c = Zxez;
            o.s = Zxpe;
            o.b = Zxmb;
            o.l = Zxxo;
            if (Zxxt == 0) {
                o.i = "Sync not enabled.";
                o.g = "Sync not enabled.";
                o.z = "Sync not enabled.";
            } else if (Zxkt == null) {
                o.i = "Not synced.";
                o.g = "Not synced.";
                o.z = "Not synced.";
            } else {
                o.i = Zxkt.IP;
                o.g = Zxkt.Lang;
                o.z = Zxkt.TimeZoneName;
            }
            callback(o);
            return true;
        } else if (request.name == "subdomains") {
            callback(Zxqm[request.tab]);
            return true;
        } else if (request.name == "fingerprints") {
            var o = new Object();
            o.af = Zxsx["lic_profile_sel"];
            o.ac = Zxwq;
            o.fp = Zxqa;
            callback(o);
            return true;
        } else if (request.name == "license") {
            Zxoy(request.ehash, request.lkey, callback);
            return true;
        } else if (request.name == "release") {
            Zxee(callback);
            return true;
        } else if (request.name == "ipsync")
            if (Zxxt == 0 || Zxkt == null) callback(null);
            else {
                Zxlf(callback);
                return true;
            }
        else {
            if (request.name == "fpsync") {
                Zxv();
                return true;
            }
        }
    else if (request.type == "alert") {
        var cat = "Unknown";
        var bic = BigInt(request.category);
        var idx = -1;
        if (bic == BigInt(4)) {
            idx = 7;
            cat = "User-Agent";
        } else if (bic == BigInt(8)) {
            idx = 8;
            cat = "Fonts";
        } else if (bic == BigInt(16)) {
            idx = 5;
            cat = "System Details";
        } else if (bic == BigInt(32)) {
            idx = 0;
            cat = "Audio/Visual";
        } else if (bic == BigInt(64)) {
            idx = 1;
            cat = "Language";
        } else if (bic == BigInt(128)) {
            idx = 3;
            cat = "Plugins";
        } else if (bic == BigInt(512)) {
            idx = 6;
            cat = "Date/Time";
        } else if (bic == BigInt(1024)) {
            idx = 2;
            cat = "Browser Details";
        } else if (bic == BigInt(8192)) {
            idx = 4;
            cat = "Data Leak";
        } else if (bic == BigInt(2048)) {
            idx = 9;
            cat = "CSS";
        }
        if (Zxwq[idx] == undefined) Zxwq[idx] = 0;
        Zxwq[idx]++;
        if (Zxez == 1 || Zxxo == 1) {
            var alrt = 1;
            try {
                alrt = Zxsx["alerts"];
            } catch (e) {
                alrt = 1;
            }
            if (alrt == undefined || alrt == 1) {
                console.log("CyDec has detected a possible fingerprinting attempt.");
                try {
                    var opt = {
                        type: "basic",
                        title: "CyDec Anti-Fp :: Possible Fingerprinting",
                        iconUrl: chrome.extension.getURL("/img/cydec48.png"),
                        message: "CyDec has detected a possible fingerprinting attempt.\nCategory: " + cat + "\nFunction: " + request.funcname,
                    };
                    chrome.notifications.create(sender.tab.id.toString(), opt);
                } catch (e) {}
                var dm = "";
                var rd = Zxsx["ops_report_domains"];
                if (rd == 1) dm = Zxbt.get(sender.tab.id);
                Zxlg.push({ Domain: dm, Category: cat, FuncName: request.funcname, DTG: new Date().getTime() });
            }
        }
        callback(sender.tab.id);
    }
});
function Zxpm(dm) {
    var cnt = 0;
    var k = "fp_cnt_" + dm;
    var v = Zxsx[k];
    if (v != undefined && v != null) cnt = Number(v);
    return cnt;
}
function Zxj(domain, cnt) {
    var v = {};
    var dm = "fp_cnt_" + domain;
    v[dm] = cnt;
    chrome.storage.local.set(v);
}
function Zxv() {
    Zxsx["force_sync"] = 1;
}
function Zxc() {
    var ret = 0;
    var v = Zxsx["force_sync"];
    if (v != undefined && v != null)
        if (v == 1) {
            ret = 1;
            Zxsx["force_sync"] = 0;
            v = {};
            v["force_sync"] = 0;
            chrome.storage.local.set(v);
        }
    return ret;
}
function Zxs(tabId, dm, bidx, dmc) {
    var np = new Object();
    var k = 1,
        v,
        t,
        sf,
        x,
        z,
        tnp,
        dfs = 0;
    np.PrimaryFlags = BigInt(0);
    np.SubFlags = new Object();
    for (x = 1; x <= 16; x++) {
        np.SubFlags[k] = BigInt(0);
        k = k * 2;
    }
    np.Name = "";
    np.UA = "";
    np.Lang = "";
    np.LangArr = "";
    np.Accept = "";
    np.Encoding = "";
    np.Timezone = "";
    np.TimeZoneName = "";
    np.TimeZoneLoc = "";
    np.Screen = "";
    np.Os = "";
    np.Platform = "";
    np.Plugins = "";
    np.Referer = "";
    np.DateFormat = "";
    np.DateLocale = "";
    np.DateCalendar = "";
    np.DateNumbering = "";
    np.WebGLVendor = "";
    np.WebGLRenderer = "";
    np.AppVersion = "";
    np.AppName = "";
    np.AppCodeName = "";
    np.BuildID = "";
    np.Product = "";
    np.ProductSub = "";
    np.Vendor = "";
    np.VendorSub = "";
    np.TouchPoints = 0;
    np.Threads = 0;
    np.Memory = 0;
    np.PR = "";
    np.TR = "";
    np.MR = "";
    np.Version = -1;
    np.AudioSet = 0;
    np.CanvasSet = "0,0,0";
    np.WebGLSet = "0,0,0";
    np.RectSet = 0;
    np.WebRtcIp = "0.0.0.0";
    np.GeoLat = "0.0";
    np.GeoLng = "0.0";
    np.WebGLUnVendor = "";
    np.WebGLUnRenderer = "";
    if (Zxpe == 1) {
        np.PrimaryFlags = BigInt(4) | BigInt(16) | BigInt(1024);
        np.SubFlags[BigInt(4)] = BigInt(1);
        np.SubFlags[BigInt(16)] = BigInt(2);
        np.SubFlags[BigInt(1024)] = BigInt(1) | BigInt(4) | BigInt(16) | BigInt(64) | BigInt(256) | BigInt(1024) | BigInt(4096) | BigInt(16384);
        np.UserAgent = Zxvz;
        np.Os = Zxiq;
        np.Platform = Zxzj;
    } else if (Zxmb == 1 || Zxxo == 1) {
        var getrnd = true;
        var tabpro = 0;
        if (Zxmb == 1)
            if (dmc > 0) {
                k = "fp_set_" + dmc + "_" + dm;
                v = Zxsx[k];
                if (v != undefined && v != null) {
                    tnp = JSON.parse(v);
                    if (Zxac == tnp.Version) {
                        np = tnp;
                        dfs = 1;
                        getrnd = false;
                    }
                }
            }
        v = Zxsx["lic_profile_sel"];
        if (v != undefined && v != null)
            if (Zxzy.hasOwnProperty(v)) {
                tnp = Zxzy[v];
                if (tnp != undefined) {
                    var js = JSON.stringify(tnp, (key, value) => (typeof value === "bigint" || typeof value == "int" ? value.toString() : value));
                    np = JSON.parse(js);
                    k = v.replace(/\W/g, "").toLowerCase().trim();
                    var tz = Zxsx[k + "_lic_tz_offset_val"];
                    if (tz != undefined && tz != null && tz != "") {
                        var tzl = Zxsx[k + "_lic_tz_location_val"];
                        if (tzl != undefined && tzl != null && tzl != "") {
                            var tzn = Zxsx[k + "_lic_tz_name_val"];
                            if (tzn != undefined && tzn != null && tzn != "") {
                                np.Timezone = tz;
                                np.TimeZoneLoc = tzn;
                                np.TimeZoneName = tzl;
                                np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(1);
                                np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(4);
                                np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(128);
                                np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] | BigInt(2);
                            }
                        }
                    }
                    v = Zxsx[k + "_lic_geo_coords_val_1"];
                    if (v != undefined && v != null) {
                        t = Zxsx[k + "_lic_geo_coords_val_2"];
                        if (t != undefined && t != null && t != "") {
                            np.GeoLat = v;
                            np.GeoLng = t;
                            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(16);
                            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(32);
                            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] | BigInt(64);
                        }
                    }
                    v = Zxsx[k + "_lic_screen_val_1"];
                    if (v != undefined && v != null) {
                        t = Zxsx[k + "_lic_screen_val_2"];
                        if (t != undefined && t != null && t != "") {
                            z = Zxsx[k + "_lic_screen_val_3"];
                            if (z != undefined && z != null && z != "") {
                                np.Screen = v + "x" + t + "x" + z;
                                np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(4096);
                                np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(4194304);
                                np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(16384);
                                np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(32768);
                                np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] | BigInt(8192);
                            }
                        }
                    }
                    v = Zxsx[k + "_lic_language_val"];
                    if (v != undefined && v != null && v != "") {
                        np.Lang = v;
                        np.LangArr = v;
                        np.SubFlags[BigInt(64)] = np.SubFlags[BigInt(64)] & ~BigInt(1);
                        np.SubFlags[BigInt(64)] = np.SubFlags[BigInt(64)] & ~BigInt(4);
                        np.SubFlags[BigInt(64)] = np.SubFlags[BigInt(64)] & ~BigInt(8);
                        np.SubFlags[BigInt(64)] = np.SubFlags[BigInt(64)] & ~BigInt(16);
                        np.SubFlags[BigInt(64)] = np.SubFlags[BigInt(64)] & ~BigInt(32);
                        np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] | BigInt(2);
                    }
                    getrnd = false;
                    dfs = 1;
                    tabpro = 1;
                }
            }
        if (getrnd)
            if (Zxgz.length > 0) {
                t = JSON.stringify(Zxgz[bidx]);
                np = JSON.parse(t);
                dfs = 1;
            }
        if (dfs == 0) {
            var rd = Zxsx["ops_use_random"];
            if (rd == 2) {
                np.PrimaryFlags = BigInt(0);
                return np;
            } else {
                np.UA = ZxaUa();
                np.AppVersion = Zxve(np.UA, Zxa(0, 1));
                np.AppName = "Netscape";
                np.AppCodeName = "Mozilla";
                np.BuildID = Zxba(5, 16);
                np.Product = "Gecko";
                np.ProductSub = Zxba(5, 16);
                np.Vendor = "";
                if (Zxa(0, 1) == 1) np.Vendor = "Google Inc.";
                np.VendorSub = Zxba(5, 16);
                np.PrimaryFlags = BigInt(32767);
                np.SubFlags[BigInt(1)] = BigInt(2) | BigInt(4);
                np.SubFlags[BigInt(2)] = BigInt(32) | BigInt(64);
                np.SubFlags[BigInt(4)] = BigInt(2) | BigInt(4) | BigInt(8);
                np.SubFlags[BigInt(8)] = BigInt(2);
                np.SubFlags[BigInt(32)] = BigInt(1) | BigInt(4) | BigInt(16) | BigInt(1024) | BigInt(4096) | BigInt(32768);
                np.SubFlags[BigInt(64)] = BigInt(4) | BigInt(8);
                np.SubFlags[BigInt(128)] = BigInt(1);
                np.SubFlags[BigInt(256)] = BigInt(1);
                np.SubFlags[BigInt(512)] = BigInt(4) | BigInt(64);
                np.SubFlags[BigInt(2048)] = BigInt(1);
                np.SubFlags[BigInt(16)] = BigInt(1) | BigInt(8) | BigInt(64) | BigInt(512) | BigInt(4096) | BigInt(65536) | BigInt(524288) | BigInt(8388608) | BigInt(67108864);
                np.SubFlags[BigInt(1024)] = BigInt(1) | BigInt(4) | BigInt(16) | BigInt(64) | BigInt(256) | BigInt(1024) | BigInt(4096) | BigInt(16384);
                np.SubFlags[BigInt(4096)] = BigInt(1);
                np.SubFlags[BigInt(8192)] = BigInt(1) | BigInt(8) | BigInt(32) | BigInt(128) | BigInt(256);
            }
        } else {
            if (BigInt(np.SubFlags[BigInt(4)]) & BigInt(2)) np.UA = ZxaUa();
            if (tabpro == 0)
                if (Zxxt == 1)
                    if (Zxkt != null && Zxkt != undefined) {
                        if (BigInt(np.SubFlags[BigInt(512)]) & BigInt(128)) {
                            np.Timezone = Zxkt.Timezone;
                            np.TimeZoneName = Zxkt.TimeZoneName;
                            np.TimeZoneLoc = Zxkt.TimeZoneLoc;
                        }
                        if (BigInt(np.SubFlags[BigInt(64)]) & BigInt(32)) {
                            np.Lang = Zxkt.Lang;
                            np.LangArr = Zxkt.LangArr;
                        }
                    }
        }
        if (typeof np.PrimaryFlags == "string") np.PrimaryFlags = BigInt(np.PrimaryFlags);
        np.PrimaryFlags = BigInt(np.PrimaryFlags) | BigInt(16384);
        np.PrimaryFlags = "" + np.PrimaryFlags;
    } else {
        np.UA = ZxaUa();
        np.AppVersion = Zxve(np.UA, Zxa(0, 1));
        np.AppName = "Netscape";
        np.AppCodeName = "Mozilla";
        np.BuildID = Zxba(5, 16);
        np.Product = "Gecko";
        np.ProductSub = Zxba(5, 16);
        np.Vendor = "";
        if (Zxa(0, 1) == 1) np.Vendor = "Google Inc.";
        np.VendorSub = Zxba(5, 16);
        np.PrimaryFlags = BigInt(1) | BigInt(2) | BigInt(4) | BigInt(8) | BigInt(64) | BigInt(32) | BigInt(128) | BigInt(256) | BigInt(512) | BigInt(16) | BigInt(1024) | BigInt(4096) | BigInt(8192) | BigInt(2048) | BigInt(16384);
        np.SubFlags[BigInt(1)] = BigInt(2) | BigInt(4);
        np.SubFlags[BigInt(2)] = BigInt(32) | BigInt(64);
        np.SubFlags[BigInt(4)] = BigInt(1);
        np.SubFlags[BigInt(8)] = BigInt(1);
        np.SubFlags[BigInt(32)] = BigInt(1) | BigInt(2) | BigInt(8) | BigInt(1024) | BigInt(64) | BigInt(16384);
        np.SubFlags[BigInt(64)] = BigInt(4) | BigInt(8);
        np.SubFlags[BigInt(128)] = BigInt(2);
        np.SubFlags[BigInt(256)] = BigInt(4);
        np.SubFlags[BigInt(512)] = BigInt(4) | BigInt(64);
        np.SubFlags[BigInt(2048)] = BigInt(2);
        np.SubFlags[BigInt(16)] = BigInt(4) | BigInt(32) | BigInt(256) | BigInt(2048) | BigInt(16384) | BigInt(262144) | BigInt(2097152) | BigInt(16777216) | BigInt(134217728);
        np.SubFlags[BigInt(1024)] = BigInt(1) | BigInt(4) | BigInt(16) | BigInt(64) | BigInt(256) | BigInt(1024) | BigInt(4096) | BigInt(16384);
        np.SubFlags[BigInt(4096)] = BigInt(1);
        np.SubFlags[BigInt(8192)] = BigInt(1) | BigInt(8) | BigInt(16) | BigInt(128) | BigInt(256);
        var tsp = Zxsx["lic_profile_sel"];
        if (tsp != undefined && tsp != null) {
            var vi = Zxih(tsp);
            if (vi != NaN) {
                tsp = undefined;
                if (vi <= -3) {
                    Zxvw = 1;
                    np.UA = ZxaUa();
                    np.PrimaryFlags = np.PrimaryFlags & ~BigInt(16384);
                    np.PrimaryFlags = np.PrimaryFlags & ~BigInt(2048);
                    np.SubFlags[BigInt(2048)] = BigInt(0);
                    np.PrimaryFlags = np.PrimaryFlags & ~BigInt(64);
                    np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(2);
                    np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(8);
                    np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(16384);
                }
                if (vi <= -4) {
                    np.PrimaryFlags = np.PrimaryFlags & ~BigInt(8192);
                    np.PrimaryFlags = np.PrimaryFlags & ~BigInt(32);
                    np.PrimaryFlags = np.PrimaryFlags & ~BigInt(8);
                }
            }
        }
    }
    if (typeof np.PrimaryFlags == "string") {
        np.PrimaryFlags = BigInt(np.PrimaryFlags);
        k = 1;
        for (x = 1; x <= 16; x++) {
            if (np.SubFlags[k] == undefined) np.SubFlags[k] = BigInt(0);
            else np.SubFlags[k] = BigInt(np.SubFlags[k]);
            k = k * 2;
        }
    }
    np = Zxvv(np, dm, bidx, dmc);
    return np;
}
function Zxvv(np, dm, bidx, dmc) {
    var k = "fp_" + dm;
    var v = Zxsx[k];
    if (v == undefined || v == null) {
        Zxsx[k] = 1;
        v = 1;
    } else if (v == 2) {
        v = 0;
        np.PrimaryFlags = BigInt(0);
    }
    if (v) {
        k = "fp1_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(4);
            np.SubFlags[BigInt(4)] = BigInt(0);
        }
        k = "fp2_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(1);
            np.SubFlags[BigInt(1)] = BigInt(0);
        }
        k = "fp8_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(2);
            np.SubFlags[BigInt(2)] = BigInt(0);
        }
        k = "fp14_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(64);
            np.SubFlags[BigInt(64)] = BigInt(0);
        }
        k = "fp3_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(4096);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(8192);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(16384);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(32768);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(4194304);
        }
        k = "fp4_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(1);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(2);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(4);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(8);
        }
        k = "fp5_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(2);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(4);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(256);
        }
        k = "fp6_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(8);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(16);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(512);
        }
        k = "fp7_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(1);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(32);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(128);
        }
        k = "fp9_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(128);
            np.SubFlags[BigInt(128)] = BigInt(0);
        }
        k = "fp10_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(8);
            np.SubFlags[BigInt(8)] = BigInt(0);
        }
        k = "fp11_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(1);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(2);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(4);
        }
        k = "fp13_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(16);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(32);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(64);
        }
        k = "fp15_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(256);
            np.SubFlags[BigInt(256)] = BigInt(0);
        }
        k = "fp16_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(1024);
            np.SubFlags[BigInt(1024)] = BigInt(0);
        }
        k = "fp17_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(4096);
            np.SubFlags[BigInt(4096)] = BigInt(0);
        }
        k = "fp18_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(1);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(2);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(4);
        }
        k = "fp19_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(1024);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(8192);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(2048);
        }
        k = "fp20_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(16);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(32);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(64);
        }
        k = "fp21_" + dm;
        v = Zxsx[k];
        if (v == 2) np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(8);
        k = "fp22_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(65536);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(131072);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(262144);
        }
        k = "fp23_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(67108864);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(134217728);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(268435456);
        }
        k = "fp24_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(64);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(128);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(256);
        }
        k = "fp25_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(64);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(4096);
        }
        k = "fp26_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(524288);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(1048576);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(2097152);
        }
        k = "fp27_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(8);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(16);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(32);
        }
        k = "fp28_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(512);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(1024);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(2048);
        }
        k = "fp29_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(8388608);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(16777216);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(33554432);
        }
        k = "fp30_" + dm;
        v = Zxsx[k];
        if (v == 2) np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(128);
        k = "fp31_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(512);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(1024);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(2048);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(256);
        }
        k = "fp32_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(2048)] = np.SubFlags[BigInt(2048)] & ~BigInt(1);
            np.SubFlags[BigInt(2048)] = np.SubFlags[BigInt(2048)] & ~BigInt(2);
        }
        k = "fp33_" + dm;
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(16384);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(32768);
        }
        k = "fp34_" + dm;
        v = Zxsx[k];
        if (v == 2) np.PrimaryFlags = np.PrimaryFlags & ~BigInt(16384);
        k = "gp1";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(4);
            np.SubFlags[BigInt(4)] = BigInt(0);
        }
        k = "gp2";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(1);
            np.SubFlags[BigInt(1)] = BigInt(0);
        }
        k = "gp8";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(2);
            np.SubFlags[BigInt(2)] = BigInt(0);
        }
        k = "gp14";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(64);
            np.SubFlags[BigInt(64)] = BigInt(0);
        }
        k = "gp3";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(4096);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(8192);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(16384);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(32768);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(4194304);
        }
        k = "gp4";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(1);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(2);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(4);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(8);
        }
        k = "gp5";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(2);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(4);
        }
        k = "gp6";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(8);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(16);
        }
        k = "gp7";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(1);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(32);
        }
        k = "gp9";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(128);
            np.SubFlags[BigInt(128)] = BigInt(0);
        }
        k = "gp10";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(8);
            np.SubFlags[BigInt(8)] = BigInt(0);
        }
        k = "gp11";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(1);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(2);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(4);
        }
        k = "gp13";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(16);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(32);
            np.SubFlags[BigInt(512)] = np.SubFlags[BigInt(512)] & ~BigInt(64);
        }
        k = "gp15";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(256);
            np.SubFlags[BigInt(256)] = BigInt(0);
        }
        k = "gp16";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(1024);
            np.SubFlags[BigInt(1024)] = BigInt(0);
        }
        k = "gp17";
        v = Zxsx[k];
        if (v == 2) {
            np.PrimaryFlags = np.PrimaryFlags & ~BigInt(4096);
            np.SubFlags[BigInt(4096)] = BigInt(0);
        }
        k = "gp18";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(1);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(2);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(4);
        }
        k = "gp19";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(1024);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(8192);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(2048);
        }
        k = "gp20";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(16);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(32);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(64);
        }
        k = "gp21";
        v = Zxsx[k];
        if (v == 2) np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(8);
        k = "gp22";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(65536);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(131072);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(262144);
        }
        k = "gp23";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(67108864);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(134217728);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(268435456);
        }
        k = "gp24";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(64);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(128);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(256);
        }
        k = "gp25";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(64);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(4096);
        }
        k = "gp26";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(524288);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(1048576);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(2097152);
        }
        k = "gp27";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(8);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(16);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(32);
        }
        k = "gp28";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(512);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(1024);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(2048);
        }
        k = "gp29";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(8388608);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(16777216);
            np.SubFlags[BigInt(16)] = np.SubFlags[BigInt(16)] & ~BigInt(33554432);
        }
        k = "gp30";
        v = Zxsx[k];
        if (v == 2) np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(128);
        k = "gp31";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(512);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(1024);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(2048);
            np.SubFlags[BigInt(8192)] = np.SubFlags[BigInt(8192)] & ~BigInt(256);
        }
        k = "gp32";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(2048)] = np.SubFlags[BigInt(2048)] & ~BigInt(1);
            np.SubFlags[BigInt(2048)] = np.SubFlags[BigInt(2048)] & ~BigInt(2);
        }
        k = "gp33";
        v = Zxsx[k];
        if (v == 2) {
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(16384);
            np.SubFlags[BigInt(32)] = np.SubFlags[BigInt(32)] & ~BigInt(32768);
        }
        k = "gp34";
        v = Zxsx[k];
        if (v == 2) np.PrimaryFlags = np.PrimaryFlags & ~BigInt(16384);
    }
    return np;
}
chrome.storage.onChanged.addListener(function (changes, namespace) {
    for (var key in changes) {
        var sc = changes[key];
        if (sc.newValue == undefined) delete Zxsx[key];
        else Zxsx[key] = sc.newValue;
    }
    chrome.tabs.query({ active: true, lastFocusedWindow: true }, function (tabs) {
        var url = "";
        try {
            url = tabs[0].url;
        } catch (e) {}
        Zxwf(url);
    });
});
function Zxrw() {
    Zxax();
    window.setInterval(function () {
        if (!Zxto) {
            Zxto = 1;
            Zxb(0);
            Zxb(1);
            Zxax();
        }
    }, 1e4);
}
function Zxn(n) {
    return !isNaN(parseFloat(n)) && isFinite(n);
}
function Zxk() {
    var hex = "";
    var randomPool = new Uint8Array(32);
    crypto.getRandomValues(randomPool);
    for (var i = 0; i < randomPool.length; ++i) hex += randomPool[i].toString(16);
    return hex;
}
chrome.storage.local.get(["uuid", "email_hash", "license_key"], function (items) {
    Zxdb = undefined;
    if (items != undefined) Zxdb = items.uuid;
    if (Zxdb == undefined) {
        Zxdb = Zxk();
        chrome.storage.local.set({ uuid: Zxdb }, function () {});
    }
    var emh = items.email_hash;
    var lkey = items.license_key;
    if (emh != undefined && lkey != undefined) Zxoy(emh, lkey, null);
});
function Zxoy(emh, lkey, callback) {
    var request = new XMLHttpRequest();
    if (request != null) {
        var b = Zxx();
        var url = "https://telemetry.heidef.com/e/v1/" + Zxdb + "/100206/" + lkey + "/" + emh + "/" + b + "/query/profiles";
        request.onreadystatechange = function () {
            var ret = -1;
            if (request.readyState == 4) {
                if (request.status == 200) {
                    var o2 = JSON.parse(request.responseText);
                    if (o2 != null) {
                        ret = o2["ErrorCode"];
                        if (o2["ErrorCode"] == 0)
                            if (o2["DataType"] == 3) {
                                Zxxo = 1;
                                Zxen = lkey;
                                Zxhw = emh;
                                Zxxb(o2["ReturnValue"]);
                            }
                    }
                }
                if (callback != null) callback(ret);
            }
        };
        request.open("GET", url, true);
        try {
            request.send(null);
        } catch (err) {}
    }
}
function Zxee(callback) {
    if (Zxen == "" || Zxhw == "") {
        callback(-1);
        return;
    }
    var request = new XMLHttpRequest();
    if (request != null) {
        var b = Zxx();
        var url = "https://telemetry.heidef.com/e/v1/" + Zxdb + "/100206/" + Zxen + "/" + Zxhw + "/" + b + "/release";
        request.onreadystatechange = function () {
            var ret = -1;
            if (request.readyState == 4) {
                if (request.status == 200) {
                    var o2 = JSON.parse(request.responseText);
                    if (o2 != null) {
                        ret = o2["ErrorCode"];
                        if (ret == 0) Zxlj();
                    }
                }
                if (callback != null) callback(ret);
            }
        };
        request.open("GET", url, true);
        try {
            request.send(null);
        } catch (err) {}
    }
}
function Zxlj() {
    var v = {};
    v["license_key"] = "";
    chrome.storage.local.set(v);
    v["license_string"] = "HOME LICENSE (TYPE:FREE, EXPIRES:NO, STATUS:VALID)";
    chrome.storage.local.set(v);
    v["email"] = "";
    chrome.storage.local.set(v);
    v["email_hash"] = "";
    chrome.storage.local.set(v);
    Zxen = "";
    Zxhw = "";
    Zxxo = 0;
    Zxgz = [];
    Zxqa = {};
    Zxzy = {};
}
function Zxev(js) {
    try {
        Zxkt = JSON.parse(js);
    } catch (e) {
        Zxkt = null;
    }
}
function Zxf(tz) {
    var ret = tz;
    var tzm = {
        "etc/gmt+12": "Dateline Standard Time",
        "etc/gmt+11": "UTC-11",
        "pacific/pago_pago": "UTC-11",
        "pacific/niue": "UTC-11",
        "pacific/midway": "UTC-11",
        "america/adak": "Aleutian Standard Time",
        "pacific/honolulu": "Hawaiian Standard Time",
        "pacific/rarotonga": "Hawaiian Standard Time",
        "pacific/tahiti": "Hawaiian Standard Time",
        "pacific/johnston": "Hawaiian Standard Time",
        "etc/gmt+10": "Hawaiian Standard Time",
        "pacific/marquesas": "Marquesas Standard Time",
        "america/anchorage": "Alaskan Standard Time",
        "america/juneau": "Alaskan Standard Time",
        "america/metlakatla": "Alaskan Standard Time",
        "america/nome": "Alaskan Standard Time",
        "america/sitka": "Alaskan Standard Time",
        "america/yakutat": "Alaskan Standard Time",
        "etc/gmt+9": "UTC-09",
        "pacific/gambier": "UTC-09",
        "america/tijuana": "Pacific Standard Time (Mexico)",
        "america/santa_isabel": "Pacific Standard Time (Mexico)",
        "etc/gmt+8": "UTC-08",
        "pacific/pitcairn": "UTC-08",
        "america/los_angeles": "Pacific Standard Time",
        "america/vancouver": "Pacific Standard Time",
        pst8pdt: "Pacific Standard Time",
        "america/phoenix": "US Mountain Standard Time",
        "america/whitehorse": "US Mountain Standard Time",
        "america/creston": "US Mountain Standard Time",
        "america/dawson": "US Mountain Standard Time",
        "america/dawson_creek": "US Mountain Standard Time",
        "america/fort_nelson": "US Mountain Standard Time",
        "america/hermosillo": "US Mountain Standard Time",
        "etc/gmt+7": "US Mountain Standard Time",
        "america/chihuahua": "Mountain Standard Time (Mexico)",
        "america/mazatlan": "Mountain Standard Time (Mexico)",
        "america/denver": "Mountain Standard Time",
        "america/edmonton": "Mountain Standard Time",
        "america/cambridge_bay": "Mountain Standard Time",
        "america/inuvik": "Mountain Standard Time",
        "america/yellowknife": "Mountain Standard Time",
        "america/ojinaga": "Mountain Standard Time",
        "america/boise": "Mountain Standard Time",
        mst7mdt: "Mountain Standard Time",
        "america/guatemala": "Central America Standard Time",
        "america/belize": "Central America Standard Time",
        "america/costa_rica": "Central America Standard Time",
        "pacific/galapagos": "Central America Standard Time",
        "america/tegucigalpa": "Central America Standard Time",
        "america/managua": "Central America Standard Time",
        "america/el_salvador": "Central America Standard Time",
        "etc/gmt+6": "Central America Standard Time",
        "america/chicago": "Central Standard Time",
        "america/winnipeg": "Central Standard Time",
        "america/rainy_river": "Central Standard Time",
        "america/rankin_inlet": "Central Standard Time",
        "america/resolute": "Central Standard Time",
        "america/matamoros": "Central Standard Time",
        "america/indiana/knox": "Central Standard Time",
        "america/indiana/tell_city": "Central Standard Time",
        "america/menominee": "Central Standard Time",
        "america/north_dakota/beulah": "Central Standard Time",
        "america/north_dakota/center": "Central Standard Time",
        "america/north_dakota/new_salem": "Central Standard Time",
        cst6cdt: "Central Standard Time",
        "pacific/easter": "Easter Island Standard Time",
        "america/mexico_city": "Central Standard Time (Mexico)",
        "america/bahia_banderas": "Central Standard Time (Mexico)",
        "america/merida": "Central Standard Time (Mexico)",
        "america/monterrey": "Central Standard Time (Mexico)",
        "america/regina": "Canada Central Standard Time",
        "america/swift_current": "Canada Central Standard Time",
        "america/bogota": "SA Pacific Standard Time",
        "america/rio_branco": "SA Pacific Standard Time",
        "america/eirunepe": "SA Pacific Standard Time",
        "america/coral_harbour": "SA Pacific Standard Time",
        "america/guayaquil": "SA Pacific Standard Time",
        "america/jamaica": "SA Pacific Standard Time",
        "america/cayman": "SA Pacific Standard Time",
        "america/panama": "SA Pacific Standard Time",
        "america/lima": "SA Pacific Standard Time",
        "etc/gmt+5": "SA Pacific Standard Time",
        "america/cancun": "Eastern Standard Time (Mexico)",
        "america/new_york": "Eastern Standard Time",
        "america/nassau": "Eastern Standard Time",
        "america/toronto": "Eastern Standard Time",
        "america/iqaluit": "Eastern Standard Time",
        "america/montreal": "Eastern Standard Time",
        "america/nipigon": "Eastern Standard Time",
        "america/pangnirtung": "Eastern Standard Time",
        "america/thunder_bay": "Eastern Standard Time",
        "america/detroit": "Eastern Standard Time",
        "america/indiana/petersburg": "Eastern Standard Time",
        "america/indiana/vincennes": "Eastern Standard Time",
        "america/indiana/winamac": "Eastern Standard Time",
        "america/kentucky/monticello": "Eastern Standard Time",
        "america/louisville": "Eastern Standard Time",
        est5edt: "Eastern Standard Time",
        "america/port-au-prince": "Haiti Standard Time",
        "america/havana": "Cuba Standard Time",
        "america/indianapolis": "US Eastern Standard Time",
        "america/indiana/marengo": "US Eastern Standard Time",
        "america/indiana/vevay": "US Eastern Standard Time",
        "america/grand_turk": "Turks And Caicos Standard Time",
        "america/asuncion": "Paraguay Standard Time",
        "america/halifax": "Atlantic Standard Time",
        "atlantic/bermuda": "Atlantic Standard Time",
        "america/glace_bay": "Atlantic Standard Time",
        "america/goose_bay": "Atlantic Standard Time",
        "america/moncton": "Atlantic Standard Time",
        "america/thule": "Atlantic Standard Time",
        "america/caracas": "Venezuela Standard Time",
        "america/cuiaba": "Central Brazilian Standard Time",
        "america/campo_grande": "Central Brazilian Standard Time",
        "america/la_paz": "SA Western Standard Time",
        "america/antigua": "SA Western Standard Time",
        "america/anguilla": "SA Western Standard Time",
        "america/aruba": "SA Western Standard Time",
        "america/barbados": "SA Western Standard Time",
        "america/st_barthelemy": "SA Western Standard Time",
        "america/kralendijk": "SA Western Standard Time",
        "america/manaus": "SA Western Standard Time",
        "america/boa_vista": "SA Western Standard Time",
        "america/porto_velho": "SA Western Standard Time",
        "america/blanc-sablon": "SA Western Standard Time",
        "america/curacao": "SA Western Standard Time",
        "america/dominica": "SA Western Standard Time",
        "america/santo_domingo": "SA Western Standard Time",
        "america/grenada": "SA Western Standard Time",
        "america/guadeloupe": "SA Western Standard Time",
        "america/guyana": "SA Western Standard Time",
        "america/st_kitts": "SA Western Standard Time",
        "america/st_lucia": "SA Western Standard Time",
        "america/marigot": "SA Western Standard Time",
        "america/martinique": "SA Western Standard Time",
        "america/montserrat": "SA Western Standard Time",
        "america/puerto_rico": "SA Western Standard Time",
        "america/lower_princes": "SA Western Standard Time",
        "america/port_of_spain": "SA Western Standard Time",
        "america/st_vincent": "SA Western Standard Time",
        "america/tortola": "SA Western Standard Time",
        "america/st_thomas": "SA Western Standard Time",
        "etc/gmt+4": "SA Western Standard Time",
        "america/santiago": "Pacific SA Standard Time",
        "america/st_johns": "Newfoundland Standard Time",
        "america/araguaina": "Tocantins Standard Time",
        "america/sao_paulo": "E. South America Standard Time",
        "america/cayenne": "SA Eastern Standard Time",
        "antarctica/rothera": "SA Eastern Standard Time",
        "antarctica/palmer": "SA Eastern Standard Time",
        "america/fortaleza": "SA Eastern Standard Time",
        "america/belem": "SA Eastern Standard Time",
        "america/maceio": "SA Eastern Standard Time",
        "america/recife": "SA Eastern Standard Time",
        "america/santarem": "SA Eastern Standard Time",
        "atlantic/stanley": "SA Eastern Standard Time",
        "america/paramaribo": "SA Eastern Standard Time",
        "etc/gmt+3": "SA Eastern Standard Time",
        "america/buenos_aires": "Argentina Standard Time",
        "america/argentina/la_rioja": "Argentina Standard Time",
        "america/argentina/rio_gallegos": "Argentina Standard Time",
        "america/argentina/salta": "Argentina Standard Time",
        "america/argentina/san_juan": "Argentina Standard Time",
        "america/argentina/san_luis": "Argentina Standard Time",
        "america/argentina/tucuman": "Argentina Standard Time",
        "america/argentina/ushuaia": "Argentina Standard Time",
        "america/catamarca": "Argentina Standard Time",
        "america/cordoba": "Argentina Standard Time",
        "america/jujuy": "Argentina Standard Time",
        "america/mendoza": "Argentina Standard Time",
        "america/godthab": "Greenland Standard Time",
        "america/montevideo": "Montevideo Standard Time",
        "america/punta_arenas": "Magallanes Standard Time",
        "america/miquelon": "Saint Pierre Standard Time",
        "america/bahia": "Bahia Standard Time",
        "etc/gmt+2": "UTC-02",
        "america/noronha": "UTC-02",
        "atlantic/south_georgia": "UTC-02",
        "atlantic/azores": "Azores Standard Time",
        "america/scoresbysund": "Azores Standard Time",
        "atlantic/cape_verde": "Cape Verde Standard Time",
        "etc/gmt+1": "Cape Verde Standard Time",
        "etc/gmt": "UTC",
        "america/danmarkshavn": "UTC",
        "etc/utc": "UTC",
        "europe/london": "GMT Standard Time",
        "atlantic/canary": "GMT Standard Time",
        "atlantic/faeroe": "GMT Standard Time",
        "europe/guernsey": "GMT Standard Time",
        "europe/dublin": "GMT Standard Time",
        "europe/isle_of_man": "GMT Standard Time",
        "europe/jersey": "GMT Standard Time",
        "europe/lisbon": "GMT Standard Time",
        "atlantic/madeira": "GMT Standard Time",
        "atlantic/reykjavik": "Greenwich Standard Time",
        "africa/ouagadougou": "Greenwich Standard Time",
        "africa/abidjan": "Greenwich Standard Time",
        "africa/accra": "Greenwich Standard Time",
        "africa/banjul": "Greenwich Standard Time",
        "africa/conakry": "Greenwich Standard Time",
        "africa/bissau": "Greenwich Standard Time",
        "africa/monrovia": "Greenwich Standard Time",
        "africa/bamako": "Greenwich Standard Time",
        "africa/nouakchott": "Greenwich Standard Time",
        "atlantic/st_helena": "Greenwich Standard Time",
        "africa/freetown": "Greenwich Standard Time",
        "africa/dakar": "Greenwich Standard Time",
        "africa/lome": "Greenwich Standard Time",
        "africa/sao_tome": "Sao Tome Standard Time",
        "africa/casablanca": "Morocco Standard Time",
        "africa/el_aaiun": "Morocco Standard Time",
        "europe/berlin": "W. Europe Standard Time",
        "europe/andorra": "W. Europe Standard Time",
        "europe/vienna": "W. Europe Standard Time",
        "europe/zurich": "W. Europe Standard Time",
        "europe/busingen": "W. Europe Standard Time",
        "europe/gibraltar": "W. Europe Standard Time",
        "europe/rome": "W. Europe Standard Time",
        "europe/vaduz": "W. Europe Standard Time",
        "europe/luxembourg": "W. Europe Standard Time",
        "europe/monaco": "W. Europe Standard Time",
        "europe/malta": "W. Europe Standard Time",
        "europe/amsterdam": "W. Europe Standard Time",
        "europe/oslo": "W. Europe Standard Time",
        "europe/stockholm": "W. Europe Standard Time",
        "arctic/longyearbyen": "W. Europe Standard Time",
        "europe/san_marino": "W. Europe Standard Time",
        "europe/vatican": "W. Europe Standard Time",
        "europe/budapest": "Central Europe Standard Time",
        "europe/tirane": "Central Europe Standard Time",
        "europe/prague": "Central Europe Standard Time",
        "europe/podgorica": "Central Europe Standard Time",
        "europe/belgrade": "Central Europe Standard Time",
        "europe/ljubljana": "Central Europe Standard Time",
        "europe/bratislava": "Central Europe Standard Time",
        "europe/paris": "Romance Standard Time",
        "europe/brussels": "Romance Standard Time",
        "europe/copenhagen": "Romance Standard Time",
        "europe/madrid": "Romance Standard Time",
        "africa/ceuta": "Romance Standard Time",
        "europe/warsaw": "Central European Standard Time",
        "europe/sarajevo": "Central European Standard Time",
        "europe/zagreb": "Central European Standard Time",
        "europe/skopje": "Central European Standard Time",
        "africa/lagos": "W. Central Africa Standard Time",
        "africa/luanda": "W. Central Africa Standard Time",
        "africa/porto-novo": "W. Central Africa Standard Time",
        "africa/kinshasa": "W. Central Africa Standard Time",
        "africa/bangui": "W. Central Africa Standard Time",
        "africa/brazzaville": "W. Central Africa Standard Time",
        "africa/douala": "W. Central Africa Standard Time",
        "africa/algiers": "W. Central Africa Standard Time",
        "africa/libreville": "W. Central Africa Standard Time",
        "africa/malabo": "W. Central Africa Standard Time",
        "africa/niamey": "W. Central Africa Standard Time",
        "africa/ndjamena": "W. Central Africa Standard Time",
        "africa/tunis": "W. Central Africa Standard Time",
        "etc/gmt-1": "W. Central Africa Standard Time",
        "asia/amman": "Jordan Standard Time",
        "europe/bucharest": "GTB Standard Time",
        "asia/nicosia": "GTB Standard Time",
        "asia/famagusta": "GTB Standard Time",
        "europe/athens": "GTB Standard Time",
        "asia/beirut": "Middle East Standard Time",
        "africa/cairo": "Egypt Standard Time",
        "europe/chisinau": "E. Europe Standard Time",
        "asia/damascus": "Syria Standard Time",
        "asia/hebron": "West Bank Standard Time",
        "asia/gaza": "West Bank Standard Time",
        "africa/johannesburg": "South Africa Standard Time",
        "africa/bujumbura": "South Africa Standard Time",
        "africa/gaborone": "South Africa Standard Time",
        "africa/lubumbashi": "South Africa Standard Time",
        "africa/maseru": "South Africa Standard Time",
        "africa/blantyre": "South Africa Standard Time",
        "africa/maputo": "South Africa Standard Time",
        "africa/kigali": "South Africa Standard Time",
        "africa/mbabane": "South Africa Standard Time",
        "africa/lusaka": "South Africa Standard Time",
        "africa/harare": "South Africa Standard Time",
        "etc/gmt-2": "South Africa Standard Time",
        "europe/kiev": "FLE Standard Time",
        "europe/mariehamn": "FLE Standard Time",
        "europe/sofia": "FLE Standard Time",
        "europe/tallinn": "FLE Standard Time",
        "europe/helsinki": "FLE Standard Time",
        "europe/vilnius": "FLE Standard Time",
        "europe/riga": "FLE Standard Time",
        "europe/uzhgorod": "FLE Standard Time",
        "europe/zaporozhye": "FLE Standard Time",
        "asia/jerusalem": "Israel Standard Time",
        "europe/kaliningrad": "Kaliningrad Standard Time",
        "africa/khartoum": "Sudan Standard Time",
        "africa/tripoli": "Libya Standard Time",
        "africa/windhoek": "Namibia Standard Time",
        "asia/baghdad": "Arabic Standard Time",
        "europe/istanbul": "Turkey Standard Time",
        "asia/riyadh": "Arab Standard Time",
        "asia/bahrain": "Arab Standard Time",
        "asia/kuwait": "Arab Standard Time",
        "asia/qatar": "Arab Standard Time",
        "asia/aden": "Arab Standard Time",
        "europe/minsk": "Belarus Standard Time",
        "europe/moscow": "Russian Standard Time",
        "europe/kirov": "Russian Standard Time",
        "europe/simferopol": "Russian Standard Time",
        "africa/nairobi": "E. Africa Standard Time",
        "antarctica/syowa": "E. Africa Standard Time",
        "africa/djibouti": "E. Africa Standard Time",
        "africa/asmera": "E. Africa Standard Time",
        "africa/addis_ababa": "E. Africa Standard Time",
        "indian/comoro": "E. Africa Standard Time",
        "indian/antananarivo": "E. Africa Standard Time",
        "africa/mogadishu": "E. Africa Standard Time",
        "africa/juba": "E. Africa Standard Time",
        "africa/dar_es_salaam": "E. Africa Standard Time",
        "africa/kampala": "E. Africa Standard Time",
        "indian/mayotte": "E. Africa Standard Time",
        "etc/gmt-3": "E. Africa Standard Time",
        "asia/tehran": "Iran Standard Time",
        "asia/dubai": "Arabian Standard Time",
        "asia/muscat": "Arabian Standard Time",
        "etc/gmt-4": "Arabian Standard Time",
        "europe/astrakhan": "Astrakhan Standard Time",
        "europe/ulyanovsk": "Astrakhan Standard Time",
        "asia/baku": "Azerbaijan Standard Time",
        "europe/samara": "Russia Time Zone 3",
        "indian/mauritius": "Mauritius Standard Time",
        "indian/reunion": "Mauritius Standard Time",
        "indian/mahe": "Mauritius Standard Time",
        "europe/saratov": "Saratov Standard Time",
        "asia/tbilisi": "Georgian Standard Time",
        "europe/volgograd": "Volgograd Standard Time",
        "asia/yerevan": "Caucasus Standard Time",
        "asia/kabul": "Afghanistan Standard Time",
        "asia/tashkent": "West Asia Standard Time",
        "antarctica/mawson": "West Asia Standard Time",
        "asia/oral": "West Asia Standard Time",
        "asia/aqtau": "West Asia Standard Time",
        "asia/aqtobe": "West Asia Standard Time",
        "asia/atyrau": "West Asia Standard Time",
        "indian/maldives": "West Asia Standard Time",
        "indian/kerguelen": "West Asia Standard Time",
        "asia/dushanbe": "West Asia Standard Time",
        "asia/ashgabat": "West Asia Standard Time",
        "asia/samarkand": "West Asia Standard Time",
        "etc/gmt-5": "West Asia Standard Time",
        "asia/yekaterinburg": "Ekaterinburg Standard Time",
        "asia/karachi": "Pakistan Standard Time",
        "asia/qyzylorda": "Qyzylorda Standard Time",
        "asia/calcutta": "India Standard Time",
        "asia/colombo": "Sri Lanka Standard Time",
        "asia/katmandu": "Nepal Standard Time",
        "asia/almaty": "Central Asia Standard Time",
        "antarctica/vostok": "Central Asia Standard Time",
        "asia/urumqi": "Central Asia Standard Time",
        "indian/chagos": "Central Asia Standard Time",
        "asia/bishkek": "Central Asia Standard Time",
        "asia/qostanay": "Central Asia Standard Time",
        "etc/gmt-6": "Central Asia Standard Time",
        "asia/dhaka": "Bangladesh Standard Time",
        "asia/thimphu": "Bangladesh Standard Time",
        "asia/omsk": "Omsk Standard Time",
        "asia/rangoon": "Myanmar Standard Time",
        "indian/cocos": "Myanmar Standard Time",
        "asia/bangkok": "SE Asia Standard Time",
        "antarctica/davis": "SE Asia Standard Time",
        "indian/christmas": "SE Asia Standard Time",
        "asia/jakarta": "SE Asia Standard Time",
        "asia/pontianak": "SE Asia Standard Time",
        "asia/phnom_penh": "SE Asia Standard Time",
        "asia/vientiane": "SE Asia Standard Time",
        "asia/saigon": "SE Asia Standard Time",
        "etc/gmt-7": "SE Asia Standard Time",
        "asia/barnaul": "Altai Standard Time",
        "asia/hovd": "W. Mongolia Standard Time",
        "asia/krasnoyarsk": "North Asia Standard Time",
        "asia/novokuznetsk": "North Asia Standard Time",
        "asia/novosibirsk": "N. Central Asia Standard Time",
        "asia/tomsk": "Tomsk Standard Time",
        "asia/shanghai": "China Standard Time",
        "asia/hong_kong": "China Standard Time",
        "asia/macau": "China Standard Time",
        "asia/irkutsk": "North Asia East Standard Time",
        "asia/singapore": "Singapore Standard Time",
        "antarctica/casey": "Singapore Standard Time",
        "asia/brunei": "Singapore Standard Time",
        "asia/makassar": "Singapore Standard Time",
        "asia/kuala_lumpur": "Singapore Standard Time",
        "asia/kuching": "Singapore Standard Time",
        "asia/manila": "Singapore Standard Time",
        "etc/gmt-8": "Singapore Standard Time",
        "australia/perth": "W. Australia Standard Time",
        "asia/taipei": "Taipei Standard Time",
        "asia/ulaanbaatar": "Ulaanbaatar Standard Time",
        "asia/choibalsan": "Ulaanbaatar Standard Time",
        "australia/eucla": "Aus Central W. Standard Time",
        "asia/chita": "Transbaikal Standard Time",
        "asia/tokyo": "Tokyo Standard Time",
        "asia/jayapura": "Tokyo Standard Time",
        "pacific/palau": "Tokyo Standard Time",
        "asia/dili": "Tokyo Standard Time",
        "etc/gmt-9": "Tokyo Standard Time",
        "asia/pyongyang": "North Korea Standard Time",
        "asia/seoul": "Korea Standard Time",
        "asia/yakutsk": "Yakutsk Standard Time",
        "asia/khandyga": "Yakutsk Standard Time",
        "australia/adelaide": "Cen. Australia Standard Time",
        "australia/broken_hill": "Cen. Australia Standard Time",
        "australia/darwin": "AUS Central Standard Time",
        "australia/brisbane": "E. Australia Standard Time",
        "australia/lindeman": "E. Australia Standard Time",
        "australia/sydney": "AUS Eastern Standard Time",
        "australia/melbourne": "AUS Eastern Standard Time",
        "pacific/port_moresby": "West Pacific Standard Time",
        "antarctica/dumontdurville": "West Pacific Standard Time",
        "pacific/truk": "West Pacific Standard Time",
        "pacific/guam": "West Pacific Standard Time",
        "pacific/saipan": "West Pacific Standard Time",
        "etc/gmt-10": "West Pacific Standard Time",
        "australia/hobart": "Tasmania Standard Time",
        "australia/currie": "Tasmania Standard Time",
        "asia/vladivostok": "Vladivostok Standard Time",
        "asia/ust-nera": "Vladivostok Standard Time",
        "australia/lord_howe": "Lord Howe Standard Time",
        "pacific/bougainville": "Bougainville Standard Time",
        "asia/srednekolymsk": "Russia Time Zone 10",
        "asia/magadan": "Magadan Standard Time",
        "pacific/norfolk": "Norfolk Standard Time",
        "asia/sakhalin": "Sakhalin Standard Time",
        "pacific/guadalcanal": "Central Pacific Standard Time",
        "antarctica/macquarie": "Central Pacific Standard Time",
        "pacific/ponape": "Central Pacific Standard Time",
        "pacific/kosrae": "Central Pacific Standard Time",
        "pacific/noumea": "Central Pacific Standard Time",
        "pacific/efate": "Central Pacific Standard Time",
        "etc/gmt-11": "Central Pacific Standard Time",
        "asia/kamchatka": "Russia Time Zone 11",
        "asia/anadyr": "Russia Time Zone 11",
        "pacific/auckland": "New Zealand Standard Time",
        "antarctica/mcmurdo": "New Zealand Standard Time",
        "etc/gmt-12": "UTC+12",
        "pacific/tarawa": "UTC+12",
        "pacific/majuro": "UTC+12",
        "pacific/kwajalein": "UTC+12",
        "pacific/nauru": "UTC+12",
        "pacific/funafuti": "UTC+12",
        "pacific/wake": "UTC+12",
        "pacific/wallis": "UTC+12",
        "pacific/fiji": "Fiji Standard Time",
        "pacific/chatham": "Chatham Islands Standard Time",
        "etc/gmt-13": "UTC+13",
        "pacific/enderbury": "UTC+13",
        "pacific/fakaofo": "UTC+13",
        "pacific/tongatapu": "Tonga Standard Time",
        "pacific/apia": "Samoa Standard Time",
        "pacific/kiritimati": "Line Islands Standard Time",
        "etc/gmt-14": "Line Islands Standard Time",
    };
    if (tz.toLowerCase() in tzm) ret = tzm[tz.toLowerCase()];
    return ret;
}
function Zxlf(callback) {
    var request = new XMLHttpRequest();
    if (request != null) {
        var url = "https://ipapi.co/json/";
        request.onreadystatechange = function () {
            if (request.readyState == 4)
                if (request.status == 200) {
                    var ip = null;
                    var o2 = JSON.parse(request.responseText);
                    if (o2 != null) {
                        ip = new Object();
                        ip.IP = o2.ip;
                        ip.Timezone = o2.utc_offset;
                        ip.TimeZoneName = Zxf(o2.timezone);
                        ip.TimeZoneLoc = o2.timezone;
                        ip.Lang = o2.languages;
                        ip.LangArr = o2.languages;
                        Zxkt = ip;
                        Zxim = o2.ip;
                    }
                    if (callback != null) callback(ip);
                }
        };
        request.open("GET", url, true);
        try {
            request.send(null);
        } catch (err) {}
    }
}
function Zxb(sdm) {
    var dm;
    var cpy = [];
    var tot = 0;
    var act = "dms";
    var k = "dm";
    if (sdm) {
        if (Zxzq.length == 0 || Zxmb == 0) return;
        var rd = Zxsx["ops_report_domains"];
        if (rd == undefined || rd == 2) Zxzq = [];
        while (true) {
            dm = Zxzq.pop();
            if (dm == undefined) break;
            tot += dm.length;
            if (tot > 1408) {
                Zxzq.push(dm);
                break;
            }
            cpy.push(dm);
        }
    } else {
        act = "alert";
        k = "alrt";
        if (Zxlg.length == 0 || Zxmb == 0) return;
        while (true) {
            dm = Zxlg.pop();
            if (dm == undefined) break;
            tot += dm.length;
            if (tot > 1408) {
                Zxlg.push(dm);
                break;
            }
            cpy.push(dm);
        }
    }
    var js = JSON.stringify(cpy);
    var request = new XMLHttpRequest();
    if (request != null) {
        var b = Zxx();
        var url = "http://localhost:61006?action=" + act + "&k=" + Zxbg + "&b=" + b + "&" + k + "=" + js;
        request.onreadystatechange = function () {
            if (request.readyState == 4) {
                Zxto = 0;
                if (request.status == 200) {
                    Zxmb = 1;
                    Zxez = 1;
                } else {
                    Zxmb = 0;
                    Zxez = 0;
                }
            }
        };
        request.open("GET", url, true);
        try {
            request.send(null);
        } catch (err) {}
    }
}
function Zxax() {
    if (Zxxo == 1) return;
    var request = new XMLHttpRequest();
    if (request != null) {
        var b = Zxx();
        var ov = "";
        if (Zxc()) ov = "&ov=1";
        var ip = "";
        if (Zxim != "") ip = "&ip=" + Zxim;
        var url = "http://localhost:61006?action=query&k=" + Zxbg + "&b=" + b + "&v=" + Zxac + ov + "&ua=" + Zxlv + ip;
        request.onreadystatechange = function () {
            if (request.readyState == 4) {
                Zxto = 0;
                if (request.status == 200) {
                    var res = request.responseText;
                    Zxy(res);
                    Zxez = 1;
                } else {
                    if (Zxxo == 0) {
                        Zxgz = [];
                        Zxqa = {};
                        Zxzy = {};
                    }
                    Zxez = 0;
                    Zxmb = 0;
                    Zxpe = 0;
                    Zxxt = 0;
                }
            }
        };
        request.open("GET", url, true);
        try {
            request.send(null);
        } catch (err) {}
    }
}
function Zxxl(bp) {
    var np = new Object();
    var k = 1,
        x;
    np.PrimaryFlags = bp.PrimaryFlags;
    np.SubFlags = new Object();
    k = 1;
    for (x = 1; x <= 16; x++) {
        np.SubFlags[k] = bp.SubFlags[k];
        k = k * 2;
    }
    console.log(bp);
    np.Name = "";
    if (bp.Name != undefined && bp.Name != null) np.Name = decodeURIComponent(bp.Name.toString().replace(/\+/g, " "));
    np.UA = decodeURIComponent(bp.UserAgent.toString().replace(/\+/g, " "));
    var ver = Zxh(2);
    np.UA = np.UA.replace("{%HD_RND_VER}", ver);
    ver = Zxh(2);
    np.UA = np.UA.replace("{%HD_RND_VER}", ver);
    np.UA = np.UA.replace("{%HD_RND_NUM}", Zxa(1e4, 1e5));
    np.Lang = decodeURIComponent(bp.Language.toString().replace(/\+/g, " "));
    np.LangArr = decodeURIComponent(bp.LanguageArray.toString().replace(/\+/g, " "));
    np.Accept = decodeURIComponent(bp.Accepts.toString().replace(/\+/g, " "));
    np.Encoding = decodeURIComponent(bp.Encoding.toString().replace(/\+/g, " "));
    np.Os = decodeURIComponent(bp.Os.toString().replace(/\+/g, " "));
    np.Platform = decodeURIComponent(bp.Platform.toString().replace(/\+/g, " "));
    np.Plugins = decodeURIComponent(bp.Plugins.toString().replace(/\+/g, " "));
    np.Timezone = bp.Timezone;
    np.TimeZoneName = decodeURIComponent(bp.TimeZoneName.toString().replace(/\+/g, " "));
    np.Screen = bp.ScreenSize;
    np.TouchPoints = bp.TouchPoints;
    np.Threads = bp.Threads;
    np.Memory = bp.Memory;
    np.Referer = decodeURIComponent(bp.Referer.toString().replace(/\+/g, " "));
    np.DateFormat = decodeURIComponent(bp.DateFormat.toString().replace(/\+/g, " "));
    np.DateLocale = decodeURIComponent(bp.DateLocale.toString().replace(/\+/g, " "));
    np.DateCalendar = decodeURIComponent(bp.DateCalendar.toString().replace(/\+/g, " "));
    np.DateNumbering = decodeURIComponent(bp.DateNumbering.toString().replace(/\+/g, " "));
    np.WebGLVendor = decodeURIComponent(bp.WebGLVendor.toString().replace(/\+/g, " "));
    np.WebGLRenderer = decodeURIComponent(bp.WebGLRenderer.toString().replace(/\+/g, " "));
    np.AppVersion = decodeURIComponent(bp.AppVersion.toString().replace(/\+/g, " "));
    np.AppName = decodeURIComponent(bp.AppName.toString().replace(/\+/g, " "));
    np.AppCodeName = decodeURIComponent(bp.AppCodeName.toString().replace(/\+/g, " "));
    np.BuildID = decodeURIComponent(bp.BuildID.toString().replace(/\+/g, " "));
    np.Product = decodeURIComponent(bp.Product.toString().replace(/\+/g, " "));
    np.ProductSub = decodeURIComponent(bp.ProductSub.toString().replace(/\+/g, " "));
    np.Vendor = decodeURIComponent(bp.Vendor.toString().replace(/\+/g, " "));
    np.VendorSub = decodeURIComponent(bp.VendorSub.toString().replace(/\+/g, " "));
    np.WebRtcIp = "0.0.0.0";
    if (bp.WebRtcIp != undefined && bp.WebRtcIp != null) np.WebRtcIp = decodeURIComponent(bp.WebRtcIp.toString().replace(/\+/g, " "));
    np.GeoLat = "0.0";
    if (bp.GeoLat != undefined && bp.GeoLat != null) np.GeoLat = decodeURIComponent(bp.GeoLat.toString().replace(/\+/g, " "));
    np.GeoLng = "0.0";
    if (bp.GeoLng != undefined && bp.GeoLng != null) np.GeoLng = decodeURIComponent(bp.GeoLng.toString().replace(/\+/g, " "));
    np.AudioSet = 0;
    if (bp.AudioSet != undefined && bp.AudioSet != null) np.AudioSet = bp.AudioSet;
    np.CanvasSet = "0,0,0";
    if (bp.CanvasSet != undefined && bp.CanvasSet != null) np.CanvasSet = decodeURIComponent(bp.CanvasSet.toString().replace(/\+/g, " "));
    np.WebGLSet = "0,0,0";
    if (bp.WebGLSet != undefined && bp.WebGLSet != null) np.WebGLSet = decodeURIComponent(bp.WebGLSet.toString().replace(/\+/g, " "));
    np.RectSet = 0;
    if (bp.RectSet != undefined && bp.RectSet != null) np.RectSet = bp.RectSet;
    np.TimeZoneLoc = "";
    if (bp.TimeZoneLocation != undefined && bp.TimeZoneLocation != null) np.TimeZoneLoc = decodeURIComponent(bp.TimeZoneLocation.toString().replace(/\+/g, " "));
    np.WebGLUnVendor = "";
    if (bp.WebGLUnVendor != undefined && bp.WebGLUnVendor != null) np.WebGLUnVendor = decodeURIComponent(bp.WebGLUnVendor.toString().replace(/\+/g, " "));
    np.WebGLUnRenderer = "";
    if (bp.WebGLUnRenderer != undefined && bp.WebGLUnRenderer != null) np.WebGLUnRenderer = decodeURIComponent(bp.WebGLUnRenderer.toString().replace(/\+/g, " "));
    np.PR = "";
    if (bp.PR != undefined && bp.PR != null) np.PR = decodeURIComponent(bp.PR.toString().replace(/\+/g, " "));
    np.TR = "";
    if (bp.TR != undefined && bp.TR != null) np.TR = decodeURIComponent(bp.TR.toString().replace(/\+/g, " "));
    np.MR = "";
    if (bp.MR != undefined && bp.MR != null) np.MR = decodeURIComponent(bp.MR.toString().replace(/\+/g, " "));
    np.Version = Zxac;
    return np;
}
function Zxxb(bs) {
    var x = 0;
    var bp = null;
    var bo = null;
    var np = null;
    try {
        bo = JSON.parse(bs);
    } catch (e) {
        bo = null;
    }
    if (bo != undefined && bo != null) {
        Zxgz = [];
        Zxqa = {};
        Zxzy = {};
        for (x = 0; x < bo.length; x++) {
            bp = bo[x];
            if (bp != undefined && bp != null) {
                np = Zxxl(bp);
                Zxgz.push(np);
                if (np.Name != "")
                    if (Zxqa.hasOwnProperty(np.Name) == false) {
                        Zxqa[np.Name] = { Id: np.Id, Name: np.Name };
                        Zxzy[np.Name] = np;
                    }
            }
        }
    }
}
function Zxy(result) {
    if (result != undefined)
        if (result != "") {
            var o2 = JSON.parse(result);
            if (o2 != null)
                if (o2["ErrorCode"] == 0)
                    if (o2["DataType"] == 3) {
                        var o3 = JSON.parse(o2["Response"]);
                        if (o3 != undefined && o3 != null) {
                            var bo = null;
                            var bp = null;
                            var x = 0;
                            if (o3["ProductId"] == 100201) {
                                Zxpe = 1;
                                Zxac = 1;
                                Zxvz = decodeURIComponent(o3["UserAgent"].replace(/\+/g, " "));
                                Zxzj = decodeURIComponent(o3["Platform"].replace(/\+/g, " "));
                                Zxiq = decodeURIComponent(o3["OSCPU"].replace(/\+/g, " "));
                            } else if (o3["ProductId"] == 100205) {
                                Zxmb = 1;
                                var bs = o3["Browser"];
                                var bd = o3["BrowserDomains"];
                                var dm = o3["Domains"];
                                var np = null;
                                Zxac = o3["Version"];
                                if (bs != "") Zxxb(bs);
                                var dups = [];
                                var dmc = 1;
                                var v = {};
                                if (dm != "") {
                                    bo = JSON.parse(dm);
                                    if (bo != undefined && bo != null)
                                        for (x = 0; x < bo.length; x++) {
                                            bp = bo[x];
                                            if (bp != undefined && bp != null) {
                                                var domain = bp["Domain"];
                                                var djson = bp["Json"];
                                                if (djson != "") {
                                                    var dobj = JSON.parse(djson);
                                                    if (dobj != undefined && dobj != null) {
                                                        np = Zxxl(dobj[0]);
                                                        dmc = 1;
                                                        if (dups.includes(domain)) dmc = Zxpm(domain) + 1;
                                                        else dups.push(domain);
                                                        v["fp_set_" + dmc + "_" + domain] = JSON.stringify(np);
                                                        chrome.storage.local.set(v);
                                                        Zxj(domain, dmc);
                                                    }
                                                }
                                            }
                                        }
                                }
                                if (bd != "") {
                                    bo = JSON.parse(bd);
                                    if (bo != undefined && bo != null)
                                        for (x = 0; x < bo.length; x++) {
                                            bp = bo[x];
                                            if (bp != undefined && bp != null) {
                                                var domain = bp["Domain"];
                                                var djson = bp["Json"];
                                                if (djson != "") {
                                                    var dobj = JSON.parse(djson);
                                                    if (dobj != undefined && dobj != null) {
                                                        np = Zxxl(dobj[0]);
                                                        dmc = 1;
                                                        if (dups.includes(domain)) dmc = Zxpm(domain) + 1;
                                                        else dups.push(domain);
                                                        v["fp_set_" + dmc + "_" + domain] = JSON.stringify(np);
                                                        chrome.storage.local.set(v);
                                                        Zxj(domain, dmc);
                                                    }
                                                }
                                            }
                                        }
                                }
                            }
                            if (o3["IPSync"] == 1) {
                                if (Zxxt == 0 || o3["IPForce"] == 1) {
                                    Zxxt = 1;
                                    Zxlf(null);
                                }
                            } else Zxxt = 0;
                        }
                    } else if (o2["Browser"] == 1) {
                        Zxmb = 1;
                        Zxpe = 0;
                    } else {
                        Zxpe = 1;
                        Zxmb = 0;
                    }
                else {
                    Zxmb = 0;
                    Zxpe = 0;
                    Zxvz = "";
                    Zxiq = "";
                    Zxzj = "";
                }
        }
    Zxto = 0;
}
function Zxwf(url) {
    if (Zxsx["global"] == 2) {
        chrome.browserAction.setIcon({ path: "/img/cydec32_off.png" });
        return;
    } else chrome.browserAction.setIcon({ path: "/img/cydec32.png" });
    if (url != "") {
        var us = new URL(url);
        var dm = "fp_" + us.hostname;
        var kv = Zxsx[dm];
        if (kv == 2) chrome.browserAction.setIcon({ path: "/img/cydec32_off.png" });
        else chrome.browserAction.setIcon({ path: "/img/cydec32.png" });
    }
}
chrome.tabs.onActivated.addListener(function (activeInfo) {
    chrome.tabs.query({ active: true, lastFocusedWindow: true }, function (tabs) {
        if (tabs != undefined)
            if (tabs[0] != undefined)
                if (tabs[0].url != undefined) {
                    var url = tabs[0].url;
                    Zxwf(url);
                }
    });
});
chrome.tabs.onCreated.addListener(function (tab) {
    try {
        Zxbt.delete(tab.id);
    } catch (e) {}
});
chrome.tabs.onRemoved.addListener(function (tabId, removeInfo) {
    try {
        Zxbt.delete(tabId);
    } catch (e) {}
});
chrome.tabs.onUpdated.addListener(function (tabId, changeInfo, tab) {
    chrome.tabs.query({ active: true, lastFocusedWindow: true }, function (tabs) {
        if (tabs != undefined)
            if (tabs[0] != undefined)
                if (tabs[0].url != undefined) {
                    var url = tabs[0].url;
                    Zxwf(url);
                }
    });
});
chrome.webRequest.onBeforeSendHeaders.addListener(
    function (details) {
        var url = new URL(details.url);
        var uhn = url.hostname.toLowerCase();
        var dm,
            kv,
            fnd = 1,
            k = 1,
            x,
            v,
            np,
            tfp,
            tnp,
            dmc,
            js,
            rd,
            mod,
            s,
            i,
            hn;
        var flags = new Object();
        if (uhn.indexOf("heidef.com") >= 0 || uhn.indexOf("antifp.com") >= 0) return;
        flags.PrimaryFlags = BigInt(0);
        flags.SubFlags = new Object();
        k = 1;
        for (x = 1; x <= 16; x++) {
            flags.SubFlags[k] = BigInt(0);
            k = k * 2;
        }
        Zxzq.push(uhn);
        Zxbt.set(details.tabId, uhn);
        if (details.type == "main_frame") Zxwf(url);
        dm = "fp_" + uhn;
        kv = Zxsx[dm];
        if (kv == undefined || kv == null) {
            Zxsx[dm] = 1;
            v = {};
            v[dm] = 1;
            chrome.storage.local.set(v);
            fnd = 0;
        } else if (kv == 2) return;
        if (Zxsx["global"] == 2) return;
        var useragent = ZxaUa();
        var lang = "";
        var encoding = "";
        var accepts = "";
        var referer = "";
        flags.PrimaryFlags = BigInt(1) | BigInt(2) | BigInt(4) | BigInt(64);
        flags.SubFlags[BigInt(1)] = BigInt(2) | BigInt(4);
        flags.SubFlags[BigInt(2)] = BigInt(32) | BigInt(64);
        flags.SubFlags[BigInt(4)] = BigInt(2) | BigInt(4) | BigInt(8);
        flags.SubFlags[BigInt(64)] = BigInt(4) | BigInt(8);
        flags.SubFlags[BigInt(4096)] = BigInt(0);
        if (Zxpe == 1) {
            if (Zxvz == "") return;
            flags.PrimaryFlags = BigInt(4);
            flags.SubFlags[BigInt(4)] = BigInt(1);
            useragent = Zxvz;
        } else if (Zxmb == 1 || Zxxo == 1) {
            if (Zxgz.length > 0) {
                np = Zxgz[Math.floor(Math.random() * Zxgz.length)];
                k = "lic_profile_sel";
                tfp = Zxsx[k];
                if (tfp != undefined)
                    if (tfp != "0")
                        if (Zxzy.hasOwnProperty(tfp)) {
                            tnp = Zxzy[tfp];
                            if (tnp != undefined) {
                                js = JSON.stringify(tnp, (key, value) => (typeof value === "bigint" || typeof value == "int" ? value.toString() : value));
                                np = JSON.parse(js);
                                k = tfp.replace(/\W/g, "").toLowerCase().trim();
                                v = Zxsx[k + "_lic_language_val"];
                                if (v != undefined && v != null && v != "") np.Lang = v;
                                if (typeof np.PrimaryFlags == "string") {
                                    np.PrimaryFlags = BigInt(np.PrimaryFlags);
                                    k = 1;
                                    for (x = 1; x <= 16; x++) {
                                        if (np.SubFlags[k] == undefined) np.SubFlags[k] = BigInt(0);
                                        else np.SubFlags[k] = BigInt(np.SubFlags[k]);
                                        k = k * 2;
                                    }
                                }
                            }
                        }
                flags.PrimaryFlags = BigInt(np.PrimaryFlags);
                flags.SubFlags = new Object();
                k = 1;
                if (np.SubFlags == undefined)
                    for (x = 1; x <= 16; x++) {
                        flags.SubFlags[k] = BigInt(0);
                        k = k * 2;
                    }
                else
                    for (x = 1; x <= 16; x++) {
                        v = np.SubFlags[k];
                        if (v == undefined) v = 0;
                        flags.SubFlags[k] = BigInt(v);
                        k = k * 2;
                    }
                useragent = np.UA;
                lang = np.Lang;
                accepts = np.Accept;
                encoding = np.Encoding;
                referer = np.Referer;
            }
            dmc = Zxpm(uhn);
            if (dmc > 0) {
                if (dmc == 1) dm = "fp_set_1_" + uhn;
                else dm = "fp_set_" + Zxa(1, dmc) + "_" + uhn;
                js = Zxsx[dm];
                if (js != undefined && js != null) {
                    np = JSON.parse(js);
                    flags.PrimaryFlags = BigInt(np.PrimaryFlags);
                    flags.SubFlags = new Object();
                    k = 1;
                    for (x = 1; x <= 16; x++) {
                        flags.SubFlags[k] = BigInt(np.SubFlags[k]);
                        k = k * 2;
                    }
                    useragent = np.UA;
                    lang = np.Lang;
                    accepts = np.Accept;
                    encoding = np.Encoding;
                    referer = np.Referer;
                }
            }
            if (Zxgz.length == 0 && dmc == 0) {
                rd = Zxsx["ops_use_random"];
                if (rd != 2) {
                    flags.PrimaryFlags = BigInt(32767);
                    flags.SubFlags[BigInt(1)] = BigInt(2) | BigInt(4);
                    flags.SubFlags[BigInt(2)] = BigInt(32) | BigInt(64);
                    flags.SubFlags[BigInt(4)] = BigInt(2) | BigInt(4) | BigInt(8);
                    flags.SubFlags[BigInt(8)] = BigInt(2);
                    flags.SubFlags[BigInt(32)] = BigInt(1) | BigInt(4) | BigInt(16) | BigInt(1024);
                    flags.SubFlags[BigInt(64)] = BigInt(4) | BigInt(8);
                    flags.SubFlags[BigInt(128)] = BigInt(1);
                    flags.SubFlags[BigInt(256)] = BigInt(1);
                    flags.SubFlags[BigInt(512)] = BigInt(4);
                    flags.SubFlags[BigInt(2048)] = BigInt(1);
                    flags.SubFlags[BigInt(16)] = BigInt(16384) | BigInt(1);
                    flags.SubFlags[BigInt(1024)] = BigInt(1) | BigInt(4) | BigInt(16) | BigInt(64) | BigInt(256) | BigInt(1024) | BigInt(4096) | BigInt(16384);
                    flags.SubFlags[BigInt(4096)] = BigInt(1);
                    flags.SubFlags[BigInt(8192)] = BigInt(1) | BigInt(8) | BigInt(16) | BigInt(128) | BigInt(256);
                }
            }
        }
        if (Zxpe != 1) {
            dm = "fp1_" + uhn;
            if (Zxsx[dm] == 2) {
                flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(4);
                flags.SubFlags[BigInt(4)] = BigInt(0);
            }
            dm = "fp2_" + uhn;
            if (Zxsx[dm] == 2) {
                flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(1);
                flags.SubFlags[BigInt(1)] = BigInt(0);
            }
            dm = "fp8_" + uhn;
            if (Zxsx[dm] == 2) {
                flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(2);
                flags.SubFlags[BigInt(2)] = BigInt(0);
            }
            dm = "fp14_" + uhn;
            if (Zxsx[dm] == 2) {
                flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(64);
                flags.SubFlags[BigInt(64)] = BigInt(0);
            }
            dm = "fp15_" + uhn;
            if (Zxsx[dm] == 2) {
                flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(256);
                flags.SubFlags[BigInt(256)] = BigInt(0);
            }
            dm = "fp17_" + uhn;
            if (Zxsx[dm] == 2) {
                flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(4096);
                flags.SubFlags[BigInt(4096)] = BigInt(0);
            }
        }
        if (details.type == "main_frame") {
            Zxsr[details.tabId] = flags;
            Zxqm[details.tabId] = new Array();
            Zxgf[details.tabId] = uhn;
        } else {
            var tf = Zxsr[details.tabId];
            if (tf != undefined && tf != null) {
                dm = "umops_" + Zxgf[details.tabId];
                if (Zxsx[dm] == 1) flags = tf;
                fnd = 0;
                var urla = Zxqm[details.tabId];
                for (x = 0; x < urla.length; x++)
                    if (urla[x] == uhn) {
                        fnd = 1;
                        break;
                    }
                if (fnd == 0) urla.push(uhn);
            }
        }
        if (Zxsx["gp1"] == 2) flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(4);
        if (Zxsx["gp2"] == 2) flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(1);
        if (Zxsx["gp8"] == 2) flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(2);
        if (Zxsx["gp14"] == 2) flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(64);
        if (Zxsx["gp15"] == 2) flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(256);
        if (Zxsx["gp17"] == 2) flags.PrimaryFlags = flags.PrimaryFlags & ~BigInt(4096);
        var r = 0;
        mod = false;
        s = "";
        for (i = 0; i < details.requestHeaders.length; ++i) {
            hn = details.requestHeaders[i].name.toLowerCase();
            if (hn == "etag") {
                if (flags.PrimaryFlags & BigInt(4096)) if (flags.SubFlags[BigInt(4096)] & BigInt(1)) details.requestHeaders[i].value = "";
            } else if (hn == "referer") {
                if (flags.PrimaryFlags & BigInt(256)) {
                    if (flags.SubFlags[BigInt(256)] == undefined) flags.SubFlags[BigInt(256)] = BigInt(0);
                    if (flags.SubFlags[BigInt(256)] & BigInt(1)) details.requestHeaders[i].value = "";
                    else if (flags.SubFlags[BigInt(256)] & BigInt(2)) details.requestHeaders[i].value = referer;
                    else if (flags.SubFlags[BigInt(256)] & BigInt(4)) {
                        var bref = Zxba(16, 32).toLowerCase();
                        bref = "https://www." + bref + ".com";
                        details.requestHeaders[i].value = bref;
                    }
                }
            } else if (hn == "user-agent") {
                Zxlv = encodeURI(details.requestHeaders[i].value);
                if (flags.PrimaryFlags & BigInt(4)) {
                    if (flags.SubFlags[BigInt(4)] == undefined) flags.SubFlags[BigInt(4)] = BigInt(0);
                    if (flags.SubFlags[BigInt(4)] > BigInt(0)) details.requestHeaders[i].value = useragent;
                }
            } else if (hn == "accept") {
                if (flags.PrimaryFlags & BigInt(1)) {
                    if (flags.SubFlags[BigInt(1)] == undefined) flags.SubFlags[BigInt(1)] = BigInt(0);
                    if (Zxmb == 1 || Zxxo == 1)
                        if (flags.SubFlags[BigInt(1)] & BigInt(1)) {
                            details.requestHeaders[i].value = accepts;
                            continue;
                        }
                    var accept = details.requestHeaders[i].value.split(",");
                    mod = false;
                    if (flags.SubFlags[BigInt(1)] & BigInt(2)) {
                        r = Zxa(3, 10);
                        while (true) {
                            x = Zxa(0, accept.length - 1);
                            s = Zxba(4, 8).toLowerCase() + "/" + Zxba(4, 8).toLowerCase();
                            accept.splice(x, 0, s);
                            r--;
                            if (r == 0) break;
                        }
                        mod = true;
                    }
                    if (flags.SubFlags[BigInt(1)] & BigInt(4)) {
                        accept = Zxon(accept);
                        mod = true;
                    }
                    if (mod) {
                        var naccept = "";
                        for (x = 0; x < accept.length; x++) naccept = naccept + accept[x] + ",";
                        if (naccept.length > 0) naccept = naccept.substr(0, naccept.length - 1);
                        details.requestHeaders[i].value = naccept;
                    }
                }
            } else if (hn == "accept-encoding") {
                if (flags.PrimaryFlags & BigInt(2)) {
                    if (flags.SubFlags[BigInt(2)] == undefined) flags.SubFlags[BigInt(2)] = BigInt(0);
                    if (Zxmb == 1 || Zxxo == 1)
                        if (flags.SubFlags[BigInt(2)] & BigInt(16)) {
                            details.requestHeaders[i].value = encoding;
                            continue;
                        }
                    var enc = details.requestHeaders[i].value.split(",");
                    mod = false;
                    if (flags.SubFlags[BigInt(2)] & BigInt(32)) {
                        r = Zxa(3, 10);
                        while (true) {
                            x = Zxa(0, enc.length - 1);
                            s = Zxba(4, 8).toLowerCase();
                            enc.splice(x, 0, s);
                            r--;
                            if (r == 0) break;
                        }
                        mod = true;
                    }
                    if (flags.SubFlags[BigInt(2)] & BigInt(64)) {
                        enc = Zxon(enc);
                        mod = true;
                    }
                    if (mod) {
                        var nenc = "";
                        for (x = 0; x < enc.length; x++) nenc = nenc + enc[x] + ",";
                        if (nenc.length > 0) nenc = nenc.substr(0, nenc.length - 1);
                        details.requestHeaders[i].value = nenc;
                    }
                }
            } else if (hn == "accept-language")
                if (flags.PrimaryFlags & BigInt(64)) {
                    if (flags.SubFlags[BigInt(64)] == undefined) flags.SubFlags[BigInt(64)] = BigInt(0);
                    if (Zxmb == 1 || Zxxo == 1)
                        if (flags.SubFlags[BigInt(64)] & BigInt(2)) {
                            details.requestHeaders[i].value = lang;
                            continue;
                        }
                    var lngarr = [
                        "af",
                        "sq",
                        "ar-ae",
                        "ar-bh",
                        "ar-dz",
                        "ar-eg",
                        "ar-iq",
                        "ar-jo",
                        "ar-kw",
                        "ar-lb",
                        "ar-ly",
                        "ar-ma",
                        "ar-om",
                        "ar-qa",
                        "ar-sa",
                        "ar-sy",
                        "ar-tn",
                        "ar-ye",
                        "eu",
                        "be",
                        "bg",
                        "ca",
                        "hr",
                        "zh-cn",
                        "zh-hk",
                        "zh-sg",
                        "zh-tw",
                        "cs",
                        "da",
                        "nl",
                        "nl-be",
                        "en",
                        "en-au",
                        "en-bz",
                        "en-ca",
                        "en-gb",
                        "en-ie",
                        "en-jm",
                        "en-nz",
                        "en-tt",
                        "en-us",
                        "en-za",
                        "et",
                        "fa",
                        "fi",
                        "fo",
                        "fr",
                        "fr-be",
                        "fr-ca",
                        "fr-ch",
                        "fr-lu",
                        "gd",
                        "de",
                        "de-at",
                        "de-ch",
                        "de-li",
                        "de-lu",
                        "el",
                        "ga",
                        "he",
                        "hi",
                        "hu",
                        "id",
                        "is",
                        "it",
                        "it-ch",
                        "ja",
                        "ko",
                        "ko",
                        "ku",
                        "lt",
                        "lv",
                        "mk",
                        "ml",
                        "ms",
                        "mt",
                        "nb",
                        "nn",
                        "no",
                        "pa",
                        "pl",
                        "pt",
                        "pt-br",
                        "rm",
                        "ro",
                        "ro-md",
                        "ru",
                        "ru-md",
                        "sb",
                        "sk",
                        "sl",
                        "sr",
                        "es",
                        "es-ar",
                        "es-bo",
                        "es-cl",
                        "es-co",
                        "es-cr",
                        "es-do",
                        "es-ec",
                        "es-gt",
                        "es-hn",
                        "es-mx",
                        "es-ni",
                        "es-pa",
                        "es-pe",
                        "es-pr",
                        "es-py",
                        "es-sv",
                        "es-uy",
                        "es-ve",
                        "sv",
                        "sv-fi",
                        "th",
                        "tn",
                        "tr",
                        "ts",
                        "uk",
                        "ur",
                        "ve",
                        "vi",
                        "cy",
                        "xh",
                        "ji",
                        "zu",
                    ];
                    lang = details.requestHeaders[i].value.split(",");
                    mod = false;
                    if (flags.SubFlags[BigInt(64)] & BigInt(4)) {
                        r = Zxa(3, 10);
                        while (true) {
                            x = Zxa(0, lang.length - 1);
                            s = lngarr[Math.floor(Math.random() * lngarr.length)];
                            lang.splice(x, 0, s);
                            r--;
                            if (r == 0) break;
                        }
                        mod = true;
                    }
                    if (flags.SubFlags[BigInt(64)] & BigInt(8)) {
                        lang = Zxon(lang);
                        mod = true;
                    }
                    if (mod) {
                        var nlang = "";
                        for (x = 0; x < lang.length; x++) nlang = nlang + lang[x] + ",";
                        if (nlang.length > 0) nlang = nlang.substr(0, nlang.length - 1);
                        details.requestHeaders[i].value = nlang;
                    }
                }
        }
        return { requestHeaders: details.requestHeaders };
    },
    { urls: ["<all_urls>"] },
    extraInfoSpecReq
);
function Zxh(p) {
    var ret = "";
    for (var x = 1; x <= p; x++)
        if (x == p) ret = ret + Zxa(1, 1e3);
        else ret = ret + Zxa(1, 1e3) + ".";
    return ret;
}
function Zxeu(v) {
    var ret = "";
    var tmp = 0;
    for (var i = 0; i < v.length; i++) {
        tmp = v.charCodeAt(i);
        if (Zxm(tmp)) {
            tmp = parseInt(v.charAt(i)) + Zxa(1, 10);
            ret = ret + tmp.toString();
        } else ret = ret + v.charAt(i);
    }
    return ret;
}
function Zxm(v) {
    if (v >= 48 && v <= 57) return true;
    return false;
}
function Zxba(mn, mx) {
    var r = Zxa(mn, mx);
    var tmp = "";
    var c = 0;
    for (var i = 0; i < r; i++) {
        c = Zxa(48, 122);
        if (c >= 58 && c < 65) c = 57;
        else if (c >= 91 && c < 97) c = 90;
        tmp = tmp + String.fromCharCode(c);
    }
    return tmp;
}
function Zxa(minVal, maxVal) {
    var randVal = minVal + Math.random() * (maxVal - minVal);
    return Math.round(randVal);
}
function Zxon(array) {
    var currentIndex = array.length,
        temporaryValue,
        randomIndex;
    while (currentIndex !== 0) {
        randomIndex = Math.floor(Math.random() * currentIndex);
        currentIndex -= 1;
        temporaryValue = array[currentIndex];
        array[currentIndex] = array[randomIndex];
        array[randomIndex] = temporaryValue;
    }
    return array;
}
function Zxx() {
    var b = 12;
    var br = Zxsx["ops_chrome_type"];
    if (br != undefined && br != null && Zxn(br)) {
        br = parseInt(br);
        if (br >= 10 && br <= 21) b = br;
    }
    return b;
}
function Zxve(ua, full) {
    var p1 = ua.indexOf("/");
    var p2 = 0;
    if (p1 == -1) return ua;
    var tmp = ua.substr(p1 + 1);
    if (full == 0) {
        p1 = tmp.indexOf("(");
        var p2 = tmp.indexOf(";");
        if (p1 > 0 && p2 > 0) tmp = tmp.substr(0, p2) + ")";
    }
    return tmp;
}
function Zxih(value) {
    if (/^[-+]?(\d+|Infinity)$/.test(value)) return Number(value);
    else return NaN;
}
function ZxaUa() {
    var ua = [
        "Mozilla/5.0 (Linux; U; Android 2.2) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1",
        "Mozilla/5.0 (Linux; Android 7.1.2; AFTMM Build/NS6265; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/70.0.3538.110 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 7.1.2; AFTMM Build/NS6264; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/59.0.3071.125 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 9; SM-G960F Build/PPR1.180610.011; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/74.0.3729.157 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 6.0.1; SM-G532G Build/MMB29T) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.83 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 6.0; vivo 1713 Build/MRA58K) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.124 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 7.0; SM-G610M Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 7.1; Mi A1 Build/N2G47H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.83 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 6.0; Nexus 5 Build/MRA58N) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1; A37f Build/LMY47V) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/43.0.2357.93 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; vivo X7 Build/LMY47V; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/48.0.2564.116 Mobile Safari/537.36 baiduboxapp/8.6.5 (Baidu; P1 5.1.1)",
        "Mozilla/5.0 (Linux; Android 6.0.1; Redmi 4A Build/MMB29M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/60.0.3112.116 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; U; Android 6.0.1; zh-CN; F5121 Build/34.0.A.1.247) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/40.0.2214.89 UCBrowser/11.5.1.944 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 7.0; SM-G570M Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 7.1; vivo 1716 Build/N2G47H) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.98 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 7.0; SAMSUNG SM-G610M Build/NRD90M) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/7.4 Chrome/59.0.3071.125 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 6.0; MYA-L22 Build/HUAWEIMYA-L22) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.84 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1; A1601 Build/LMY47I) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.98 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 4.4.2; de-de; SAMSUNG GT-I9195 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/1.5 Chrome/28.0.1500.94 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.0; SAMSUNG SM-G900F Build/LRX21T) AppleWebKit/537.36 (KHTML, like Gecko) SamsungBrowser/2.1 Chrome/34.0.1847.76 Mobile Safari/537.36",
        "Mozilla/5.0 (BlackBerry; U; BlackBerry 9780; en-GB) AppleWebKit/534.8+ (KHTML, like Gecko) Version/6.0.0.546 Mobile Safari/534.8+",
        "Mozilla/5.0 (BlackBerry; U; BlackBerry 9320; en-GB) AppleWebKit/534.11+ (KHTML, like Gecko) Version/7.1.0.398 Mobile Safari/534.11+",
        "Mozilla/5.0 (BlackBerry; U; BlackBerry 9360; en-GB) AppleWebKit/534.11+ (KHTML, like Gecko) Version/7.0.0.353 Mobile Safari/534.11+",
        "Mozilla/5.0 (X11; CrOS x86_64 11895.118.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.159 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 12105.100.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.144 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 11021.81.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.110 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 12239.92.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.136 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 12371.75.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.105 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 10895.78.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.120 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 11647.104.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/73.0.3683.88 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 10575.58.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 11316.165.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.122 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 10032.86.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.140 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 11151.113.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/71.0.3578.127 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 9901.77.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/62.0.3202.97 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 10718.88.2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.118 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS armv7l 9592.96.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.114 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 10323.67.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.209 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 10176.76.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.190 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 7262.57.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.98 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 10452.85.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/66.0.3359.158 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 9765.85.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.123 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 8350.68.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 9000.91.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.110 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 9202.64.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.146 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 8872.76.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/55.0.2883.105 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 8743.83.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.93 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 8530.96.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/53.0.2785.154 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 9460.73.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.134 Safari/537.36",
        "Mozilla/5.0 (X11; CrOS x86_64 8172.60.0) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.103 Safari/537.36",
        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_3; en-us; Silk/1.0.146.3-Gen4_12000410) AppleWebKit/533.16 (KHTML, like Gecko) Version/5.0 Safari/533.16 Silk-Accelerated=true",
        "Mozilla/5.0 (Linux; U; Android 2.3.4; en-us; Kindle Fire Build/GINGERBREAD) AppleWebKit/533.1 (KHTML, like Gecko) Version/4.0 Mobile Safari/533.1",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFSUWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/75.3.3 like Chrome/75.0.3770.101 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFSUWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/70.4.2 like Chrome/70.0.3538.80 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFFOWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/76.3.6 like Chrome/76.0.3809.132 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFFOWI Build/LVY48F) AppleWebKit/537.36 (KHTML, like Gecko) Silk/60.2.12 like Chrome/60.0.3112.107 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFSUWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/77.2.19 like Chrome/77.0.3865.92 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFSUWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/76.2.1 like Chrome/76.0.3809.111 Safari/537.36",
        "Mozilla/5.0 (Linux; U; Android 4.0.3; en-us; KFTT Build/IML74K) AppleWebKit/537.36 (KHTML, like Gecko) Silk/3.47 like Chrome/37.0.2026.117 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 7.1.2; KFKAWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/75.4.8 like Chrome/75.0.3770.143 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFSUWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/74.3.14 like Chrome/74.0.3729.157 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 4.0.3; KFTT) AppleWebKit/537.36 (KHTML, like Gecko) Silk/73.7.4 like Chrome/73.0.3683.90 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFFOWI Build/LVY48F) AppleWebKit/537.36 (KHTML, like Gecko) Silk/64.3.4 like Chrome/64.0.3282.137 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFFOWI Build/LVY48F) AppleWebKit/537.36 (KHTML, like Gecko) Silk/63.1.34 like Chrome/63.0.3239.111 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFSUWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/75.2.22 like Chrome/75.0.3770.101 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFSUWI) AppleWebKit/537.36 (KHTML, like Gecko) Silk/73.6.17 like Chrome/73.0.3683.90 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1.1; KFFOWI Build/LVY48F) AppleWebKit/537.36 (KHTML, like Gecko) Silk/52.1.79 like Chrome/52.0.2743.98 Safari/537.36",
        "Mozilla/5.0 (X11; FreeBSD; U; Viera; pl-PL) AppleWebKit/537.11 (KHTML, like Gecko) Viera/3.3.3 Chrome/23.0.1271.97 Safari/537.11",
        "Opera/9.63 (X11; FreeBSD 7.1-RELEASE i386; U; en) Presto/2.1.1",
        "Mozilla/5.0 (FreeBSD; Viera; rv:34.0) Gecko/20100101 Firefox/34.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:57.0) Gecko/20100101 Firefox/57.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:40.0) Gecko/20100101 Firefox/40.0",
        "Mozilla/5.0 (X11; FreeBSD amd64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.115 Safari/537.36",
        "Mozilla/5.0 (X11; FreeBSD i386; rv:43.0) Gecko/20100101 Firefox/43.0 SeaMonkey/2.40",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; U; FreeBSD i386; en-US; rv:1.5) Gecko/20031021",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:37.0) Gecko/20100101 Firefox/37.0",
        "Mozilla/5.0 (X11; U; FreeBSD x86_64; en-US) AppleWebKit/534.16 (KHTML, like Gecko) Chrome/10.0.648.204 Safari/534.16",
        "Mozilla/5.0 (X11; FreeBSD) AppleWebKit/537.21 (KHTML, like Gecko) konqueror/4.14.3 Safari/537.21",
        "Mozilla/5.0 (X11; FreeBSD) AppleWebKit/537.32 (KHTML, like Gecko) Chrome/18.0.1025.133 Safari/537.32 Midori/0.5",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:49.0) Gecko/20100101 Firefox/49.0",
        "Mozilla/5.0 (X11; FreeBSD) AppleWebKit/602.1 (KHTML, like Gecko) Otter/0.9.93",
        "Mozilla/5.0 (X11; U; FreeBSD i386; zh-tw; rv:31.0) Gecko/20100101 Firefox/31.0 Opera/13.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:48.0) Gecko/20100101 Firefox/48.0",
        "Mozilla/5.0 (X11; FreeBSD; U; Viera; en-GB) AppleWebKit/535.1 (KHTML, like Gecko) Viera/1.5.2 Chrome/14.0.835.202 Safari/535.1",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:47.0) Gecko/20100101 Firefox/47.0",
        "Opera/9.80 (X11; FreeBSD 8.1-RELEASE i386; Edition Next) Presto/2.12.388 Version/12.10",
        "Mozilla/5.0 (X11; FreeBSD amd64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.82 Safari/537.36",
        "Mozilla/5.0 (X11; FreeBSD amd64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.106 Safari/537.36",
        "Mozilla/5.0 (X11; U; FreeBSD i386; zh-tw; rv:31.0) Gecko/20100101 Opera/13.0",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:52.0) Gecko/20100101 Firefox/52.0",
        "Mozilla/5.0 (X11; FreeBSD amd64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:60.0) Gecko/20100101 Firefox/60.0",
        "Mozilla/5.0 (X11; FreeBSD i386; rv:36.0) Gecko/20100101 Firefox/36.0 SeaMonkey/2.33.1",
        "Mozilla/5.0 (X11; FreeBSD i386; rv:26.0) Gecko/20100101 Firefox/26.0",
        "Mozilla/5.0 (X11; FreeBSD x86_64; rv:21.0) Gecko/21.0 Firefox/21.0",
        "Mozilla/5.0 (X11; U; FreeBSD i386; en-US; rv:1.6) Gecko/20040406 Galeon/1.3.15",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:69.0) Gecko/20100101 Firefox/69.0",
        "Mozilla/3.0 (WorldGate Gazelle 3.5.1 build 19; FreeBSD2.2.5-STABLE)",
        "Mozilla/5.0 (X11; FreeBSD amd64; rv:45.0) Gecko/20100101 Firefox/45.0",
        "Mozilla/5.0 (X11; U; FreeBSD i386; en-US; rv:1.9.2.9) Gecko/20100913 Firefox/3.6.9",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 12_2 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1 Mobile/15E148 Safari/604.1",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 11_4_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.0 Mobile/15E148 Safari/604.1",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1",
        "Mozilla/5.0 (iPhone; CPU iPhone OS 10_3_3 like Mac OS X) AppleWebKit/603.3.8 (KHTML, like Gecko) Version/10.0 Mobile/14G60 Safari/602.1",
        "Mozilla/5.0 (iPad; CPU OS 9_3_5 like Mac OS X) AppleWebKit/601.1.46 (KHTML, like Gecko) Version/9.0 Mobile/13G36 Safari/601.1",
        "Mozilla/5.0 (iPad; CPU OS 6_0 like Mac OS X) AppleWebKit/536.26 (KHTML, like Gecko) Version/6.0 Mobile/10A5355d Safari/8536.25",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/44.0.2403.157 Safari/537.36",
        "Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.9a1) Gecko/20070308 Minefield/3.0a1",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) HeadlessChrome/74.0.3729.157 Safari/537.36",
        "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:49.0) Gecko/20100101 Firefox/49.0",
        "Mozilla/5.0 (X11; U; Linux i686; pt-BR; rv:1.9.0.15) Gecko/2009102815 Ubuntu/9.04 (jaunty) Firefox/3.0.15",
        "Opera/9.80 (Linux armv7l) Presto/2.12.407 Version/12.51 , D50u-D1-UHD/V1.5.16-UHD (Vizio, D50u-D1, Wireless)",
        "Mozilla/5.0 (X11; Fedora;Linux x86; rv:60.0) Gecko/20100101 Firefox/60.0",
        "Mozilla/5.0 (X11; Linux i586; rv:31.0) Gecko/20100101 Firefox/31.0",
        "Mozilla/5.0 (X11; U; Linux i586; de; rv:5.0) Gecko/20100101 Firefox/5.0",
        "Mozilla/5.0 (X11; Linux i686; rv:21.0) Gecko/20100101 Firefox/21.0",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.30 (KHTML, like Gecko) Ubuntu/11.04 Chromium/12.0.742.112 Chrome/12.0.742.112 Safari/534.30",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.34 (KHTML, like Gecko) Qt/4.8.2",
        "Mozilla/5.0 (X11; U; Linux x86_64; en-US; rv:1.9.2.4) Gecko/20100614 Ubuntu/10.04 (lucid) Firefox/3.6.4",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/534.24 (KHTML, like Gecko) Chrome/11.0.696.3 Safari/534.24",
        "Mozilla/5.0 (X11; Linux x86_64; rv:22.0) Gecko/20100101 Firefox/22.0",
        "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:50.0) Gecko/20100101 Firefox/50.0",
        "Mozilla/5.0 (X11; Linux x86_64; rv:52.0) Gecko/20100101 Firefox/52.0",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.24 Safari/537.36",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/42.0.2311.135 Safari/537.36",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko; Google Web Preview) Chrome/27.0.1453 Safari/537.36",
        "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:47.0) Gecko/20100101 Firefox/47.0",
        "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:57.0) Gecko/20100101 Firefox/57.0",
        "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko; Google Web Preview) Chrome/41.0.2272.118 Safari/537.36",
        "Mozilla/5.0 (X11; Linux i686) AppleWebKit/534.30 (KHTML, like Gecko) Slackware/Chrome/12.0.742.100 Safari/534.30",
        "Mozilla/5.0 (X11; Linux x86_64; rv:45.0) Gecko/20100101 Firefox/45.0",
        "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:42.0) Gecko/20100101 Firefox/42.0",
        "Mozilla/5.0 (SMART-TV; X11; Linux armv7l) AppleWebKit/537.42 (KHTML, like Gecko) Chromium/25.0.1349.2 Chrome/25.0.1349.2 Safari/537.42",
        "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:15.0) Gecko/20100101 Firefox/15.0",
        "Mozilla/5.0 (Macintosh; U; PPC; en-US; rv:1.0.2) Gecko/20030208 Netscape/7.02",
        "Mozilla/5.0 (Macintosh; U; PPC; en-US; rv:1.2.1) Gecko/20021130",
        "Mozilla/5.0 (Macintosh; U; PPC; en-US; rv:0.9.4) Gecko/20011130 Netscape6/6.2.1",
        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_6_6; en-en) AppleWebKit/533.19.4 (KHTML, like Gecko) Version/5.0.3 Safari/533.19.4",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/534.59.10 (KHTML, like Gecko) Version/5.1.9 Safari/534.59.10",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_5) AppleWebKit/603.3.8 (KHTML, like Gecko) Version/10.1.2 Safari/603.3.8",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_3) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/7046A194A",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10; rv:33.0) Gecko/20100101 Firefox/33.0",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/601.7.8 (KHTML, like Gecko)",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/601.7.7 (KHTML, like Gecko) Version/9.1.2 Safari/601.7.7",
        "Mozilla/5.0 (Macintosh; U; Intel Mac OS X 10_5_4; de-de) AppleWebKit/525.18 (KHTML, like Gecko) Version/3.1.2 Safari/525.20.1",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.1.2 Safari/605.1.15",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5) AppleWebKit/537.78.2 (KHTML, like Gecko) Version/6.1.6 Safari/537.78.2",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:16.0) Gecko/20100101 Firefox/16.0",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_3) AppleWebKit/601.4.4 (KHTML, like Gecko) Version/9.0.3 Safari/601.4.4",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/600.5.17 (KHTML, like Gecko) Version/8.0.5 Safari/600.5.17",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_6_8) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/49.0.2623.112 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.11; rv:45.0) Gecko/20100101 Firefox/45.0",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_8_5) AppleWebKit/600.8.9 (KHTML, like Gecko) Version/6.2.8 Safari/537.85.17",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:48.0) Gecko/20100101 Firefox/48.0",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_10_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.89 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/602.1.50 (KHTML, like Gecko) Version/10.0 Safari/602.1.50",
        "Mozilla/5.0 (Macintosh; U; PPC Mac OS X; en) AppleWebKit/417.9 (KHTML, like Gecko) Safari/417.8",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/600.1.17 (KHTML, like Gecko) Version/7.1 Safari/537.85.10",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.0.1 Safari/605.1.15",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_3) AppleWebKit/604.5.6 (KHTML, like Gecko) Version/11.0.3 Safari/604.5.6",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/75.0.3770.142 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_6) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Safari/605.1.15",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_3) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.12; rv:57.0) Gecko/20100101 Firefox/57.0",
        "Mozilla/5.0 (Series40; Nokia200/11.64; Profile/MIDP-2.1 Configuration/CLDC-1.1) Gecko/20100401 S40OviBrowser/2.0.2.68.14",
        "Mozilla/5.0 (Linux; U; Android 4.2.2; de-de; Lenovo S6000L-F Build/JDQ39) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Safari/534.30",
        "Mozilla/5.0 (S60V5; U; en-us; Nokia5250)/UC Browser8.2.0.132/50/355/UCWEB Mobile",
        "Mozilla/5.0 (Series40; Nokia200/11.56; Profile/MIDP-2.1 Configuration/CLDC-1.1) Gecko/20100401 S40OviBrowser/2.2.0.0.33",
        "Opera/9.80 (S60; SymbOS; Opera Mobi/SYB-1204232254; U; en-GB) Presto/2.10.254 Version/12.00",
        "Mozilla/5.0 (Series40; Nokia200/11.64; Profile/MIDP-2.1 Configuration/CLDC-1.1) Gecko/20100401 S40OviBrowser/2.3.0.0.48",
        "Mozilla/5.0 (Linux; Android 5.0.2; Lenovo S60-a Build/LRX22G) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.83 Mobile Safari/537.36",
        "Mozilla/5.0 (Series40; NokiaC2-03/06.51; Profile/MIDP-2.1 Configuration/CLDC-1.1) Gecko/20100401 S40OviBrowser/1.0.1.21.8.2",
        "Mozilla/5.0 (Linux; Android 5.1; MS60 Build/LMY47D) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.111 Mobile Safari/537.36",
        "Mozilla/5.0 (SymbianOS/9.1; U; en-us) AppleWebKit/413 (KHTML, like Gecko) Safari/413",
        "Mozilla/5.0 (Linux; Android 4.2.2; IdeaTab S6000-F Build/JDQ39) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/47.0.2526.76 Safari/537.36",
        "Mozilla/5.0 (SymbianOS/9.3; Series60/3.2 NokiaE5-00/071.003; Profile/MIDP-2.1 Configuration/CLDC-1.1 ) AppleWebKit/533.4 (KHTML, like Gecko) NokiaBrowser/7.3.1.26 Mobile Safari/533.4 3gpp-gba",
        "Mozilla/5.0 (Series30Plus; Nokia225/20.10.11; Profile/Series30Plus Configuration/Series30Plus) Gecko/20100401 S40OviBrowser/3.8.1.2.0612",
        "Opera/9.80 (Series 60; Opera Mini/7.1.32444/98.16; U; pl) Presto/2.12.423 Version/12.16",
        "Mozilla/5.0 (Series40; Nokia2055/03.20; Profile/MIDP-2.1 Configuration/CLDC-1.1) Gecko/20100401 S40OviBrowser/5.5.0.0.27",
        "Mozilla/5.0 (Linux; Android 4.2.2; IdeaTab S6000-H Build/JDQ39) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36",
        "Mozilla/5.0 (Linux; Android 6.0.1; S60 Build/MMB29M) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.87 Mobile Safari/537.36",
        "Opera/9.80 (S60; SymbOS; Opera Mobi/SYB-1111151949; U; en-GB) Presto/2.9.201 Version/11.50",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.169 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/17.17134",
        "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko",
        "Mozilla/5.0 (Windows NT 5.1; rv:7.0.1) Gecko/20100101 Firefox/7.0.1",
        "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:54.0) Gecko/20100101 Firefox/54.0",
        "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:40.0) Gecko/20100101 Firefox/40.1",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.140 Safari/537.36 Edge/18.17763",
        "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:18.0) Gecko/20100101 Firefox/18.0",
        "Mozilla/5.0 (Windows NT 5.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/46.0.2490.71 Safari/537.36",
        "Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.1 (KHTML, like Gecko) Chrome/21.0.1180.83 Safari/537.1",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Safari/537.36 Edge/14.14393",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063",
        "Mozilla/5.0 (Windows NT 5.1; rv:36.0) Gecko/20100101 Firefox/36.0",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36",
        "Mozilla/5.0 (Windows NT 5.1; rv:33.0) Gecko/20100101 Firefox/33.0",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36",
        "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2)",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299",
        "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0",
        "Mozilla/5.0 (Linux; Android 4.4.2; iris510 Build/iris510) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36",
        "Opera/9.80 (Windows Mobile; Opera Mini/5.1.21594/28.2725; U; en) Presto/2.8.119 Version/11.10",
        "Mozilla/5.0 (Linux; Android 4.4.2; iris353 Build/iris353) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 4.4.2; iris700 Build/iris700) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1; iris 600 Build/LMY47I; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1; iris 505 Build/LMY47I; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 4.4.2; iris360 Build/iris360) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1; iris 810 Build/LMY47I; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/46.0.2490.76 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 4.4.2; iris800 Build/iris800) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36",
        "Mozilla/5.0 (Windows NT; U; en) AppleWebKit/525.18.1 (KHTML, like Gecko) Version/3.1.1 Iris/1.1.9 Safari/525.20",
        "Mozilla/5.0 (Linux; U; Android 4.2.2; en-us; iris354 Build/iris354) AppleWebKit/534.30 (KHTML, like Gecko) Version/4.0 Mobile Safari/534.30",
        "Mozilla/5.0 (Linux; Android 4.4.2; iris708 Build/KOT49H) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/30.0.0.0 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1; iris 515 Build/LMY47I; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/43.0.2357.121 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 8.1.0; iris88 Build/O11019; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/64.0.3282.137 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1; iris 550 Build/LRX21M) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/37.0.0.0 Mobile Safari/537.36;",
        "Mozilla/5.0 (Linux; Android 6.0; iris 820 Build/MRA58K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/48.0.2564.106 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 6.0; iris702 Build/MRA58K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/48.0.2564.106 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 6.0; iris50 Build/MRA58K; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/55.0.2883.91 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 6.0; iris 870) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.157 Mobile Safari/537.36",
        "Mozilla/5.0 (Linux; Android 5.1; iris 758 4G Build/LMY47D) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.91 Mobile Safari/537.36",
        "Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; Lumia 635) like iPhone OS 7_0_3 Mac OS X AppleWebKit/537 (KHTML, like Gecko) Mobile Safari/537",
        "Mozilla/5.0 (compatible; MSIE 9.0; Windows Phone OS 7.5; Trident/5.0; IEMobile/9.0; NOKIA; Lumia 710)",
        "Mozilla/5.0 (compatible; MSIE 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 520)",
        "Mozilla/5.0 (Windows Phone 10.0; Android 6.0.1; NOKIA; Lumia 830) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/51.0.2704.79 Mobile Safari/537.36 Edge/14.14393",
        "Mozilla/5.0 (Windows Phone 10.0; Android 6.0.1; Xbox; Xbox One) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Mobile Safari/537.36 Edge/16.16299",
        "Mozilla/5.0 (Windows Phone 10.0; Android 6.0.1; Microsoft; RM-1067) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Mobile Safari/537.36 Edge/15.15063",
        "Mozilla/5.0 (Windows Phone 10.0; Android 6.0.1; Microsoft; Lumia 650) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Mobile Safari/537.36 Edge/15.15254",
        "Mozilla/5.0 (Mobile; Windows Phone 8.1; Android 4.0; ARM; Trident/7.0; Touch; rv:11.0; IEMobile/11.0; NOKIA; 909) like iPhone OS 7_0_3 Mac OS X AppleWebKit/537 (KHTML, like Gecko) Mobile Safari/537",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.7.01001)",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; FSL 7.0.5.01003)",
        "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:12.0) Gecko/20100101 Firefox/12.0",
        "Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8",
        "Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1",
        "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:11.0) Gecko/20100101 Firefox/11.0",
        "Mozilla/5.0 (X11; U; Linux x86_64; de; rv:1.9.2.8) Gecko/20100723 Ubuntu/10.04 (lucid) Firefox/3.6.8",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.0.3705)",
        "Mozilla/5.0 (Windows NT 5.1; rv:13.0) Gecko/20100101 Firefox/13.0.1",
        "Mozilla/5.0 (Windows NT 6.1; WOW64; rv:13.0) Gecko/20100101 Firefox/13.0.1",
        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; Trident/4.0; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729)",
        "Opera/9.80 (Windows NT 5.1; U; en) Presto/2.10.289 Version/12.01",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; SV1; .NET CLR 2.0.50727)",
        "Mozilla/5.0 (Windows NT 5.1; rv:5.0.1) Gecko/20100101 Firefox/5.0.1",
        "Mozilla/5.0 (Windows NT 6.1; rv:5.0) Gecko/20100101 Firefox/5.02",
        "Mozilla/5.0 (Windows NT 6.0) AppleWebKit/535.1 (KHTML, like Gecko) Chrome/13.0.782.112 Safari/535.1",
        "Mozilla/4.0 (compatible; MSIE 6.0; MSIE 5.5; Windows NT 5.0) Opera 7.02 Bork-edition [en]",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36",
        "Mozilla/5.0 (Windows NT 5.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36",
        "Mozilla/5.0 (Windows NT 6.2; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.90 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.130 Safari/537.36",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows 98)",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.105 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/52.0.2743.116 Safari/537.36 Edge/15.15063",
        "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/60.0.3112.113 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/67.0.3396.99 Safari/537.36",
        "Mozilla/5.0 (Windows NT 6.3; WOW64; Trident/7.0; rv:11.0) like Gecko",
        "Mozilla/5.0 (Windows NT 5.1; rv:36.0) Gecko/20100101 Firefox/36.0",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/81.0.4044.138 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.116 Safari/537.36",
        "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0; .NET CLR 1.1.4322)",
        "Mozilla/5.0 (Windows NT 5.1; rv:33.0) Gecko/20100101 Firefox/33.0",
        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64; Trident/5.0)",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36 Edge/16.16299",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36",
        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)",
        "Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 5.1; .NET CLR 1.1.4322)",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:66.0) Gecko/20100101 Firefox/66.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36",
        "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2)",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/65.0.3325.181 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:50.0) Gecko/20100101 Firefox/50.0",
        "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:52.0) Gecko/20100101 Firefox/52.0",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/84.0.4147.135 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/85.0.4183.102 Safari/537.36",
        "Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.1; WOW64; Trident/6.0)",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0) Gecko/20100101 Firefox/67.0",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36",
        "Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/64.0.3282.186 Safari/537.36",
        "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/57.0.2987.133 Safari/537.36",
        "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3163.100 Safari/537.36",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_4) AppleWebKit/605.1.15 (KHTML, like Gecko)",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_12_6) AppleWebKit/603.3.8 (KHTML, like Gecko)",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.1 Safari/605.1.15",
        "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_14_5) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/12.1.1 Safari/605.1.15",
    ];
    var r = ua[Math.floor(Math.random() * ua.length)];
    if (Zxvw == 1)
        while (true) {
            if (r.indexOf("Android") == -1 && r.indexOf("Phone") == -1 && r.indexOf("Blackberry") == -1 && r.indexOf("Nokia") == -1 && r.indexOf("SymbianOS") == -1) break;
            r = ua[Math.floor(Math.random() * ua.length)];
        }
    return r;
}